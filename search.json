[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Time Series",
    "section": "",
    "text": "Professor Youngmi Lee, Department of Statistics, Jeonbuk National University\n2nd semester, 2023\n\n\n\n\n\n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nDec 4, 2023\n\n\n[TS] 10. Seasonal ARIMA 실습\n\n\n김보람 \n\n\n\n\nDec 4, 2023\n\n\n[TS] 09. Forecast 실습\n\n\n김보람 \n\n\n\n\nNov 30, 2023\n\n\n[TS] HW03_Answer\n\n\n김보람 \n\n\n\n\nNov 28, 2023\n\n\n[TS] HW04\n\n\n김보람 \n\n\n\n\nNov 23, 2023\n\n\n[TS] CH07. ARIMA 실습\n\n\n김보람 \n\n\n\n\nNov 21, 2023\n\n\n[TS] CH08. Fit ARIMA 실습\n\n\n김보람 \n\n\n\n\nNov 3, 2023\n\n\n[TS] CH06. ARMA 실습\n\n\n김보람 \n\n\n\n\nNov 2, 2023\n\n\n[TS] HW03\n\n\n김보람 \n\n\n\n\nOct 31, 2023\n\n\n[TS] CH05. 확률과정 실습\n\n\n김보람 \n\n\n\n\nOct 26, 2023\n\n\n[TS] HW02_Answer\n\n\n김보람 \n\n\n\n\nOct 24, 2023\n\n\n[TS] HW02\n\n\n김보람 \n\n\n\n\nOct 20, 2023\n\n\n[TS] HW01_Answer\n\n\n김보람 \n\n\n\n\nOct 15, 2023\n\n\n[TS] CH04_02. 평활에 의한 분할법 실습\n\n\n김보람 \n\n\n\n\nOct 15, 2023\n\n\n[TS] CH04_01. 추세에 의한 분할법 실습\n\n\n김보람 \n\n\n\n\nOct 14, 2023\n\n\n[TS] CH03. 평활법 실습\n\n\n김보람 \n\n\n\n\nOct 10, 2023\n\n\n[TS] HW01\n\n\n김보람 \n\n\n\n\nOct 2, 2023\n\n\n[TS] CH02. 실습2(추세모형)\n\n\n김보람 \n\n\n\n\nSep 30, 2023\n\n\n[TS] CH02. 실습1(추세모형)\n\n\n김보람 \n\n\n\n\nSep 17, 2023\n\n\n[TS] CH01. 실습\n\n\n김보람 \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/[TS] 05.html",
    "href": "posts/[TS] 05.html",
    "title": "[TS] CH05. 확률과정 실습",
    "section": "",
    "text": "해당 자료는 전북대학교 이영미 교수님 2023고급시계열분석 자료임"
  },
  {
    "objectID": "posts/[TS] 05.html#sin",
    "href": "posts/[TS] 05.html#sin",
    "title": "[TS] CH05. 확률과정 실습",
    "section": "sin",
    "text": "sin\n\nt &lt;- 1:100\nz &lt;- sin(t*pi/3) #주기6\nplot.ts(z)\npoints(t,z, pch=16)\n\n\n\n\n\nforecast::tsdisplay(z)\n\n\n\n\n\n주기가 6인게 좀 튀어나와있음\n\n\ns &lt;- 12\nz &lt;- sin(2*t*pi/s) + rnorm(100,0,0.4)\nforecast::tsdisplay(z)\n\n\n\n\n\n오차있고 주기가 12인거\n\n\ns &lt;- 12\nz &lt;- 0.2*t + 2*sin(2*t*pi/s) + rnorm(100,0,1.2)\nforecast::tsdisplay(z)\n\n\n\n\n\n천천히 감소하다가 중간에 튀어나온게있음(계절성분때문에)"
  },
  {
    "objectID": "posts/[TS] 05.html#population",
    "href": "posts/[TS] 05.html#population",
    "title": "[TS] CH05. 확률과정 실습",
    "section": "population",
    "text": "population\n\nz &lt;- scan(\"population.txt\")\nforecast::tsdisplay(z)\n\n\n\n\n\n선형 추세: ACF가 천천히 감소하고, PACF는 1차시만.."
  },
  {
    "objectID": "posts/[TS] 05.html#depart",
    "href": "posts/[TS] 05.html#depart",
    "title": "[TS] CH05. 확률과정 실습",
    "section": "depart",
    "text": "depart\n\nz &lt;-scan(\"depart.txt\")\nforecast::tsdisplay(z, lag.max=60)\n\n\n\n\n\n계절성분 있고, 추세는 거의 없다.\n추세가 있다면 acf가 감소함\n튀어나오는 부분-&gt; 계절성분 때문에\nACF는 12,24,36,48,60 에서 튀어나오는데 갈수록 적게 튀어나옴.. -&gt; 계절주기가 12이면 12,24,36이 비슷한 영향?? 이라 생각할 수 있어.\nPACF는 12,36을 알면.. 오차만 남으니까 24만 튀어나옴. 24만 유의미해."
  },
  {
    "objectID": "posts/[TS] 05.html#mindex",
    "href": "posts/[TS] 05.html#mindex",
    "title": "[TS] CH05. 확률과정 실습",
    "section": "mindex",
    "text": "mindex\n\nz &lt;- scan(\"mindex.txt\")\nforecast::tsdisplay(z)\n\n\n\n\n\nPACF에서 조금 튀어나오는 건.. 무시.."
  },
  {
    "objectID": "posts/[TS] 05.html#stock",
    "href": "posts/[TS] 05.html#stock",
    "title": "[TS] CH05. 확률과정 실습",
    "section": "stock",
    "text": "stock\n\nz &lt;- scan(\"stock.txt\")\nforecast::tsdisplay(z)\n\n\n\n\n\n추세가 있으니 ACF가 천천히 줄어들고, PACF가 첫번째만 살고 나머지는 다 0"
  },
  {
    "objectID": "posts/[TS] 05.html#koreapass",
    "href": "posts/[TS] 05.html#koreapass",
    "title": "[TS] CH05. 확률과정 실습",
    "section": "koreapass",
    "text": "koreapass\n\nz &lt;- scan(\"koreapass.txt\")\nforecast::tsdisplay(z)\n\n\n\n\n\n이분산성이 있으니 로그변환을 하자\n\n\nlogz &lt;- log(z)\nforecast::tsdisplay(logz)\n\n\n\n\n\n시도표는 변하지만 ACF랑 PACF는 변하지 않아. 로그변환한거랑은 상관없다\n\n\ndiff_log_z &lt;- diff(log(z))\nforecast::tsdisplay(diff_log_z)"
  },
  {
    "objectID": "posts/[TS] 07.html",
    "href": "posts/[TS] 07.html",
    "title": "[TS] CH07. ARIMA 실습",
    "section": "",
    "text": "분산이 일정하지 않은 경우\n\nz &lt;- AirPassengers\nz\n\n\nA Time Series: 12 × 12\n\n\n\nJan\nFeb\nMar\nApr\nMay\nJun\nJul\nAug\nSep\nOct\nNov\nDec\n\n\n\n\n1949\n112\n118\n132\n129\n121\n135\n148\n148\n136\n119\n104\n118\n\n\n1950\n115\n126\n141\n135\n125\n149\n170\n170\n158\n133\n114\n140\n\n\n1951\n145\n150\n178\n163\n172\n178\n199\n199\n184\n162\n146\n166\n\n\n1952\n171\n180\n193\n181\n183\n218\n230\n242\n209\n191\n172\n194\n\n\n1953\n196\n196\n236\n235\n229\n243\n264\n272\n237\n211\n180\n201\n\n\n1954\n204\n188\n235\n227\n234\n264\n302\n293\n259\n229\n203\n229\n\n\n1955\n242\n233\n267\n269\n270\n315\n364\n347\n312\n274\n237\n278\n\n\n1956\n284\n277\n317\n313\n318\n374\n413\n405\n355\n306\n271\n306\n\n\n1957\n315\n301\n356\n348\n355\n422\n465\n467\n404\n347\n305\n336\n\n\n1958\n340\n318\n362\n348\n363\n435\n491\n505\n404\n359\n310\n337\n\n\n1959\n360\n342\n406\n396\n420\n472\n548\n559\n463\n407\n362\n405\n\n\n1960\n417\n391\n419\n461\n472\n535\n622\n606\n508\n461\n390\n432\n\n\n\n\n\n\nclass(z)\n\n'ts'\n\n\n\nplot.ts(z, main = \"Time series plot for Airpassengers data\")\n\n\n\n\n\n추세, 이분산, 계절성분이 있다.\n\n- Box-Cox transformation\n\\[f_\\lambda(Z_t) = \\begin{cases}\n\\dfrac{Z_t^\\lambda-1}{\\lambda}, & Z_t \\geq 0, \\lambda&gt;0 \\\\\nlog(Z_t), & \\lambda=0\n\\end{cases}\\]\n\nforecast::BoxCox.lambda(z, method='loglik')\n\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n\n\n\n0.2\n\n\n\n최적의 람다를 찾아줌\n\n\nforecast::BoxCox.lambda(z, method = \"guerrero\")\n\n-0.294715585559316\n\n\n- ts객체가 들어가야함\n\nforecast::BoxCox(z,lambda= forecast::BoxCox.lambda(z, method='loglik'))\n\n\nA Time Series: 12 × 12\n\n\n\nJan\nFeb\nMar\nApr\nMay\nJun\nJul\nAug\nSep\nOct\nNov\nDec\n\n\n\n\n1949\n7.847352\n7.982144\n8.276536\n8.215632\n8.047493\n8.336343\n8.583833\n8.583833\n8.356042\n8.004073\n7.658338\n7.982144\n\n\n1950\n7.915451\n8.153584\n8.452835\n8.336343\n8.132639\n8.602141\n8.965606\n8.965606\n8.762630\n8.296592\n7.892911\n8.433699\n\n\n1951\n8.528312\n8.620350\n9.094641\n8.848653\n8.998313\n9.094641\n9.412543\n9.412543\n9.188405\n8.831619\n8.546920\n8.899258\n\n\n1952\n8.981998\n9.126173\n9.324566\n9.141833\n9.172949\n9.677811\n9.835957\n9.987634\n9.554566\n9.294754\n8.998313\n9.339379\n\n\n1953\n9.368824\n9.368824\n9.912567\n9.899908\n9.823034\n10.000000\n10.250736\n10.342064\n9.925183\n9.582316\n9.126173\n9.441397\n\n\n1954\n9.484251\n9.249564\n9.899908\n9.797051\n9.887205\n10.250736\n10.666479\n10.571969\n10.192525\n9.823034\n9.470023\n9.823034\n\n\n1955\n9.987634\n9.874459\n10.285240\n10.308071\n10.319435\n10.799092\n11.262611\n11.107788\n10.768883\n10.364560\n9.925183\n10.409160\n\n\n1956\n10.475107\n10.398058\n10.819103\n10.778978\n10.829071\n11.351000\n11.678616\n11.613495\n11.181384\n10.707761\n10.330766\n10.707761\n\n\n1957\n10.799092\n10.656090\n11.190490\n11.117061\n11.181384\n11.750682\n12.078927\n12.093594\n11.605283\n11.107788\n10.697481\n11.004343\n\n\n1958\n11.042269\n10.829071\n11.244701\n11.117061\n11.253666\n11.852637\n12.265784\n12.363141\n11.605283\n11.217686\n10.748614\n11.013858\n\n\n1959\n11.226711\n11.061098\n11.621691\n11.538992\n11.734774\n12.130041\n12.649244\n12.719537\n12.064211\n11.629871\n11.244701\n11.613495\n\n\n1960\n11.710799\n11.497014\n11.726798\n12.049443\n12.130041\n12.564701\n13.102063\n13.007960\n12.383721\n12.049443\n11.488567\n11.829327\n\n\n\n\n\n\nforecast::BoxCox(z,lambda= 'auto')\n\n\nA Time Series: 12 × 12\n\n\n\nJan\nFeb\nMar\nApr\nMay\nJun\nJul\nAug\nSep\nOct\nNov\nDec\n\n\n\n\n1949\n2.548535\n2.561426\n2.588461\n2.582990\n2.567558\n2.593773\n2.615143\n2.615143\n2.595510\n2.563492\n2.529884\n2.561426\n\n\n1950\n2.555089\n2.577352\n2.603953\n2.593773\n2.575434\n2.616686\n2.646282\n2.646282\n2.629992\n2.590249\n2.552929\n2.602296\n\n\n1951\n2.610433\n2.618215\n2.656336\n2.636968\n2.648852\n2.656336\n2.680161\n2.680161\n2.663501\n2.635595\n2.612017\n2.641022\n\n\n1952\n2.647572\n2.658759\n2.673698\n2.659957\n2.662328\n2.699069\n2.709945\n2.720109\n2.690390\n2.671486\n2.648852\n2.674793\n\n\n1953\n2.676962\n2.676962\n2.715111\n2.714262\n2.709067\n2.720927\n2.737151\n2.742897\n2.715955\n2.692360\n2.658759\n2.682259\n\n\n1954\n2.685357\n2.668111\n2.714262\n2.707296\n2.713408\n2.737151\n2.762643\n2.756996\n2.733443\n2.709067\n2.684331\n2.709067\n\n\n1955\n2.720109\n2.712549\n2.739332\n2.740768\n2.741481\n2.770427\n2.796406\n2.787934\n2.768668\n2.744300\n2.715955\n2.747066\n\n\n1956\n2.751119\n2.746379\n2.771588\n2.769257\n2.772164\n2.801154\n2.818211\n2.814887\n2.791987\n2.765084\n2.742191\n2.765084\n\n\n1957\n2.770427\n2.762027\n2.792485\n2.788447\n2.791987\n2.821853\n2.837961\n2.838662\n2.814466\n2.787934\n2.764478\n2.782161\n\n\n1958\n2.784288\n2.772164\n2.795437\n2.788447\n2.795922\n2.826939\n2.846793\n2.851301\n2.814466\n2.793969\n2.767483\n2.782696\n\n\n1959\n2.794460\n2.785340\n2.815307\n2.811044\n2.821052\n2.840400\n2.864196\n2.867286\n2.837255\n2.815726\n2.795437\n2.814887\n\n\n1960\n2.819842\n2.808860\n2.820650\n2.836545\n2.840400\n2.860440\n2.883580\n2.879651\n2.852247\n2.836545\n2.808419\n2.825783\n\n\n\n\n\n\nt &lt;- 1:length(z)\n\n- linear model이 들어가야함\n\nMASS::boxcox(z~t)\n\n\n\n\n\n가능도함수를 가장 크게 해주는 람다를 찾아줌\n\n\nbc &lt;- MASS::boxcox(z~t)\n\n\n\n\n\nbc\n\n\n    $x\n        \n-2-1.95959595959596-1.91919191919192-1.87878787878788-1.83838383838384-1.7979797979798-1.75757575757576-1.71717171717172-1.67676767676768-1.63636363636364-1.5959595959596-1.55555555555556-1.51515151515152-1.47474747474747-1.43434343434343-1.39393939393939-1.35353535353535-1.31313131313131-1.27272727272727-1.23232323232323-1.19191919191919-1.15151515151515-1.11111111111111-1.07070707070707-1.03030303030303-0.98989898989899-0.949494949494949-0.909090909090909-0.868686868686869-0.828282828282828-0.787878787878788-0.747474747474747-0.707070707070707-0.666666666666667-0.626262626262626-0.585858585858586-0.545454545454545-0.505050505050505-0.464646464646465-0.424242424242424-0.383838383838384-0.343434343434343-0.303030303030303-0.262626262626263-0.222222222222222-0.181818181818182-0.141414141414141-0.101010101010101-0.0606060606060606-0.02020202020202010.02020202020202030.0606060606060610.1010101010101010.1414141414141410.1818181818181820.2222222222222220.2626262626262630.3030303030303030.3434343434343430.3838383838383840.4242424242424240.4646464646464650.5050505050505050.5454545454545460.5858585858585860.6262626262626260.6666666666666670.7070707070707070.7474747474747480.7878787878787880.8282828282828290.8686868686868690.9090909090909090.949494949494950.989898989898991.030303030303031.070707070707071.111111111111111.151515151515151.191919191919191.232323232323231.272727272727271.313131313131311.353535353535351.393939393939391.434343434343431.474747474747471.515151515151521.555555555555561.59595959595961.636363636363641.676767676767681.717171717171721.757575757575761.79797979797981.838383838383841.878787878787881.919191919191921.959595959595962\n\n    $y\n        \n-198.799073449348-195.37039950111-191.94968992843-188.537493633138-185.134338095595-181.740730731914-178.357219945539-174.984497973015-171.623294248388-168.274441727843-164.938858510347-161.617523276341-158.311587211365-155.022246206941-151.750870096316-148.498954283398-145.268092393427-142.06012344218-138.876948334787-135.720727426085-132.593785460871-129.498596427508-126.437961568566-123.414763422835-120.432235059637-117.493804438979-114.603099888283-111.764134954901-108.981017342337-106.258254630603-103.600549284161-101.012815323948-98.5003233041335-96.0684242249103-93.722782423167-91.4691951449285-89.3135682143162-87.2619677902398-85.3204701215757-83.4951346102045-81.7920100099495-80.2169681784438-78.7756511898379-77.4735695142388-76.315650880116-75.3066206646679-74.4506111638586-73.7510789691647-73.2111844477151-72.8329692383655-72.6181345825874-72.5674858952699-72.6809327642697-72.9580133738323-73.3970321104162-73.9959619454446-74.7519438462799-75.6613884991687-76.7204216050323-77.9243367495376-79.2682324587806-80.7467723383356-82.3542850745746-84.0850062620454-85.9329380987263-87.892044167354-89.9563047616737-92.1197117342045-94.3763431162309-96.7204827466603-99.1464739467718-101.648962801429-104.222775173309-106.862922356751-109.564796705531-112.323883247451-115.136059766643-117.997408428711-120.904219103619-123.853155375878-126.840969011805-129.864771826518-132.921839900135-136.009634355363-139.125908387669-142.268485619794-145.435470690635-148.625080760812-151.835678635438-155.065828872171-158.3141482545-161.579455664176-164.860640976599-168.156694471724-171.466728508306-174.78989955717-178.125534851951-181.473010287635-184.83167793835-188.200864446038\n\n\n\n\n\nwhich.max(bc$y)\n\n52\n\n\n\nbc$x[which.max(bc$y)]\n\n0.060606060606061\n\n\n\nz_boxcox &lt;- forecast::BoxCox(z, lambda=bc$x[which.max(bc$y)])\n\n\npar(mfrow=c(2,2))\nplot.ts(z, main = \"Original\")\nplot.ts(log(z), main = \"log(z)\")\nplot.ts(sqrt(z),, main = \"sqrt(z)\")\nplot.ts(z_boxcox, main = \"Boxcox_lambda=0.06\")\ngraphics.off()\n\n\n\n\n\n로그변환을 수행한다.\n\n\n\n확률적 추세 제거\n- 확률보행과정의 정상화\n\\(Z_t = Z_{t−1} + ϵ_t, ϵ_t ∼ WN(0, σ^2)\\) - AR(1) with \\(ϕ = 1\\)\n\ne &lt;- round(rnorm(10),2)\nz &lt;- cumsum(e)\nplot.ts(z)\n\n\n\n\n\ne &lt;- round(rnorm(1000),2)\nz &lt;- cumsum(e)\nforecast::tsdisplay(z, lag.max=24)\n\n\n\n\n\n추세라기 보단 분산이 커짐.. —&gt; 확률적 추세\nACF가 아주 천천히 감소하므로 확률적 추세가 있다고 할 수 있다\n1차 차분을 수행한다\n\n\\(ΔZ_t = Z_t − Z_{t−1} = ϵ_t\\)\n\n차분한 확률보행과정의 시도표 및 ACF/PACF 그림\n\n- diff:차분함수\n예시\n\na &lt;- c(3,7,2,9)\n\n\ndiff(a)\n\n\n4-57\n\n\n4: 7-3 : a[2]-a[1]\n-5: 2-7 : a[3] - a[2]\n7: 9-2 : a[4] - a[3]\n\ndiff(a,2)\n\n\n-12\n\n\n-1: 2-3 : a[3] - a[1]\n2: 9-7: a[4] - a[2]\n\noptions(repr.plot.width = 12, repr.plot.height = 10)\nforecast::tsdisplay(diff(z), lag.max=24)\n\n\n\n\n\n차분을 했더니 정상 시계열이 됨.\n\n\\(ΔZ_t ∼ WN = ARMA(0, 0) ⇒ Z_t ∼ ARIMA(0, 1, 0)\\)\n\n로그변환한 Airpassengers data 에 대한 확률적 추세 확인\n\n\nlogz &lt;- log(AirPassengers)\noptions(repr.plot.width = 12, repr.plot.height = 6)\nplot.ts(logz)\n\n\n\n\n\n추세가 있다. 결정적 추세로 해도 될거 같기도 하고…\n\n\npar(mfrow=c(1,2))\nacf(logz)\npacf(logz)\n\n\n\n\n\n계절성분 떄문에 acf그래프가 중간에 내려오다가 볼록 튀어 나온 것\n\n\nacf(logz, lag.max=72)\n\n\n\n\n차분을 진행한다.\n\\(ΔZ_t = (1 − B)Z_t = Z_t − Z_{t−1}\\)\n\nd_log_z = diff(logz)\nplot.ts(d_log_z)\n\n\n\n\n\nforecast::tsdisplay(d_log_z, lag.max=36)\n\n\n\n\n여전히 계절성분이 남아있으므로, 계절차분 진행\n\\(Δ_{12}ΔZ_t = (1 − B^{12})(1 − B)Z_t = (1 − B^{12})(Z_t − Z_{t−1}) = Z_t − Z_{t−1} − Z_{t−12} − Z_{t−1}\\)\n\nds_d_log_z &lt;- diff(d_log_z, 12)\nplot.ts(ds_d_log_z)\n\n\n\n\n\nforecast::tsdisplay(ds_d_log_z, lag.max=36)\n\n\n\n\n\n하지만, 일반적으로 계절성분과 추세가 동시에 있는 경우 계절차분을 먼저 진행한다\n\n\nds_log_z &lt;- diff(logz, 12)\nts.plot(ds_log_z)\n\n\n\n\n\nforecast::tsdisplay(ds_log_z, lag.max=36)\n\n\n\n\n확률적추세가 있어 보이지만, AR 모형에서 ACF가 감소하는 형태라고 할 수도 있다. 이 경우에는 추세를 제거하기 위한 차분을 더 진행하는 것을 결정하는 것이 어렵다.\n\n\ndepart data\n\nz &lt;-scan(\"depart.txt\")\nplot.ts(z)\n\n\n\n\n\nlog_z &lt;- log(z)\nforecast::tsdisplay(log_z, lag.max=36)\n\n\n\n\n\n\n계절차분을 먼저 진행\n\nds_log_z &lt;- diff(log_z, 12)\nforecast::tsdisplay(ds_log_z, lag.max=36)\n\n\n\n\n\n이 데이터 시도표 상으로는 확률적인 추세가 있어보이지만, 역시 ACF만 보고 차분이 필 요한 가에 대한 결정을 하는 것이 쉽지 않다.\n\n\n\n여러가지 Simulation\n\nn &lt;- 200\nx = arima.sim(n=n, list(order=c(1,0,0), ar=0.5)) #AR(1)\nz = arima.sim(n=n, list(order=c(1,1,0), ar=0.5)) #ARIMA(1,1,0)\n\n\nforecast::tsdisplay(x, lag.max=36, main = \"AR(1)\")\n\n\n\n\n\nforecast::tsdisplay(z, lag.max=36, main = \"ARIMA(1,1,0)\")\n\n\n\n\n\nacf가 지수적으로 감소하고 있다. 차분이 필요하다.\nARIMA(1,1,0)모형은 차분하면 AR(1)모형이 된다.\n\n\nforecast::tsdisplay(diff(z), lag.max=36, main = \"(1-B)z\")\n\n\n\n\n\nn &lt;- 200\nx = arima.sim(n=n, list(order=c(0,0,1), ma=-0.8)) #MA(1)\nz = arima.sim(n=n, list(order=c(0,1,1), ma=-0.8)) #ARIMA(0,1,1)\n\n\nforecast::tsdisplay(x, lag.max=36, main = \"MA(1)\")\n\n\n\n\n\nforecast::tsdisplay(z, lag.max=36, main = \"ARIMA(0,1,1)\")\n\n\n\n\n\nforecast::tsdisplay(diff(z), lag.max=36, main = \"(1-B)z\")\n\n\n\n\n\nn &lt;- 200\nx = arima.sim(n=n, list(order=c(1,0,1), ar=0.5, ma=-0.8)) #ARMA(1,1)\nz = arima.sim(n=n, list(order=c(1,1,1), ar=0.5, ma=-0.8)) #ARIMA(1,1,1)\n\n\nforecast::tsdisplay(x, lag.max=36, main = \"ARMA(1,1)\")\n\n\n\n\n\nforecast::tsdisplay(z, lag.max=36, main = \"ARIMA(1,1,1)\")\n\n\n\n\n\nforecast::tsdisplay(diff(z), lag.max=36, main = \"(1-B)z\")\n\n\n\n\n\n\n과대차분\n\n## ARIMA(0,1,1)\nz = arima.sim(n=1000, list(order=c(0,1,1), ma=0.5))\n\n\nforecast::tsdisplay(z, lag.max=36, main = \"ARIMA(0,1,1)\")\n\n\n\n\n\n#한 번 차분\nd_z &lt;- diff(z)\nforecast::tsdisplay(d_z, lag.max=36, main = \"ARIMA(0,1,1)\")\n\n\n\n\n\n# 한 번 더 차분\nd2_z &lt;- diff(d_z)\nforecast::tsdisplay(d2_z, lag.max=36, main = \"ARIMA(0,1,1)\")\n\n\n\n\n\n한 번 차분을 하면 정상시계열이 된다. 그리고 한 번 더 차분해도 마찬가지로 정상시계 열이다\n\n\nsd(z)\nsd(diff(z))\nsd(diff(diff(z)))\n\n8.72895467185367\n\n\n1.18251197758341\n\n\n1.2484612507557\n\n\n\n차분을 두번 하고 나면 분산이 커진다. 이를 과대차분이라고 한다"
  },
  {
    "objectID": "posts/[TS] HW03.html",
    "href": "posts/[TS] HW03.html",
    "title": "[TS] HW03",
    "section": "",
    "text": "해당 자료는 전북대학교 이영미 교수님 2023고급시계열분석 자료임"
  },
  {
    "objectID": "posts/[TS] HW03.html#section-2",
    "href": "posts/[TS] HW03.html#section-2",
    "title": "[TS] HW03",
    "section": "(1)",
    "text": "(1)\n\\(Z_t = ε_t − ε_{t−1} − ε_{t−2}\\)\n\\(E(Z_t) = E(ε_t − ε_{t−1} − ε_{t−2}) = E(ε_t)-E(ε_{t-1}) - E(ε_{t-2}) = 0\\)\n\\(Var(Z_t) = Var(ε_t − ε_{t−1} − ε_{t−2}) = Var(ε_t)+Var(\\epsilon_{t-1}) + Var(ε_{t−2}) = 1+1+1=3\\)\n\n\\(\\epsilon_t\\)는 WN이므로 \\(Cov(\\epsilon_t, \\epsilon_{t+h})=0\\)\n\n\\(Cov(Z_t,Z_{t-h}) = Cov(ε_t - ε_{t-1} - ε_{t-2}, ε_{t-h} - ε_{t-h-1} - ε_{t-h-2})\\)\n\n\\(\\epsilon\\)은 WN이므로 각각 COV취해줄 수 있꼬,, 상수값 나오니까 정상 시계열 조건을 만족한다."
  },
  {
    "objectID": "posts/[TS] HW03.html#section-3",
    "href": "posts/[TS] HW03.html#section-3",
    "title": "[TS] HW03",
    "section": "(2)",
    "text": "(2)\n\\(Z_t = ε_tε_{t−1} + ε_{t−2}\\)\n-&gt; 정상시계열\n\\(E(Z_t) = 0\\)\n\\(Var(Z_t) = V(\\epsilon_t \\epsilon_{t-1} + \\epsilon_{t-2}) = Var(\\epsilon_{t-1} \\epsilon_{t-2} + \\epsilon_{t-3}) = V(Z_{t-1})\\)\n\\(Var(Z_t) = Var(Z_{t-1}) = Var(Z_{t-2})= \\dots\\)\n\\(cov(Z_t, Z_{t-1}) = cov(Z_{t-1}, Z_{t-2})\\)"
  },
  {
    "objectID": "posts/[TS] HW03.html#section-4",
    "href": "posts/[TS] HW03.html#section-4",
    "title": "[TS] HW03",
    "section": "(3)",
    "text": "(3)\n\\(Z_t = A sin \\left( \\dfrac{2}{3} πt + U \\right)\\), 단 A는 평균이 0이고 분산이 1인 확률변수이고, \\(U\\) 는 상수이다.\n\n# 필요한 라이브러리 불러오기\nlibrary(ggplot2)\n\n# 시뮬레이션을 위한 난수 시드 설정\nset.seed(123)\n\n# 시뮬레이션 횟수\nn &lt;- 100\n\n# A는 평균이 0이고 분산이 1인 확률변수\nA &lt;- rnorm(n, mean = 0, sd = 1)\n\n# U는 상수\nU &lt;- 2\n\n# 시뮬레이션된 데이터 생성\nt &lt;- seq(1, n, by = 1)\nZ &lt;- A * sin((2/3) * pi * t + U)\n\n# 생성된 데이터 시각화\nggplot(data.frame(t, Z), aes(x = t, y = Z)) +\n  geom_line() +\n  labs(title = \"Simulation of Z_t\", x = \"Time (t)\", y = \"Z_t\")\n\n\n\n\n제시된 시계열 모형인 [Z_t = A (t + U)]에 대해서 정상성을 검토해보겠습니다.\n주어진 모형에서 (A)는 평균이 0이고 분산이 1인 확률변수이고, (U)는 상수입니다.\n\n평균 확인: [E(Z_t) = E(A (t + U))]\n\n확률변수 (A)의 평균은 0이므로, [E(Z_t) = 0]\n평균이 0이므로 평균 조건은 만족합니다.\n\n분산 확인: [Var(Z_t) = Var(A (t + U))]\n\n확률변수 (A)의 분산이 1이므로, [Var(Z_t) = Var((t + U))]\n사인 함수의 범위는 -1에서 1이므로 분산은 1을 초과하지 않습니다.\n[Var(Z_t) ]\n분산이 상수인 경우이므로 분산 조건도 만족합니다.\n\n공분산 확인: [Cov(Z_t, Z_{t-h}) = Cov(A (t + U), A ((t-h) + U))]\n\n두 사인 함수는 서로 독립적이므로 공분산은 0입니다.\n[Cov(Z_t, Z_{t-h}) = 0]\n결론적으로, 주어진 시계열 모형도 평균과 분산이 상수이고, 공분산이 시간에 독립적이므로 정상성을 만족합니다."
  },
  {
    "objectID": "posts/[TS] HW03.html#section-5",
    "href": "posts/[TS] HW03.html#section-5",
    "title": "[TS] HW03",
    "section": "(4)",
    "text": "(4)\n\\(Z_t = A sin (πt + U)\\), 단 \\(A\\)는 평균이 0이고 분산이 1인 확률변수이고, \\(U\\) 는 \\([−π, π]\\)에서의 균등분포(uniform distribution)을 따르는 확률변수이다. \\(A, U\\) 는 서로 독립.\n\n# 필요한 라이브러리 불러오기\nlibrary(ggplot2)\n\n# 시뮬레이션을 위한 난수 시드 설정\nset.seed(123)\n\n# 시뮬레이션 횟수\nn &lt;- 100\n\n# A는 평균이 0이고 분산이 1인 확률변수\nA &lt;- rnorm(n, mean = 0, sd = 1)\n\n# U는 [-π, π]에서 균등분포를 따르는 확률변수\nU &lt;- runif(n, min = -pi, max = pi)\n\n# 시뮬레이션된 데이터 생성\nt &lt;- seq(1, n, by = 1)\nZ &lt;- A * sin(pi * t + U)\n\n\n\n# A는 평균이 0이고 분산이 1인 확률변수\nset.seed(1)\nA &lt;- rnorm(n, mean = 0, sd = 1)\n\n# U는 [-π, π]에서 균등분포를 따르는 확률변수\nU &lt;- runif(n, min = -pi, max = pi)\n\n# 시뮬레이션된 데이터 생성\nt &lt;- seq(1, n, by = 1)\nZ &lt;- A * sin(pi * (t) + U)\n\nZ1 &lt;- A * sin(pi * (t+4) + U)\n\n\nset.seed(1)\ncov(Z, Z1)\n\n0.303403332248496\n\n\n\nset.seed(1)\ncov(Z, Z1)\n\n0.303403332248496"
  },
  {
    "objectID": "posts/[TS] HW03.html#section-6",
    "href": "posts/[TS] HW03.html#section-6",
    "title": "[TS] HW03",
    "section": "(5)",
    "text": "(5)\n\\(\\begin{cases} Z_{t} = \\epsilon_t & t: \\text{짝수} \\\\ Z_{t}=\\epsilon_t + 1 &t: \\text{홀수} \\end{cases}\\)\n평균 0 분산 1\n\n# 공분산을 계산할 함수 정의\ncalculate_covariance &lt;- function(t) {\n  if (t %% 2 == 0) {\n    # 짝수 시점\n    cov_result &lt;- 0  # 독립이므로 공분산은 0\n  } else {\n    # 홀수 시점\n    cov_result &lt;- cov(rnorm(1000), rnorm(1000))  # 예시로 1000개의 샘플을 이용해 공분산 계산\n  }\n  return(cov_result)\n}\n\n# t가 홀수일 때\nt_odd &lt;- 3\ncov_odd &lt;- calculate_covariance(t_odd)\nprint(paste(\"Cov(Z_\", t_odd, \", Z_\", t_odd-1, \"):\", cov_odd))\n\n# t가 짝수일 때\nt_even &lt;- 4\ncov_even &lt;- calculate_covariance(t_even)\nprint(paste(\"Cov(Z_\", t_even, \", Z_\", t_even-1, \"):\", cov_even))\n\n[1] \"Cov(Z_ 3 , Z_ 2 ): 0.0114340797519376\"\n[1] \"Cov(Z_ 4 , Z_ 3 ): 0\"\n\n\n\n# 시뮬레이션을 위한 함수 정의\nsimulate_Z &lt;- function(n) {\n  epsilon &lt;- rnorm(n)\n  Z &lt;- numeric(n)\n  \n  for (t in 1:n) {\n    if (t %% 2 == 0) {\n      Z[t] &lt;- epsilon[t]\n    } else {\n      Z[t] &lt;- epsilon[t] + 1\n    }\n  }\n  \n  return(Z)\n}\n\n# 시뮬레이션 데이터 생성\nset.seed(1)\nn &lt;- 100\nZ &lt;- simulate_Z(n)\n\n# 시계열 그래프 그리기\nplot(1:n, Z, type = \"o\", col = \"blue\", xlab = \"t\", ylab = \"Z_t\", main = \"Time Series: Z_t\")\nabline(h = 0, lty = 2, col = \"red\")  # y = 0에 대한 가로선\nabline(h = 1, lty = 2, col = \"green\")  # y = 1에 대한 가로선\nlegend(\"topright\", legend = c(\"Z_t\"), col = \"blue\", lty = 1, cex = 0.8)\n\n# epsilon(Z_t)를 표시\npoints(1:n, Z, col = \"red\", pch = 16)\n\n\n\n\n\nacf(Z)\n\n\n\n\n\npacf(Z)"
  },
  {
    "objectID": "posts/[TS] HW03.html#section-8",
    "href": "posts/[TS] HW03.html#section-8",
    "title": "[TS] HW03",
    "section": "(1)",
    "text": "(1)\n모형을 \\(ϕ(B)(Z_t − µ) = θ(B)ε_t\\)로 표현하고, \\(ϕ(B), θ(B)\\) 그리고 \\(µ\\)를 명시하여라.\n\\((1-0.8B)Z_t = \\epsilon_t\\)\n\\(\\mu-0.8\\mu = 0 \\rightarrow \\mu = 0\\)\n\\(ϕ(B)=1-0.8B\\)\n\\(\\theta(B) = 1\\)\n\\(\\mu=0\\)"
  },
  {
    "objectID": "posts/[TS] HW03.html#section-9",
    "href": "posts/[TS] HW03.html#section-9",
    "title": "[TS] HW03",
    "section": "(2)",
    "text": "(2)\n모형은 AR(p), MA(q) 혹은 ARMA(p, q)모형 중 어느 것인가? p와 q도 함께 명시하여라.\nAR(1)"
  },
  {
    "objectID": "posts/[TS] HW03.html#section-10",
    "href": "posts/[TS] HW03.html#section-10",
    "title": "[TS] HW03",
    "section": "(3)",
    "text": "(3)\nACF \\(ρ_k, k = 1, . . . , 5\\)를 계산하여라.\n\\(lag=0, Cov(Z_t,Z_t)\\) 를 구하자.\n\\(\\gamma_0 = [1+0.8^2 +0.8^4 +\\dots ] \\sigma^2=\\dfrac{\\sigma^2}{1-0.8^2}\\)\n\\(lag=1\\)\n\n\n\n\n\\(\\epsilon_t\\)\n\\(\\epsilon_{t-1}\\)\n\\(\\epsilon_{t-2}\\)\n\\(\\dots\\)\n\n\n\n\n\\(Z_t\\)\n1\n0.8\n\\(0.8^2\\)\n\\(\\dots\\)\n\n\n\\(Z_{t-1}\\)\n0\n1\n0.8\n\\(\\dots\\)\n\n\n\n\\(\\gamma_1 = [0+0.8 + 0.8^3 + \\dots] \\sigma^2 = \\dfrac{0.8 \\sigma^2}{1-0.8^2}\\)\n즉\n\\(\\gamma_0 = \\dfrac{\\sigma^2}{1-0.8^2}\\)\n\\(\\gamma_1 = \\dfrac{0.8\\sigma^2}{1-0.8^2}\\)\n\\(\\gamma_2 = \\dfrac{0.8^2\\sigma^2}{1-0.8^2}\\)\n\\(\\gamma_3 = \\dfrac{0.8^3\\sigma^2}{1-0.8^2}\\)\n\\(\\gamma_4 = \\dfrac{0.8^4\\sigma^2}{1-0.8^2}\\)\n\\(\\gamma_5 = \\dfrac{0.8^5\\sigma^2}{1-0.8^2}\\)\n\\(\\rho_k = \\dfrac{\\gamma_k}{\\gamma_0}\\)\n\\(\\rho_1 = \\dfrac{\\gamma_1}{\\gamma_0}=0.8\\)\n\\(\\rho_2 = \\dfrac{\\gamma_2}{\\gamma_0}=0.8^2\\)\n\\(\\rho_3 = \\dfrac{\\gamma_3}{\\gamma_0}=0.8^3\\)\n\\(\\rho_4 = \\dfrac{\\gamma_4}{\\gamma_0}=0.8^4\\)\n\\(\\rho_5 = \\dfrac{\\gamma_5}{\\gamma_0}=0.8^5\\)"
  },
  {
    "objectID": "posts/[TS] HW03.html#section-11",
    "href": "posts/[TS] HW03.html#section-11",
    "title": "[TS] HW03",
    "section": "(4)",
    "text": "(4)\nPACF \\(ϕ_{kk}, k = 1, . . . , 5\\)를 계산하여라.\n\\(ϕ_{11}=\\rho_1 = 0.8\\)\nAR(1)모형이므로 \\(k \\geq 2\\)이면 \\(ϕ_{kk}=0\\)이다."
  },
  {
    "objectID": "posts/[TS] HW03.html#다시",
    "href": "posts/[TS] HW03.html#다시",
    "title": "[TS] HW03",
    "section": "(5) 다시…",
    "text": "(5) 다시…\n위에서 구한 \\(ρ_k, ϕ_{kk}\\) 의 상관도표를 그려라\n\n##AR(1) phi=0.8\nz &lt;- arima.sim(n=1000, ##order=c(p,d,q) ARMA : d=0, AR : d=q=0\n list(order=c(1,0,0), ar= 0.8), #ar=ϕ1\n rand.gen = rnorm,\n sd = sqrt(1)) #분산\nforecast::tsdisplay(z, lag.max=24)\n\n\n\n\n\nACF그림은 지수적으로 감소하는 형태이고.\nPACF는 h=1에서만 값이 존재하고 나머지는 다 0이다"
  },
  {
    "objectID": "posts/[TS] HW03.html#section-13",
    "href": "posts/[TS] HW03.html#section-13",
    "title": "[TS] HW03",
    "section": "(1)",
    "text": "(1)\n자기상관함수(ACF) \\(ρ_h, h = 1, 2, . . .\\)를 구하시오.\n\\(\\gamma_k = Cov(Z_t, Z_{t-k}) = E[(ε_t − θ_1ε_{t−1} − θ_2ε_{t−2})(ε_{t-1} − θ_1ε_{t−2} − θ_2ε_{t−3})]\\)\nlag=0\n\\(\\gamma_0 = (1+\\theta_1^2 + \\theta_2^2)\\)\n\n\n\n1\n- theta_1\n- theta_2\n\n\n\n\n1\n- theta_1\n- theta_2\n\n\n\nlag=1\n\\(\\gamma_1 =-\\theta_1 + \\theta_1 \\theta_2\\)\n\n\n\n1\n- theta_1\n- theta_2\n\n\n\n\n–\n1\n- theta_1\n\n\n\nlag2\n\\(\\gamma_2 = -\\theta_2\\)\n\n\n\n1\n-theta_1\n- theta_2\n\n\n\n\n–\n–\n1\n\n\n\n\\(\\rho_1 = \\dfrac{\\rho_1}{\\rho_0} = \\dfrac{-\\theta_1 + \\theta_1 \\theta_2}{1+\\theta_1^2 + \\theta_2^2}\\)\n\\(\\rho_2 = \\dfrac{\\rho_2}{\\rho_0} = \\dfrac{-\\theta_2}{1+\\theta_1^2 + \\theta_2^2}\\)\n\nMA(2)모형이므로 k가 3이상이면 acf값은 다 0이다"
  },
  {
    "objectID": "posts/[TS] HW03.html#section-14",
    "href": "posts/[TS] HW03.html#section-14",
    "title": "[TS] HW03",
    "section": "(2)",
    "text": "(2)\n부분자기상관함수(PACF) \\(ϕ_{11}, ϕ_{22}\\)를 구하시오.\n\\(ϕ_{11}=\\rho_1 = \\dfrac{-\\theta_1 + \\theta_1 \\theta_2}{1+\\theta_1^2 + \\theta_2^2}\\)\n\\(ϕ_{22} = \\dfrac{\\rho_2 - \\rho_1^2}{1-\\rho_1^2}\\)\n계싼복잡…생략.."
  },
  {
    "objectID": "posts/[TS] HW03.html#section-16",
    "href": "posts/[TS] HW03.html#section-16",
    "title": "[TS] HW03",
    "section": "(1)",
    "text": "(1)\n모형을 \\(ϕ(B)(Z_t − µ) = θ(B)ε_t\\)로 표현하고, \\(ϕ(B), θ(B)\\) 그리고 \\(µ\\)를 명시하여라.\n모형1\n\\((Z_t-9.5) = (1-1.3B + 0.6 B^2)\\epsilon_t\\)\n\\(ϕ(B)=1, θ(B)=(1-1.3B + 0.6 B^2), \\mu=9.5\\)\n모형2\n\\((1-0.6B)(Z_t - \\mu) = (1+0.9B)\\epsilon_t\\)\n\\(\\mu - 0.6 \\mu = 38 \\rightarrow \\mu=38/0.4\\)\n모형3\n\\((1-0.6B)(Z_t-\\mu) = (1+0.2B +0.8B^2)\\epsilon_t\\)\n\\(ϕ(B)=1-0.6B, θ(B)=(1+0.2B +0.8B^2)\\)\n\\(\\mu-0.6\\mu = 26 \\rightarrow 0.4\\mu = 26 \\rightarrow \\mu = 26/0.4=65\\)\n모형4\n\\((1-1.5B+0.7B^2)(Z_t-\\mu) = (1-0.5B)\\epsilon_t\\)\n\\(\\mu - 1.5\\mu + 0.7 \\mu =100\\)\n\\(\\mu=500\\)"
  },
  {
    "objectID": "posts/[TS] HW03.html#section-17",
    "href": "posts/[TS] HW03.html#section-17",
    "title": "[TS] HW03",
    "section": "(2)",
    "text": "(2)\n모형은 AR(p), MA(q) 혹은 ARMA(p, q)모형 중 어느 것인가? p와 q도 함께 명시하여라.\n모형1 : MA(2)\n모형2 : ARMA(1,1)\n모형3 : ARMA(1,2)\n모형4 : ARMA(2,1)"
  },
  {
    "objectID": "posts/[TS] HW03.html#section-18",
    "href": "posts/[TS] HW03.html#section-18",
    "title": "[TS] HW03",
    "section": "(5)",
    "text": "(5)\n위에서 구한 \\(ρ_k, ϕ_{kk}\\) 의 상관도표를 그려라\n모형1\n\nz1 &lt;- arima.sim(n=10000,\n list(order=c(0,0,2), ma=c(1.3, -0.6)))\nforecast::tsdisplay(z1, lag.max=24)\n\n\n\n\n모형2\n\nz2 &lt;- arima.sim(n=10000,\n list(order=c(1,0,1), ar=0.6, ma=0.9),\n rand.gen = rnorm)\nforecast::tsdisplay(z2, lag.max=24)\n\n\n\n\n모형3\n\nz3 &lt;- arima.sim(n=10000,\n list(order=c(1,0,2), ar=0.6, ma=c(0.2,0.5)),\n rand.gen = rnorm)\nforecast::tsdisplay(z3, lag.max=24)\n\n\n\n\n모형4\n\nz4 &lt;- arima.sim(n=10000,\n list(order=c(2,0,1), ar=c(1.5,-0.7), ma=-0.5),\n rand.gen = rnorm)\nforecast::tsdisplay(z4, lag.max=24)"
  },
  {
    "objectID": "posts/[TS] HW03.html#section-19",
    "href": "posts/[TS] HW03.html#section-19",
    "title": "[TS] HW03",
    "section": "(3)",
    "text": "(3)\nACF \\(ρ_k, k = 1, . . . , 10\\)를 계산하여라.\n모형1\n\nacf_z1&lt;-acf(z1,plot=FALSE)\nacf_z1[1:10]\n\n\nAutocorrelations of series ‘z1’, by lag\n\n     1      2      3      4      5      6      7      8      9     10 \n 0.158 -0.207 -0.014 -0.015  0.001  0.017  0.013  0.008 -0.014 -0.024 \n\n\n모형2\n\nacf_z2&lt;-acf(z2,plot=FALSE)\nacf_z2[1:10]\n\n\nAutocorrelations of series ‘z2’, by lag\n\n     1      2      3      4      5      6      7      8      9     10 \n 0.807  0.495  0.302  0.183  0.107  0.051  0.015  0.002 -0.003 -0.009 \n\n\n모형3\n\nacf_z3&lt;-acf(z3,plot=FALSE)\nacf_z3[1:10]\n\n\nAutocorrelations of series ‘z3’, by lag\n\n    1     2     3     4     5     6     7     8     9    10 \n0.796 0.637 0.382 0.229 0.138 0.086 0.059 0.038 0.027 0.016 \n\n\n모형4\n\nacf_z4&lt;-acf(z4,plot=FALSE)\nacf_z4[1:10]\n\n\nAutocorrelations of series ‘z4’, by lag\n\n     1      2      3      4      5      6      7      8      9     10 \n 0.791  0.488  0.189 -0.057 -0.219 -0.288 -0.281 -0.227 -0.143 -0.060"
  },
  {
    "objectID": "posts/[TS] HW03.html#section-20",
    "href": "posts/[TS] HW03.html#section-20",
    "title": "[TS] HW03",
    "section": "(4)",
    "text": "(4)\nPACF \\(ϕ_{kk}, k = 1, . . . , 10\\)를 계산하여라.\n모형1\n\npacf_z1&lt;-pacf(z1,plot=FALSE)\npacf_z1[1:10]\n\n\nPartial autocorrelations of series ‘z1’, by lag\n\n     1      2      3      4      5      6      7      8      9     10 \n 0.158 -0.238  0.070 -0.082  0.035 -0.011  0.021  0.002 -0.010 -0.017 \n\n\n모형2\n\npacf_z2&lt;-pacf(z2,plot=FALSE)\npacf_z2[1:10]\n\n\nPartial autocorrelations of series ‘z2’, by lag\n\n     1      2      3      4      5      6      7      8      9     10 \n 0.807 -0.443  0.296 -0.221  0.158 -0.163  0.135 -0.105  0.082 -0.083 \n\n\n모형3\n\npacf_z3&lt;-pacf(z3,plot=FALSE)\npacf_z3[1:10]\n\n\nPartial autocorrelations of series ‘z3’, by lag\n\n     1      2      3      4      5      6      7      8      9     10 \n 0.796  0.010 -0.349  0.071  0.158 -0.059 -0.052  0.026  0.023 -0.019 \n\n\n모형4\n\npacf_z4&lt;-pacf(z4,plot=FALSE)\npacf_z4[1:10]\n\n\nPartial autocorrelations of series ‘z4’, by lag\n\n     1      2      3      4      5      6      7      8      9     10 \n 0.791 -0.365 -0.153 -0.099 -0.052 -0.016 -0.017 -0.021  0.013 -0.017"
  },
  {
    "objectID": "posts/[TS] HW03.html#section-23",
    "href": "posts/[TS] HW03.html#section-23",
    "title": "[TS] HW03",
    "section": "(1)",
    "text": "(1)\n\\(\\{Z_t\\}\\)의 시계열그림을 그려라.\n\nzt&lt;-c()\nzt[1]&lt;-1+0.9*10+rnorm(1)\nfor(i in 2:100) zt[i]&lt;-1+0.9*zt[i-1]+rnorm(1)\nzt\n\n\n11.633944802752110.029749161143910.480634835979.9364278012893512.1080626155510.215220939699113.746067718539712.426358634912114.245644035033713.872915309966613.889037414522813.909635719916911.886337130968412.944075877565713.524788639122312.729658631362911.464825453192211.28306485883811.815692930328611.744865887845112.3244826280313.111504800542713.823920846807911.377083719539312.309483156863512.768131690882911.196980163748511.785009674298612.001739653859910.679216001175811.214869327554310.63086096608939.9113847632605210.62189284538810.45222132404639.209872080770029.5860481992947110.158342739848810.27002953818739.712012450095529.4436600772998710.41584093212348.58722994947669.7891763524771310.896313749416312.21036789030369.865786931461429.221726839869949.251906511716719.774904016300878.398292317755748.022881617907959.3309680171323210.562688625850412.217843540606610.83237143733939.333110612891828.755207511511456.993804488391698.306919248008927.314156178959658.601623120190578.660228181067468.800573889804639.065118170226510.367501902410210.4598718513659.4821336641191910.438412127496511.261509941965411.469717063873510.005682067557210.235999639642711.424289305300812.660210367922812.757460340923411.890857476548811.157531671323612.011092913200311.993948515495512.472823052461610.20754195717729.3896214408490810.45486767102829.7297932650471211.234014496360711.34053720757029.804254199349688.204599760953498.205258823254417.260264215096335.769254193642176.411939366269026.624484465758567.460422375141195.420115656910566.025173550610366.411904717633227.874282391633988.70956639743375\n\n\n\nplot(zt)"
  },
  {
    "objectID": "posts/[TS] HW03.html#section-24",
    "href": "posts/[TS] HW03.html#section-24",
    "title": "[TS] HW03",
    "section": "(2)",
    "text": "(2)\nSACF, \\(\\hatρ_h, h = 1, 2, . . . , 10\\)을 구하여 표본상관도표를 그려라\n\nacf(zt)\n\n\n\n\n\nacf(zt)$acf\n\n\n10.8300458231104110.7351298760733930.626197951136630.5773562814189960.4904271646825970.426492964330390.3703216116497390.3062487990559320.2544120175860950.1931561993294820.1502505662386720.07135639016291540.0296399954852570.0121346208843998-0.0325772325466221-0.0533571962757925-0.112886388416267-0.128414978937425-0.119157092402368-0.0926266728203544"
  },
  {
    "objectID": "posts/[TS] HW03.html#section-25",
    "href": "posts/[TS] HW03.html#section-25",
    "title": "[TS] HW03",
    "section": "(3)",
    "text": "(3)\nSPACF, \\(\\hat ϕ_{kk}, k = 1, 2, . . . , 10\\)을 구하여 표본상관도표를 그려라\n\npacf(zt)\n\n\n\n\n\npacf(zt)$acf\n\n\n0.8300458231104110.148393107187214-0.05463433629577350.123678558628976-0.0883551477937624-0.0137989295540030.0286016292581917-0.07698412413296330.00263703156357633-0.0513306551749866-0.012079285174621-0.12461531131770.01082965611872920.0859635380334657-0.1246858172676230.0483698221700843-0.1284110111439250.009429694156084260.1531616082240470.0205013651615918"
  },
  {
    "objectID": "posts/[TS] HW03.html#section-26",
    "href": "posts/[TS] HW03.html#section-26",
    "title": "[TS] HW03",
    "section": "(4)",
    "text": "(4)\n\\(\\{Z_t, Z_{t−1} \\}\\)의 산점도를 그리고, 이 산점도와 \\(\\hatρ_1\\)의 관계를 설명하여라\n\nplot(zt,data.table::shift(zt,-1))\n\n\n\n\n\ncor(zt,data.table::shift(zt,-1), use = 'pairwise.complete.obs')\n\n0.834848419327365"
  },
  {
    "objectID": "posts/[TS] HW03.html#section-27",
    "href": "posts/[TS] HW03.html#section-27",
    "title": "[TS] HW03",
    "section": "(5)",
    "text": "(5)\n\\(\\{Z_t, Z_{t−2} \\}\\)의 산점도를 그리고, 이 산점도와 \\(\\hatρ_2\\)의 관계를 설명하여라\n\n\n\n\n10.480634835979.9364278012893512.1080626155510.215220939699113.746067718539712.426358634912114.245644035033713.872915309966613.889037414522813.909635719916911.886337130968412.944075877565713.524788639122312.729658631362911.464825453192211.28306485883811.815692930328611.744865887845112.3244826280313.111504800542713.823920846807911.377083719539312.309483156863512.768131690882911.196980163748511.785009674298612.001739653859910.679216001175811.214869327554310.63086096608939.9113847632605210.62189284538810.45222132404639.209872080770029.5860481992947110.158342739848810.27002953818739.712012450095529.4436600772998710.41584093212348.58722994947669.7891763524771310.896313749416312.21036789030369.865786931461429.221726839869949.251906511716719.774904016300878.398292317755748.022881617907959.3309680171323210.562688625850412.217843540606610.83237143733939.333110612891828.755207511511456.993804488391698.306919248008927.314156178959658.601623120190578.660228181067468.800573889804639.065118170226510.367501902410210.4598718513659.4821336641191910.438412127496511.261509941965411.469717063873510.005682067557210.235999639642711.424289305300812.660210367922812.757460340923411.890857476548811.157531671323612.011092913200311.993948515495512.472823052461610.20754195717729.3896214408490810.45486767102829.7297932650471211.234014496360711.34053720757029.804254199349688.204599760953498.205258823254417.260264215096335.769254193642176.411939366269026.624484465758567.460422375141195.420115656910566.025173550610366.411904717633227.874282391633988.70956639743375&lt;NA&gt;&lt;NA&gt;\n\n\n\nplot(zt,data.table::shift(zt,-2))\n\n\n\n\n\ncor(zt,data.table::shift(zt,-2), use = 'pairwise.complete.obs')\n\n0.745816184226449"
  },
  {
    "objectID": "posts/[TS] 03.html",
    "href": "posts/[TS] 03.html",
    "title": "[TS] CH03. 평활법 실습",
    "section": "",
    "text": "해당 자료는 전북대학교 이영미 교수님 2023고급시계열분석 자료임"
  },
  {
    "objectID": "posts/[TS] 03.html#kings-data",
    "href": "posts/[TS] 03.html#kings-data",
    "title": "[TS] CH03. 평활법 실습",
    "section": "Kings data",
    "text": "Kings data\n\nkings=scan(\"http://robjhyndman.com/tsdldata/misc/kings.dat\",skip=3)\n\n\nkings\n\n\n604367505642506568436534473449411335535616436959485986556851334967778167718168707756\n\n\n\nkingstimeseries = ts(kings)\nplot(kingstimeseries, lwd=2)\n\n\n\n\n\nkingstimeseries\n\nA Time Series:\n604367505642506568436534473449411335535616436959485986556851334967778167718168707756\n\n\n\n1번왕은 60세까지, 2번왕은 43세까지, 3번왕은 67세까지…. 살았음\n\n\nSMA(kings, n=3)\n\n\n&lt;NA&gt;&lt;NA&gt;56.666666666666753.333333333333357.666666666666749.333333333333349.333333333333352.33333333333336158.666666666666758.666666666666747.333333333333348.666666666666738.333333333333343.333333333333341.333333333333334.333333333333329.666666666666733.66666666666674841.666666666666738.333333333333342.66666666666675758.666666666666755.333333333333364.333333333333366.666666666666769.66666666666675850.666666666666744.333333333333349.666666666666764.33333333333337575737373.33333333333337371.666666666666767.6666666666667\n\n\n\nn=3이므로 첫번째, 두번째에서는 값을 알 수가 없다.\n56.6666666666667 = (60+43+67)/3\n\n꼭 ts로 필수적으로 바꿀 필요는 없다.\n\nclass(SMA(kings, n=3))\n\n'numeric'\n\n\n\n## window=3\nkingstimeseriesSMA3 &lt;- SMA(kingstimeseries,n=3)\nplot.ts(kingstimeseries, lwd=2)\nlines(kingstimeseriesSMA3, col='red', lty=2, lwd=2)\nlegend(\"topleft\",\n     legend=c(\"original\", expression(m==3)), \n     col=c(\"black\",\"red\"),\n     lty=c(1,2), lwd=2)\n\n\n\n\n\nkingstimeseries\n\nA Time Series:\n604367505642506568436534473449411335535616436959485986556851334967778167718168707756\n\n\n\nkingstimeseriesSMA3\n\nA Time Series:\n&lt;NA&gt;&lt;NA&gt;56.666666666666753.333333333333357.666666666666749.333333333333349.333333333333352.33333333333336158.666666666666758.666666666666747.333333333333348.666666666666738.333333333333343.333333333333341.333333333333334.333333333333329.666666666666733.66666666666674841.666666666666738.333333333333342.66666666666675758.666666666666755.333333333333364.333333333333366.666666666666769.66666666666675850.666666666666744.333333333333349.666666666666764.33333333333337575737373.33333333333337371.666666666666767.6666666666667\n\n\n\n## window=3 vs. 10\nplot.ts(kingstimeseries, lwd=2)\nlines(kingstimeseriesSMA3, col='red', lty=2, lwd=2)\nlines( SMA(kingstimeseries,n=10), col='blue', lty=2, lwd=2)\nlegend(\"topleft\",\n legend=c(\"original\", expression(m==3), expression(m==10)),\n col=c(\"black\",\"red\",\"blue\"),\n lty=c(1,2,2), lwd=2)\n\n\n\n\n\n모형 평가\n\nlength(kings)\n\n42\n\n\n\n## m=3\nmean((kings[-1]- kingstimeseriesSMA3[-42])^2, na.rm=T) ##MSE : e_t(1)= z_{t+1} - hat z_t, t=3,4,...\nmean(abs(kings[-1]- kingstimeseriesSMA3[-42]), na.rm=T) ##MAE\nmean(abs(kings[-1]- kingstimeseriesSMA3[-42])/kings[-1], na.rm=T)*100 ##MAPE\n\n262.606837606838\n\n\n12.8119658119658\n\n\n31.5545022415299\n\n\nna.rm=T : 결측치는 제외하고\n\n## m=10\nmean((kings[-1]- SMA(kingstimeseries,n=10)[-42])^2, na.rm=T) ##MSE\nmean(abs(kings[-1]- SMA(kingstimeseries,n=10)[-42]), na.rm=T) ##MAE\nmean(abs(kings[-1]- SMA(kingstimeseries,n=10)[-42])/kings[-1], na.rm=T)*100 ##MAPE\n\n288.6253125\n\n\n13.996875\n\n\n35.7375097004325\n\n\n\n## m=4\nmean((kings[-1]- SMA(kingstimeseries,n=4)[-42])^2, na.rm=T) ##MSE\nmean(abs(kings[-1]- SMA(kingstimeseries,n=4)[-42]), na.rm=T) ##MAE\nmean(abs(kings[-1]- SMA(kingstimeseries,n=4)[-42])/kings[-1], na.rm=T)*100 ##MAPE\n\n239.009868421053\n\n\n12.1315789473684\n\n\n29.8129038055302\n\n\n\nMSE가 제일 작은 값 찾아줘야 함"
  },
  {
    "objectID": "posts/[TS] 03.html#mindex-data",
    "href": "posts/[TS] 03.html#mindex-data",
    "title": "[TS] CH03. 평활법 실습",
    "section": "mindex data",
    "text": "mindex data\n\nz &lt;- scan(\"mindex.txt\")\nmindex &lt;- ts(z, start = c(1986, 1), frequency = 12)\nmindex\n\n\nA Time Series: 9 × 12\n\n\n\nJan\nFeb\nMar\nApr\nMay\nJun\nJul\nAug\nSep\nOct\nNov\nDec\n\n\n\n\n1986\n9.3\n10.7\n13.3\n14.1\n17.8\n18.1\n19.4\n18.8\n19.1\n18.4\n18.0\n17.0\n\n\n1987\n19.5\n20.1\n19.4\n15.7\n15.6\n16.1\n14.9\n16.0\n14.6\n18.3\n18.2\n23.0\n\n\n1988\n22.2\n22.1\n18.8\n17.7\n13.8\n12.7\n16.5\n15.6\n16.3\n10.7\n10.4\n7.0\n\n\n1989\n4.7\n4.5\n4.0\n6.0\n6.2\n5.7\n4.4\n4.2\n5.0\n5.8\n6.4\n4.9\n\n\n1990\n7.9\n8.2\n11.8\n10.0\n11.1\n11.7\n12.4\n15.2\n14.0\n15.2\n12.9\n18.0\n\n\n1991\n14.4\n12.7\n8.3\n11.5\n11.9\n11.6\n10.3\n8.5\n11.6\n12.3\n14.5\n11.1\n\n\n1992\n11.8\n12.4\n12.7\n9.8\n10.0\n10.2\n9.6\n6.9\n5.3\n4.8\n4.6\n1.9\n\n\n1993\n3.8\n4.7\n7.7\n7.0\n7.2\n7.8\n8.6\n11.4\n10.7\n11.8\n11.3\n16.0\n\n\n1994\n13.2\n12.0\n8.5\n11.4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmindex_sma3 &lt;- SMA(mindex,n=3)\nmindex_sma10 &lt;- SMA(mindex,n=10)\n\n\nplot.ts(mindex, lwd=2)\nlines(mindex_sma3, col='red', lty=2, lwd=2)\nlines(mindex_sma10, col='blue', lty=2, lwd=2)\nlegend(\"topright\",\n     legend=c(\"original\", expression(m==3), expression(m==10)),\n     col=c(\"black\",\"red\",\"blue\"),\n     lty=c(1,2,2), lwd=2)"
  },
  {
    "objectID": "posts/[TS] 03.html#depart-data",
    "href": "posts/[TS] 03.html#depart-data",
    "title": "[TS] CH03. 평활법 실습",
    "section": "depart data",
    "text": "depart data\n\nz &lt;- scan(\"depart.txt\")\nmindex &lt;- ts(z, start = c(1986, 1), frequency = 12)\nmindex\n\n\nA Time Series: 5 × 12\n\n\n\nJan\nFeb\nMar\nApr\nMay\nJun\nJul\nAug\nSep\nOct\nNov\nDec\n\n\n\n\n1986\n423\n458\n607\n564\n536\n536\n804\n540\n488\n627\n672\n1447\n\n\n1987\n514\n518\n699\n654\n612\n612\n884\n605\n547\n705\n698\n1555\n\n\n1988\n561\n564\n773\n717\n665\n667\n994\n661\n616\n786\n806\n1754\n\n\n1989\n622\n636\n874\n831\n769\n779\n1142\n764\n718\n930\n943\n2039\n\n\n1990\n736\n752\n1057\n947\n868\n931\n1311\n896\n867\n1073\n1069\n2333\n\n\n\n\n\n\nmindex_sma3 &lt;- SMA(mindex,n=3)\nmindex_sma12 &lt;- SMA(mindex,n=12)\n\n\nplot.ts(mindex, lwd=2)\nlines(mindex_sma3, col='red', lty=2, lwd=2)\nlines(mindex_sma12, col='blue', lty=2, lwd=2)\nlegend(\"topright\",\n     legend=c(\"original\", expression(m==3), expression(m==12)),\n     col=c(\"black\",\"red\",\"blue\"),\n     lty=c(1,2,2), lwd=2)\n\n\n\n\n\n계절 성분 데이터를 평활하면.. m에 따라서 계절 성분이 없어진당\n\n\nplot.ts(mindex-mindex_sma12)\n\n\n\n\n\n계절성분만 있다. 이분산성이 조금 보이긴 하지만. 추후에 ch4장에서 분해법 할 때"
  },
  {
    "objectID": "posts/[TS] 03.html#단순지수평활-alpha0.3",
    "href": "posts/[TS] 03.html#단순지수평활-alpha0.3",
    "title": "[TS] CH03. 평활법 실습",
    "section": "단순지수평활 \\(\\alpha=0.3\\)",
    "text": "단순지수평활 \\(\\alpha=0.3\\)\n- 평활상수\n\nalpha: level\nbeta: 기울기\ngamma: 계절\n\n- 평활 초기값\n\n아래 내용 살펴보자\n단순지수평활에서는 초기값을 x[1]값 을 사용함\n\n\n?HoltWinters\n\n\n\n\n\n\nHoltWinters {stats}\nR Documentation\n\n\n\n\nHolt-Winters Filtering\n\nDescription\nComputes Holt-Winters Filtering of a given time series. Unknown parameters are determined by minimizing the squared prediction error.\n\n\nUsage\nHoltWinters(x, alpha = NULL, beta = NULL, gamma = NULL,\n            seasonal = c(\"additive\", \"multiplicative\"),\n            start.periods = 2, l.start = NULL, b.start = NULL,\n            s.start = NULL,\n            optim.start = c(alpha = 0.3, beta = 0.1, gamma = 0.1),\n            optim.control = list())\n\n\nArguments\n\n\n\nx\nAn object of class ts\n\n\nalpha\nalpha parameter of Holt-Winters Filter.\n\n\nbeta\nbeta parameter of Holt-Winters Filter. If set to FALSE, the function will do exponential smoothing.\n\n\ngamma\ngamma parameter used for the seasonal component. If set to FALSE, an non-seasonal model is fitted.\n\n\nseasonal\nCharacter string to select an \"additive\" (the default) or \"multiplicative\" seasonal model. The first few characters are sufficient. (Only takes effect if gamma is non-zero).\n\n\nstart.periods\nStart periods used in the autodetection of start values. Must be at least 2.\n\n\nl.start\nStart value for level (a[0]).\n\n\nb.start\nStart value for trend (b[0]).\n\n\ns.start\nVector of start values for the seasonal component (s_1[0] \\ldots s_p[0])\n\n\noptim.start\nVector with named components alpha, beta, and gamma containing the starting values for the optimizer. Only the values needed must be specified. Ignored in the one-parameter case.\n\n\noptim.control\nOptional list with additional control parameters passed to optim if this is used. Ignored in the one-parameter case.\n\n\n\n\n\nDetails\nThe additive Holt-Winters prediction function (for time series with period length p) is\n\\hat Y[t+h] = a[t] + h b[t] + s[t - p + 1 + (h - 1) \\bmod p],\nwhere a[t], b[t] and s[t] are given by\na[t] = \\alpha (Y[t] - s[t-p]) + (1-\\alpha) (a[t-1] + b[t-1])\nb[t] = \\beta (a[t] -a[t-1]) + (1-\\beta) b[t-1]\ns[t] = \\gamma (Y[t] - a[t]) + (1-\\gamma) s[t-p]\nThe multiplicative Holt-Winters prediction function (for time series with period length p) is\n\\hat Y[t+h] = (a[t] + h b[t]) \\times s[t - p + 1 + (h - 1) \\bmod p].\nwhere a[t], b[t] and s[t] are given by\na[t] = \\alpha (Y[t] / s[t-p]) + (1-\\alpha) (a[t-1] + b[t-1])\nb[t] = \\beta (a[t] - a[t-1]) + (1-\\beta) b[t-1]\ns[t] = \\gamma (Y[t] / a[t]) + (1-\\gamma) s[t-p]\nThe data in x are required to be non-zero for a multiplicative model, but it makes most sense if they are all positive.\nThe function tries to find the optimal values of \\alpha and/or \\beta and/or \\gamma by minimizing the squared one-step prediction error if they are NULL (the default). optimize will be used for the single-parameter case, and optim otherwise.\nFor seasonal models, start values for a, b and s are inferred by performing a simple decomposition in trend and seasonal component using moving averages (see function decompose) on the start.periods first periods (a simple linear regression on the trend component is used for starting level and trend). For level/trend-models (no seasonal component), start values for a and b are x[2] and x[2] - x[1], respectively. For level-only models (ordinary exponential smoothing), the start value for a is x[1].\n\n\nValue\nAn object of class \"HoltWinters\", a list with components:\n\n\n\nfitted\nA multiple time series with one column for the filtered series as well as for the level, trend and seasonal components, estimated contemporaneously (that is at time t and not at the end of the series).\n\n\nx\nThe original series\n\n\nalpha\nalpha used for filtering\n\n\nbeta\nbeta used for filtering\n\n\ngamma\ngamma used for filtering\n\n\ncoefficients\nA vector with named components a, b, s1, ..., sp containing the estimated values for the level, trend and seasonal components\n\n\nseasonal\nThe specified seasonal parameter\n\n\nSSE\nThe final sum of squared errors achieved in optimizing\n\n\ncall\nThe call used\n\n\n\n\n\n\nAuthor(s)\n\nDavid Meyer David.Meyer@wu.ac.at\n\n\n\nReferences\n\nC. C. Holt (1957)\nForecasting seasonals and trends by exponentially weighted moving averages,\nONR Research Memorandum, Carnegie Institute of Technology 52.\n(reprint at doi:10.1016/j.ijforecast.2003.09.015).\n\nP. R. Winters (1960).\nForecasting sales by exponentially weighted moving averages.\nManagement Science, 6, 324–342.\ndoi:10.1287/mnsc.6.3.324.\n\n\n\nSee Also\n\npredict.HoltWinters, optim.\n\n\n\nExamples\n\n\nrequire(graphics)\n\n## Seasonal Holt-Winters\n(m &lt;- HoltWinters(co2))\nplot(m)\nplot(fitted(m))\n\n(m &lt;- HoltWinters(AirPassengers, seasonal = \"mult\"))\nplot(m)\n\n## Non-Seasonal Holt-Winters\nx &lt;- uspop + rnorm(uspop, sd = 5)\nm &lt;- HoltWinters(x, gamma = FALSE)\nplot(m)\n\n## Exponential Smoothing\nm2 &lt;- HoltWinters(x, gamma = FALSE, beta = FALSE)\nlines(fitted(m2)[,1], col = 3)\n\n\n\n[Package stats version 4.2.2 ]"
  },
  {
    "objectID": "posts/[TS] 03.html#holt-winters-filtering",
    "href": "posts/[TS] 03.html#holt-winters-filtering",
    "title": "[TS] CH03. 평활법 실습",
    "section": "Holt-Winters Filtering",
    "text": "Holt-Winters Filtering\n\nDescription\nComputes Holt-Winters Filtering of a given time series. Unknown parameters are determined by minimizing the squared prediction error.\n\n\nUsage\nHoltWinters(x, alpha = NULL, beta = NULL, gamma = NULL,\n            seasonal = c(\"additive\", \"multiplicative\"),\n            start.periods = 2, l.start = NULL, b.start = NULL,\n            s.start = NULL,\n            optim.start = c(alpha = 0.3, beta = 0.1, gamma = 0.1),\n            optim.control = list())\n\n\nArguments\n\n\n\nx\nAn object of class ts\n\n\nalpha\nalpha parameter of Holt-Winters Filter.\n\n\nbeta\nbeta parameter of Holt-Winters Filter. If set to FALSE, the function will do exponential smoothing.\n\n\ngamma\ngamma parameter used for the seasonal component. If set to FALSE, an non-seasonal model is fitted.\n\n\nseasonal\nCharacter string to select an \"additive\" (the default) or \"multiplicative\" seasonal model. The first few characters are sufficient. (Only takes effect if gamma is non-zero).\n\n\nstart.periods\nStart periods used in the autodetection of start values. Must be at least 2.\n\n\nl.start\nStart value for level (a[0]).\n\n\nb.start\nStart value for trend (b[0]).\n\n\ns.start\nVector of start values for the seasonal component (s_1[0] \\ldots s_p[0])\n\n\noptim.start\nVector with named components alpha, beta, and gamma containing the starting values for the optimizer. Only the values needed must be specified. Ignored in the one-parameter case.\n\n\noptim.control\nOptional list with additional control parameters passed to optim if this is used. Ignored in the one-parameter case.\n\n\n\n\n\nDetails\nThe additive Holt-Winters prediction function (for time series with period length p) is\n\\hat Y[t+h] = a[t] + h b[t] + s[t - p + 1 + (h - 1) \\bmod p],\nwhere a[t], b[t] and s[t] are given by\na[t] = \\alpha (Y[t] - s[t-p]) + (1-\\alpha) (a[t-1] + b[t-1])\nb[t] = \\beta (a[t] -a[t-1]) + (1-\\beta) b[t-1]\ns[t] = \\gamma (Y[t] - a[t]) + (1-\\gamma) s[t-p]\nThe multiplicative Holt-Winters prediction function (for time series with period length p) is\n\\hat Y[t+h] = (a[t] + h b[t]) \\times s[t - p + 1 + (h - 1) \\bmod p].\nwhere a[t], b[t] and s[t] are given by\na[t] = \\alpha (Y[t] / s[t-p]) + (1-\\alpha) (a[t-1] + b[t-1])\nb[t] = \\beta (a[t] - a[t-1]) + (1-\\beta) b[t-1]\ns[t] = \\gamma (Y[t] / a[t]) + (1-\\gamma) s[t-p]\nThe data in x are required to be non-zero for a multiplicative model, but it makes most sense if they are all positive.\nThe function tries to find the optimal values of \\alpha and/or \\beta and/or \\gamma by minimizing the squared one-step prediction error if they are NULL (the default). optimize will be used for the single-parameter case, and optim otherwise.\nFor seasonal models, start values for a, b and s are inferred by performing a simple decomposition in trend and seasonal component using moving averages (see function decompose) on the start.periods first periods (a simple linear regression on the trend component is used for starting level and trend). For level/trend-models (no seasonal component), start values for a and b are x[2] and x[2] - x[1], respectively. For level-only models (ordinary exponential smoothing), the start value for a is x[1].\n\n\nValue\nAn object of class \"HoltWinters\", a list with components:\n\n\n\nfitted\nA multiple time series with one column for the filtered series as well as for the level, trend and seasonal components, estimated contemporaneously (that is at time t and not at the end of the series).\n\n\nx\nThe original series\n\n\nalpha\nalpha used for filtering\n\n\nbeta\nbeta used for filtering\n\n\ngamma\ngamma used for filtering\n\n\ncoefficients\nA vector with named components a, b, s1, ..., sp containing the estimated values for the level, trend and seasonal components\n\n\nseasonal\nThe specified seasonal parameter\n\n\nSSE\nThe final sum of squared errors achieved in optimizing\n\n\ncall\nThe call used\n\n\n\n\n\n\nAuthor(s)\n\nDavid Meyer David.Meyer@wu.ac.at\n\n\n\nReferences\n\nC. C. Holt (1957)\nForecasting seasonals and trends by exponentially weighted moving averages,\nONR Research Memorandum, Carnegie Institute of Technology 52.\n(reprint at doi:10.1016/j.ijforecast.2003.09.015).\n\nP. R. Winters (1960).\nForecasting sales by exponentially weighted moving averages.\nManagement Science, 6, 324–342.\ndoi:10.1287/mnsc.6.3.324.\n\n\n\nSee Also\n\npredict.HoltWinters, optim.\n\n\n\nExamples\n\n\nrequire(graphics)\n\n## Seasonal Holt-Winters\n(m &lt;- HoltWinters(co2))\nplot(m)\nplot(fitted(m))\n\n(m &lt;- HoltWinters(AirPassengers, seasonal = \"mult\"))\nplot(m)\n\n## Non-Seasonal Holt-Winters\nx &lt;- uspop + rnorm(uspop, sd = 5)\nm &lt;- HoltWinters(x, gamma = FALSE)\nplot(m)\n\n## Exponential Smoothing\nm2 &lt;- HoltWinters(x, gamma = FALSE, beta = FALSE)\nlines(fitted(m2)[,1], col = 3)\n\n\n\n[Package stats version 4.2.2 ]"
  },
  {
    "objectID": "posts/[TS] 03.html#여러-평활상수에-따른-변화",
    "href": "posts/[TS] 03.html#여러-평활상수에-따른-변화",
    "title": "[TS] CH03. 평활법 실습",
    "section": "여러 평활상수에 따른 변화",
    "text": "여러 평활상수에 따른 변화\n\nw &lt;-c(seq(0.1,0.8,0.1), seq(0.81, 0.99, 0.01))\n\n\nSSE_ses &lt;- sapply(w, function(alpha) HoltWinters(mindex,\n                 alpha=alpha,\n                 beta=FALSE,\n                 gamma=FALSE)$SSE)\nplot(w,SSE_ses, type=\"o\", xlab=\"weight\", ylab=\"SSE\", pch=16,\n     main=\"1 시차 후 예측오차의 제곱합\",\n     cex.main = 2, cex.lab=2)\n\n\n\n\n- SSE를 가장 작게 하는 값 찾자\n\nwhich.min(SSE_ses)\n\n18\n\n\n\nw[which.min(SSE_ses)]\n\n0.9\n\n\n\nplot(w[-(1:7)],SSE_ses[-(1:7)], type=\"o\", xlab=\"weight\", ylab=\"SSE\", pch=16,\n main=\"1 시차 후 예측오차의 제곱합\",\n cex.main = 2, cex.lab=2)\n\n\n\n\n\nfit1 &lt;- ses(mindex, alpha=w[which.min(SSE_ses)], initial = \"simple\", h=6)\n\n\nplot(fit1, xlab=\"\", ylab=\"\",\n main=\"중간재 출하지수와 단순지수평활값 alpha=0.9\",\n lty=1,col=\"black\",\n cex.main = 2, cex.lab=2 )\nlines(fitted(fit1), col=\"red\", lty=2)\nlegend(\"topright\", legend=c(\"Mindex\", expression(alpha==0.9)),\n lty=1:2,col=c(\"black\",\"red\"))\n\n\n\n\n\nfit0_w &lt;- HoltWinters(mindex,\n beta=FALSE,\n gamma=FALSE)\nfit0_w\n\nHolt-Winters exponential smoothing without trend and without seasonal component.\n\nCall:\nHoltWinters(x = mindex, beta = FALSE, gamma = FALSE)\n\nSmoothing parameters:\n alpha: 0.9036403\n beta : FALSE\n gamma: FALSE\n\nCoefficients:\n      [,1]\na 11.15433\n\n\n\n위와 같이 alpha값을 지정해주지 않으면, 1시차 후의 SSE가 작은 값을 함수가 찾는다."
  },
  {
    "objectID": "posts/[TS] 03.html#잔차",
    "href": "posts/[TS] 03.html#잔차",
    "title": "[TS] CH03. 평활법 실습",
    "section": "잔차",
    "text": "잔차\n\nfit1 &lt;- ses(mindex, alpha=fit0_w$alpha, h=12)\n\n\nls(fit1)\n\n\n'fitted''level''lower''mean''method''model''residuals''series''upper''x'\n\n\n\nplot(fit1$residuals, ylab=\"residual\",\n main=\"예측 오차의 시계열그림 : alpha=0.9\",\n cex.main = 2, cex.lab=2); abline(h=0)\n\n\n\n\n\n오차의 평균이 0인가?\n\nt.test(fit1$residual)\n\n\n    One Sample t-test\n\ndata:  fit1$residual\nt = 0.089225, df = 99, p-value = 0.9291\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.3983934  0.4359099\nsample estimates:\n mean of x \n0.01875828 \n\n\n\n\\(H_0\\): \\(\\mu=0\\) vs. \\(H_1: \\mu \\neq 0\\)\n귀무가설을 기각할 수 없음. 평균은 0이다.\n\n\n\n오차가 독립인가?\n\ndwtest(lm(fit1$residual~1))\n\n\n    Durbin-Watson test\n\ndata:  lm(fit1$residual ~ 1)\nDW = 2.0244, p-value = 0.549\nalternative hypothesis: true autocorrelation is greater than 0\n\n\n\n\\(H_0\\): 독립이다.\ndwtest에는 회귀모형이 들어가야 함.\n\n\ndwtest(lm(fit1$residual~1), alternative = \"two.sided\")\n\n\n    Durbin-Watson test\n\ndata:  lm(fit1$residual ~ 1)\nDW = 2.0244, p-value = 0.902\nalternative hypothesis: true autocorrelation is not 0\n\n\n\n독립이다.\n\n\nfit2 &lt;- ses(mindex, alpha=0.3, h=6)\nplot(fit2, xlab=\"year\", ylab=\"mindex\",\n main=expression(\"중간재 출하지수와 단순지수평활값 \"~alpha==0.3),\n lty=1,col=\"black\",\n cex.main = 2,\n cex.lab=2)\nlines(fitted(fit2), col=\"red\", lty=2)\nlegend(\"topright\",\n legend=c(\"Mindex\",expression(alpha==0.3)),\n lty=1:2,\n col=c(\"black\",\"red\"))\n\n\n\n\n\nplot(fit2$residuals, ylab=\"residual\",\n main=expression(\"중간재 출하지수와 단순지수평활값 \"~alpha==0.3),\n cex.main = 2,\n cex.lab=2); abline(h=0)\n\n\n\n\n오차의 평균이 0인가?\n\nt.test(fit2$residual)\n\n\n    One Sample t-test\n\ndata:  fit2$residual\nt = -0.19433, df = 99, p-value = 0.8463\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.6067721  0.4985236\nsample estimates:\n  mean of x \n-0.05412425 \n\n\n오차가 독립인가?\n\ndwtest(lm(fit2$residual~1))\n\n\n    Durbin-Watson test\n\ndata:  lm(fit2$residual ~ 1)\nDW = 0.70285, p-value = 2.853e-11\nalternative hypothesis: true autocorrelation is greater than 0"
  },
  {
    "objectID": "posts/[TS] 03.html#모수-이중지수평활-alpha-beta",
    "href": "posts/[TS] 03.html#모수-이중지수평활-alpha-beta",
    "title": "[TS] CH03. 평활법 실습",
    "section": "1모수 이중지수평활 \\((\\alpha = \\beta)\\)",
    "text": "1모수 이중지수평활 \\((\\alpha = \\beta)\\)\n\nfit4 = holt(stock, alpha=0.6, beta=0.6, h=6)\nfit4$model\n\nHolt's method \n\nCall:\n holt(y = stock, h = 6, alpha = 0.6, beta = 0.6) \n\n  Smoothing parameters:\n    alpha = 0.6 \n    beta  = 0.6 \n\n  Initial states:\n    l = 115.6009 \n    b = 6.8098 \n\n  sigma:  40.2546\n\n     AIC     AICc      BIC \n1149.575 1149.836 1157.268 \n\n\n\nplot(fit4, ylab=\"\", xlab=\"\", lty=1, col=\"black\",\n main=\"주가지수와 이중지수평활값 : alpha=beta=0.6\"\n )\nlines(fitted(fit4), col=\"red\", lty=2)\nlegend(\"topleft\", lty=1:2, col=c(\"black\",\"red\"), c(\"Index\", \"Double\"), bty = \"n\")"
  },
  {
    "objectID": "posts/[TS] 03.html#이중지수평활-alpha-beta-추정",
    "href": "posts/[TS] 03.html#이중지수평활-alpha-beta-추정",
    "title": "[TS] CH03. 평활법 실습",
    "section": "이중지수평활 \\(\\alpha, \\beta\\) 추정",
    "text": "이중지수평활 \\(\\alpha, \\beta\\) 추정\n\nfit5 = holt(stock, h=6)\nfit5$model\n\nHolt's method \n\nCall:\n holt(y = stock, h = 6) \n\n  Smoothing parameters:\n    alpha = 0.9999 \n    beta  = 0.1071 \n\n  Initial states:\n    l = 124.1137 \n    b = 3.4954 \n\n  sigma:  31.8609\n\n     AIC     AICc      BIC \n1108.677 1109.343 1121.498 \n\n\n\nfit50 &lt;- HoltWinters(stock,\n                     gamma = FALSE)\n\n\nfit50\n\nHolt-Winters exponential smoothing with trend and without seasonal component.\n\nCall:\nHoltWinters(x = stock, gamma = FALSE)\n\nSmoothing parameters:\n alpha: 1\n beta : 0.1094451\n gamma: FALSE\n\nCoefficients:\n        [,1]\na 625.060000\nb  -7.097122\n\n\n\npredict(fit50, n.ahead=12, prediction.interval = T, level=0.95) \n\n\nA Time Series: 12 × 3\n\n\n\nfit\nupr\nlwr\n\n\n\n\nJan 1992\n617.9629\n680.0626\n555.8631\n\n\nFeb 1992\n610.8658\n703.6185\n518.1130\n\n\nMar 1992\n603.7686\n723.4869\n484.0504\n\n\nApr 1992\n596.6715\n742.0570\n451.2860\n\n\nMay 1992\n589.5744\n760.1877\n418.9611\n\n\nJun 1992\n582.4773\n778.2851\n386.6695\n\n\nJul 1992\n575.3801\n796.5695\n354.1907\n\n\nAug 1992\n568.2830\n815.1705\n321.3955\n\n\nSep 1992\n561.1859\n834.1678\n288.2040\n\n\nOct 1992\n554.0888\n853.6121\n254.5655\n\n\nNov 1992\n546.9917\n873.5358\n220.4475\n\n\nDec 1992\n539.8945\n893.9596\n185.8294\n\n\n\n\n\n\nHoltWinter 예측하는거\n\n\nfit5\n\n         Point Forecast    Lo 80    Hi 80    Lo 95    Hi 95\nJan 1992       618.0360 577.2045 658.8674 555.5897 680.4822\nFeb 1992       611.0079 550.0961 671.9196 517.8514 704.1644\nMar 1992       603.9798 525.4452 682.5144 483.8715 724.0881\nApr 1992       596.9517 501.6745 692.2290 451.2377 742.6657\nMay 1992       589.9237 478.2155 701.6319 419.0807 760.7666\nJun 1992       582.8956 454.7987 710.9924 386.9883 778.8028\n\n\n- 시점 n에서 l-시차 후의 예측값\n\\[\\hat {Z}_n(l) = \\hat {\\beta}_{0,n} + \\hat {\\beta}_{1,n}(n+l) = \\left( 2+ \\dfrac{w}{1-w}l \\right) S_n^{(1)} - \\left( 1+ \\dfrac{w}{1-w}l \\right) S_n^{(2)}\\]\n\nplot(fit5, ylab=\"Index\", xlab=\"year\", lty=1, col=\"black\",\n main=expression(\"중간재 출하지수와 이중지수평활값 : \"~alpha~\",\"~beta~ \" : estimated\"),\n cex.main=2)\nlines(fitted(fit5), col=\"red\", lty=2)\nlegend(\"topleft\", lty=1:2, col=c(\"black\",\"red\"), c(\"Index\", \"Double\"))\n\n\n\n\n\nplot(resid(fit5), main=expression(\"Residual Plot : \"~alpha~\",\"~beta~ \" : estimated\"),\n cex.main=2)\nabline(h=0)\n\n\n\n\n\ndwtest(lm(fit5$residuals~1), alternative = \"two.sided\")\n\n\n    Durbin-Watson test\n\ndata:  lm(fit5$residuals ~ 1)\nDW = 1.658, p-value = 0.09054\nalternative hypothesis: true autocorrelation is not 0"
  },
  {
    "objectID": "posts/[TS] 03.html#holt-winters-additive-model",
    "href": "posts/[TS] 03.html#holt-winters-additive-model",
    "title": "[TS] CH03. 평활법 실습",
    "section": "Holt Winters additive model",
    "text": "Holt Winters additive model\n\nfit_hw &lt;- HoltWinters(pass, seasonal=\"additive\") #default는 additive\n\n\nfit_hw\n\nHolt-Winters exponential smoothing with trend and additive seasonal component.\n\nCall:\nHoltWinters(x = pass, seasonal = \"additive\")\n\nSmoothing parameters:\n alpha: 0.4810767\n beta : 0.0383379\n gamma: 0.7345988\n\nCoefficients:\n          [,1]\na   347794.753\nb     3363.251\ns1  -12186.666\ns2  -33643.322\ns3    4855.643\ns4    5000.713\ns5   29085.909\ns6   22953.006\ns7   32200.195\ns8   49687.643\ns9  -11655.430\ns10  10218.813\ns11  -4226.391\ns12 -38683.394\n\n\n\nhead(fit_hw$fitted)\n\n\nA Time Series: 6 × 4\n\n\n\nxhat\nlevel\ntrend\nseason\n\n\n\n\nJan 1982\n128208.0\n135375.1\n769.6180\n-7936.701\n\n\nFeb 1982\n114877.0\n138637.6\n865.1923\n-24625.868\n\n\nMar 1982\n135627.2\n140706.0\n911.3201\n-5990.160\n\n\nApr 1982\n149303.2\n141945.3\n923.8952\n6433.924\n\n\nMay 1982\n156969.9\n142952.4\n927.0829\n13090.465\n\n\nJun 1982\n147259.4\n143945.4\n929.6108\n2384.382\n\n\n\n\n\n\n135375.1+769.6180-7936.701\n\n128208.017\n\n\nxhat = level + trend + season\n- 계절지수평활 예측\n\\[\\hat{Z}_n(k) = \\hat{T}_n + \\hat{\\beta}_{1,n}k + \\hat{S}_{n+k-s}, k=1,2,\\dots, s\\]\n\nplot(fit_hw, lwd=2)\n\n\n\n\n\npredict(fit_hw, n.ahead=12, prediction.interval = T, level=0.95)\n\n\nA Time Series: 12 × 3\n\n\n\nfit\nupr\nlwr\n\n\n\n\nJan 1990\n338971.3\n362386.4\n315556.2\n\n\nFeb 1990\n320877.9\n347051.8\n294704.1\n\n\nMar 1990\n362740.1\n391587.4\n333892.9\n\n\nApr 1990\n366248.5\n397711.4\n334785.5\n\n\nMay 1990\n393696.9\n427736.7\n359657.1\n\n\nJun 1990\n390927.3\n427518.3\n354336.2\n\n\nJul 1990\n403537.7\n442664.2\n364411.2\n\n\nAug 1990\n424388.4\n466041.9\n382734.9\n\n\nSep 1990\n366408.6\n410586.3\n322230.9\n\n\nOct 1990\n391646.1\n438349.7\n344942.5\n\n\nNov 1990\n380564.1\n429798.8\n331329.4\n\n\nDec 1990\n349470.4\n401244.2\n297696.5\n\n\n\n\n\n\nfit6= hw(pass,\n alpha = fit_hw$alpha,\n beta = fit_hw$beta,\n gamma = fit_hw$gamma,\n seasonal=\"additive\",\n initial=\"simple\",\n h=12)\nfit6$model\n\nHolt-Winters' additive method \n\nCall:\n hw(y = pass, h = 12, seasonal = \"additive\", initial = \"simple\",  \n\n Call:\n     alpha = fit_hw$alpha, beta = fit_hw$beta, gamma = fit_hw$gamma) \n\n  Smoothing parameters:\n    alpha = 0.4811 \n    beta  = 0.0383 \n    gamma = 0.7346 \n\n  Initial states:\n    l = 134510.75 \n    b = 874.0694 \n    s = -16817.75 6028.25 14250.25 4115.25 23712.25 8522.25\n           1617.25 15553.25 7985.25 -11710.75 -31440.75 -21814.75\n\n  sigma:  12483.69\n\n\n\nfit6\n\n         Point Forecast    Lo 80    Hi 80    Lo 95    Hi 95\nJan 1990       339962.9 323964.4 355961.4 315495.3 364430.4\nFeb 1990       307759.0 289731.1 325786.9 280187.7 335330.3\nMar 1990       354907.1 334791.7 375022.5 324143.3 385670.9\nApr 1990       353308.1 331046.6 375569.6 319262.1 387354.2\nMay 1990       391666.8 367200.6 416133.1 354249.0 429084.7\nJun 1990       393291.1 366562.0 420020.2 352412.5 434169.7\nJul 1990       408050.5 379001.1 437099.9 363623.2 452477.8\nAug 1990       428126.3 396699.7 459552.8 380063.5 476189.1\nSep 1990       374195.2 340335.6 408054.7 322411.4 425978.9\nOct 1990       381277.1 344929.5 417624.7 325688.2 436866.0\nNov 1990       373366.6 334476.8 412256.5 313889.7 432843.5\nDec 1990       347593.0 306107.7 389078.3 284146.7 411039.3\n\n\n\nplot(fit6, ylab=\"passenger\", xlab=\"year\", lty=1, col=\"blue\",\n main=\"Winters 가법계절지수평활된 자료의 시계열 그림\",\n cex.main=2)\nlines(fit6$fitted, lwd=3, col='red', lty=2)\n\n\n\n\n\nts.plot(fit6$residual, ylab=\"residual\",\n main=\"가법모형의 잔차 그림\",\n cex.main=2); abline(h=0)\n\n\n\n\n\ndwtest(lm(fit6$residual~1), alternative = 'two.sided')\n\n\n    Durbin-Watson test\n\ndata:  lm(fit6$residual ~ 1)\nDW = 1.9794, p-value = 0.9139\nalternative hypothesis: true autocorrelation is not 0"
  },
  {
    "objectID": "posts/[TS] 03.html#holt-winters-multiplicative-model",
    "href": "posts/[TS] 03.html#holt-winters-multiplicative-model",
    "title": "[TS] CH03. 평활법 실습",
    "section": "Holt Winters multiplicative model",
    "text": "Holt Winters multiplicative model\n\nfit_hw_m &lt;- HoltWinters(pass, seasonal=\"multiplicative\")\nfit_hw_m\n\nHolt-Winters exponential smoothing with trend and multiplicative seasonal component.\n\nCall:\nHoltWinters(x = pass, seasonal = \"multiplicative\")\n\nSmoothing parameters:\n alpha: 0.5623303\n beta : 0.03452066\n gamma: 0.3506508\n\nCoefficients:\n            [,1]\na   3.560417e+05\nb   3.517556e+03\ns1  9.199511e-01\ns2  8.489190e-01\ns3  9.796617e-01\ns4  1.016528e+00\ns5  1.095078e+00\ns6  1.060795e+00\ns7  1.089621e+00\ns8  1.178393e+00\ns9  9.706046e-01\ns10 1.065056e+00\ns11 9.983082e-01\ns12 8.552947e-01\n\n\n\npredict(fit_hw_m, n.ahead=12, prediction.interval = T, level=0.95)\n\n\nA Time Series: 12 × 3\n\n\n\nfit\nupr\nlwr\n\n\n\n\nJan 1990\n330777.0\n346829.6\n314724.3\n\n\nFeb 1990\n308222.8\n328288.3\n288157.4\n\n\nMar 1990\n359138.5\n385415.3\n332861.7\n\n\nApr 1990\n376229.1\n406856.5\n345601.8\n\n\nMay 1990\n409153.3\n445160.0\n373146.6\n\n\nJun 1990\n400075.7\n438217.8\n361933.6\n\n\nJul 1990\n414780.3\n456969.6\n372591.0\n\n\nAug 1990\n452717.7\n501167.0\n404268.5\n\n\nSep 1990\n376303.1\n419627.5\n332978.8\n\n\nOct 1990\n416668.2\n466954.3\n366382.1\n\n\nNov 1990\n394067.0\n444265.0\n343869.1\n\n\nDec 1990\n340623.2\n383998.5\n297247.9\n\n\n\n\n\n- 예측\n\\[\\hat{Z}(l) = \\hat{T}_n(l) \\times \\hat{S}_{n+l-ks}, k= \\left[ \\frac{l}{s} \\right] +1\\]\n\n(135375.1+769.6180)*0.9434021\n\n128439.212865108\n\n\nxhat = (level+trend)*season\n\nfit_hw_m$fitted\n\n\nA Time Series: 96 × 4\n\n\n\nxhat\nlevel\ntrend\nseason\n\n\n\n\nJan 1982\n128439.2\n135375.1\n769.6180\n0.9434021\n\n\nFeb 1982\n115639.6\n139095.7\n871.4889\n0.8261910\n\n\nMar 1982\n136017.4\n141150.4\n912.3332\n0.9574463\n\n\nApr 1982\n149518.1\n142234.0\n918.2449\n1.0444694\n\n\nMay 1982\n157061.6\n143129.5\n917.4625\n1.0903497\n\n\nJun 1982\n147301.4\n144070.4\n918.2707\n1.0159511\n\n\nJul 1982\n153718.4\n144910.4\n915.5686\n1.0541223\n\n\nAug 1982\n168929.0\n145526.0\n905.2115\n1.1536408\n\n\nSep 1982\n145356.8\n144200.2\n828.1961\n1.0022647\n\n\nOct 1982\n152328.4\n141789.5\n716.3873\n1.0689275\n\n\nNov 1982\n151308.0\n149505.0\n958.0018\n1.0056162\n\n\nDec 1982\n124771.8\n148084.2\n875.8840\n0.8376189\n\n\nJan 1983\n145221.4\n152064.5\n983.0515\n0.9488645\n\n\nFeb 1983\n123699.8\n148553.4\n827.9091\n0.8280811\n\n\nMar 1983\n149535.4\n155104.7\n1025.4840\n0.9577609\n\n\nApr 1983\n158835.4\n151223.3\n856.0960\n1.0444242\n\n\nMay 1983\n164154.8\n149769.4\n776.3532\n1.0903980\n\n\nJun 1983\n156407.8\n153110.0\n864.8720\n1.0158013\n\n\nJul 1983\n162915.9\n153780.1\n858.1482\n1.0535292\n\n\nAug 1983\n181695.3\n157217.9\n947.2020\n1.1487696\n\n\nSep 1983\n167826.2\n167237.0\n1260.3691\n0.9960164\n\n\nOct 1983\n175269.4\n160900.9\n998.1329\n1.0825849\n\n\nNov 1983\n159827.9\n158745.8\n889.2831\n1.0012074\n\n\nDec 1983\n127751.9\n151079.0\n593.9197\n0.8422859\n\n\nJan 1984\n142532.5\n150897.2\n567.1406\n0.9410302\n\n\nFeb 1984\n121903.3\n145386.7\n357.3392\n0.8364204\n\n\nMar 1984\n144778.3\n151942.5\n571.3136\n0.9492795\n\n\nApr 1984\n160473.4\n153685.4\n611.7569\n1.0400279\n\n\nMay 1984\n169547.0\n154175.9\n607.5694\n1.0953819\n\n\nJun 1984\n160803.2\n157650.1\n706.5277\n1.0154502\n\n\nJul 1984\n173694.6\n163258.5\n875.7438\n1.0582471\n\n\nAug 1984\n195138.7\n166434.3\n955.1427\n1.1657766\n\n\nSep 1984\n164547.1\n166439.3\n922.3449\n0.9831827\n\n\nOct 1984\n185610.3\n171326.4\n1059.2090\n1.0767162\n\n\nNov 1984\n171413.6\n172820.4\n1074.2210\n0.9857326\n\n\nDec 1984\n147645.7\n174444.8\n1093.2124\n0.8411041\n\n\nJan 1985\n166446.4\n177748.5\n1169.5180\n0.9302943\n\n\nFeb 1985\n146908.1\n172748.6\n956.5467\n0.8457327\n\n\nMar 1985\n164250.1\n171776.8\n889.9809\n0.9512544\n\n\nApr 1985\n188619.2\n180247.0\n1151.6551\n1.0398045\n\n\nMay 1985\n199768.4\n180357.0\n1115.6953\n1.1008179\n\n\nJun 1985\n180180.9\n175101.4\n895.7550\n1.0237712\n\n\nJul 1985\n193953.7\n181503.7\n1085.8446\n1.0622383\n\n\nAug 1985\n215179.5\n183742.8\n1125.6531\n1.1639604\n\n\nSep 1985\n185692.7\n186501.6\n1182.0312\n0.9893921\n\n\nOct 1985\n202200.9\n186523.2\n1141.9731\n1.0774556\n\n\nNov 1985\n179243.3\n180777.1\n904.1926\n0.9865810\n\n\nDec 1985\n153140.0\n180587.9\n866.4476\n0.8439588\n\n\nJan 1986\n172106.7\n185806.6\n1016.6913\n0.9212270\n\n\nFeb 1986\n153977.5\n181780.9\n842.6228\n0.8431417\n\n\nMar 1986\n179279.4\n185389.7\n938.1127\n0.9621723\n\n\nApr 1986\n203305.2\n194607.3\n1223.9257\n1.0381655\n\n\nMay 1986\n208927.8\n190651.8\n1045.1284\n1.0898863\n\n\nJun 1986\n197018.2\n189880.8\n982.4368\n1.0322479\n\n\nJul 1986\n212180.6\n198172.2\n1234.7474\n1.0640578\n\n\nAug 1986\n238655.1\n203183.2\n1365.1045\n1.1667422\n\n\nSep 1986\n208779.2\n209829.1\n1547.4027\n0.9877122\n\n\nOct 1986\n224934.7\n209476.6\n1481.8151\n1.0662514\n\n\nNov 1986\n214191.6\n215814.8\n1649.4602\n0.9849507\n\n\nDec 1986\n187470.3\n219018.0\n1703.0961\n0.8493540\n\n\nJan 1987\n202258.4\n219564.9\n1663.1842\n0.9142529\n\n\nFeb 1987\n184970.6\n216976.5\n1516.4157\n0.8465751\n\n\nMar 1987\n213274.2\n217628.3\n1486.5694\n0.9733442\n\n\nApr 1987\n228708.4\n220414.6\n1531.4390\n1.0304682\n\n\nMay 1987\n240375.6\n219675.2\n1453.0466\n1.0870415\n\n\nJun 1987\n230858.4\n220003.3\n1414.2138\n1.0426382\n\n\nJul 1987\n242751.4\n225433.2\n1552.8376\n1.0694549\n\n\nAug 1987\n272726.7\n230482.5\n1673.5374\n1.1747561\n\n\nSep 1987\n231155.7\n232912.5\n1699.6504\n0.9852673\n\n\nOct 1987\n249317.1\n230829.5\n1569.0702\n1.0727996\n\n\nNov 1987\n220386.3\n222107.5\n1213.8155\n0.9868577\n\n\nDec 1987\n189030.6\n221719.9\n1158.5349\n0.8481333\n\n\nJan 1988\n199905.9\n218812.4\n1018.1716\n0.9093637\n\n\nFeb 1988\n186408.5\n219426.2\n1004.2127\n0.8456572\n\n\nMar 1988\n220678.5\n225189.2\n1168.4887\n0.9749107\n\n\nApr 1988\n239733.3\n231942.0\n1361.2624\n1.0275610\n\n\nMay 1988\n256712.8\n235065.2\n1422.0871\n1.0855245\n\n\nJun 1988\n259416.0\n245858.0\n1745.5700\n1.0477070\n\n\nJul 1988\n275036.2\n254142.5\n1971.2982\n1.0738826\n\n\nAug 1988\n315076.2\n265667.0\n2301.0825\n1.1757973\n\n\nSep 1988\n271768.2\n274543.1\n2528.0540\n0.9808608\n\n\nOct 1988\n273789.7\n256655.7\n1823.2999\n1.0592337\n\n\nNov 1988\n273615.5\n275399.5\n2407.4071\n0.9849124\n\n\nDec 1988\n255666.9\n299816.0\n3167.1744\n0.8438321\n\n\nJan 1989\n285956.7\n311166.6\n3449.6732\n0.9089063\n\n\nFeb 1989\n283426.4\n329277.5\n3955.7888\n0.8505344\n\n\nMar 1989\n328551.3\n330930.3\n3876.2862\n0.9813167\n\n\nApr 1989\n346538.9\n332750.4\n3805.3046\n1.0296631\n\n\nMay 1989\n356260.4\n321526.7\n3286.4962\n1.0968162\n\n\nJun 1989\n344118.9\n322937.6\n3221.7479\n1.0550639\n\n\nJul 1989\n364618.5\n332782.7\n3450.3919\n1.0844217\n\n\nAug 1989\n409371.2\n342246.0\n3657.9609\n1.1834823\n\n\nSep 1989\n330102.0\n340538.5\n3472.7404\n0.9595674\n\n\nOct 1989\n391103.1\n359147.7\n3995.2609\n1.0769949\n\n\nNov 1989\n354111.2\n348968.1\n3505.9370\n1.0046446\n\n\nDec 1989\n295543.2\n344512.4\n3231.0940\n0.8498887\n\n\n\n\n\n\nfit7= hw(pass,\n alpha = fit_hw_m$alpha,\n beta = fit_hw_m$beta,\n gamma = fit_hw_m$gamma,\n seasonal=\"multiplicative\",\n initial=\"simple\",\n h=12)\nfit7$model\n\nHolt-Winters' multiplicative method \n\nCall:\n hw(y = pass, h = 12, seasonal = \"multiplicative\", initial = \"simple\",  \n\n Call:\n     alpha = fit_hw_m$alpha, beta = fit_hw_m$beta, gamma = fit_hw_m$gamma) \n\n  Smoothing parameters:\n    alpha = 0.5623 \n    beta  = 0.0345 \n    gamma = 0.3507 \n\n  Initial states:\n    l = 134510.75 \n    b = 874.0694 \n    s = 0.875 1.0448 1.1059 1.0306 1.1763 1.0634\n           1.012 1.1156 1.0594 0.9129 0.7663 0.8378\n\n  sigma:  0.053\n\n\n\nplot(fit7, ylab=\"passenger\", xlab=\"year\", lty=1, col=\"blue\",\n main=\"Winters 승법계절지수평활된 자료의 시계열 그림\",\n cex.main=2)\nlines(fit7$fitted, col=\"red\", lty=2)\nlegend(\"topleft\", lty=1:2, col=c(\"blue\",\"red\"), c(\"Pass\", \"Multiplicative\"))\n\n\n\n\n\nts.plot(fit7$residual, ylab=\"residual\",\n main=\"승법모형의 잔차 그림\",\n cex.main=2); abline(h=0)\n\n\n\n\n\ndwtest(lm(fit7$residual~1), alternative = 'two.sided')\n\n\n    Durbin-Watson test\n\ndata:  lm(fit7$residual ~ 1)\nDW = 1.9744, p-value = 0.8931\nalternative hypothesis: true autocorrelation is not 0\n\n\n\n\nfit_hw$SSE\n\n13764737658.0239\n\n\n\nfit_hw_m$SSE\n\n12633778874.3409\n\n\n가법과 승법 모형의 SSE를 비교해서 SSE값이 더 작은 모형을 선택해 주자."
  },
  {
    "objectID": "posts/[TS] 04_01.html",
    "href": "posts/[TS] 04_01.html",
    "title": "[TS] CH04_01. 추세에 의한 분할법 실습",
    "section": "",
    "text": "해당 자료는 전북대학교 이영미 교수님 2023고급시계열분석 자료임"
  },
  {
    "objectID": "posts/[TS] 04_01.html#추세성분-추정-z_t-beta_0-beta_1t-epsilon_t-적합",
    "href": "posts/[TS] 04_01.html#추세성분-추정-z_t-beta_0-beta_1t-epsilon_t-적합",
    "title": "[TS] CH04_01. 추세에 의한 분할법 실습",
    "section": "1. 추세성분 추정: \\(Z_t = \\beta_0 + \\beta_1t + \\epsilon_t\\) 적합",
    "text": "1. 추세성분 추정: \\(Z_t = \\beta_0 + \\beta_1t + \\epsilon_t\\) 적합\n\nfit &lt;- lm(log_food ~ t ) \nsummary(fit)\n\n\nCall:\nlm(formula = log_food ~ t)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.251154 -0.042190  0.009368  0.051058  0.147910 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 3.705715   0.012870  287.94   &lt;2e-16 ***\nt           0.007216   0.000154   46.86   &lt;2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.07682 on 142 degrees of freedom\nMultiple R-squared:  0.9393,    Adjusted R-squared:  0.9388 \nF-statistic:  2195 on 1 and 142 DF,  p-value: &lt; 2.2e-16\n\n\n\n\\(\\hat{T}_t = 3.706 + 0.007t\\)\n\n\nhat_Tt &lt;- fitted(fit)\n\nts.plot(log_food, hat_Tt,\n     col=1:2,\n     lty=1:2,\n     lwd=2:3,\n     ylab=\"food\", xlab=\"time\",\n     main=\"log변환한 시계열과 분해법에 의한 추세성분\")\nlegend(\"topleft\", lty=1:2, col=1:2, lwd=2:3, c(\"ln(z)\", \"추세성분\"))"
  },
  {
    "objectID": "posts/[TS] 04_01.html#계절성분-추정-z_t-hatt_t-delta_1i_1-dots-delta_12-i_12-epsilon_t-적합",
    "href": "posts/[TS] 04_01.html#계절성분-추정-z_t-hatt_t-delta_1i_1-dots-delta_12-i_12-epsilon_t-적합",
    "title": "[TS] CH04_01. 추세에 의한 분할법 실습",
    "section": "2. 계절성분 추정 \\(Z_t-\\hat{T}_t = \\delta_1I_1 + \\dots + \\delta_{12} I_{12} + \\epsilon_t\\): 적합",
    "text": "2. 계절성분 추정 \\(Z_t-\\hat{T}_t = \\delta_1I_1 + \\dots + \\delta_{12} I_{12} + \\epsilon_t\\): 적합\n위에서 지시함수를 이용하여 모형 적합\n\n## 원시계열에서 추세성분 조정\nadjtrend = log_food-hat_Tt\nplot.ts(adjtrend, lwd=2)\n\n\n\n\n\n## 지시함수를 이용한 계절성분 추정\ny = factor(cycle(adjtrend)) #범주형 변수로 변환\n\nfit1 &lt;- lm(adjtrend ~ 0+y)\nsummary(fit1)\n\n\nCall:\nlm(formula = adjtrend ~ 0 + y)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.182321 -0.028501  0.000597  0.025663  0.146887 \n\nCoefficients:\n    Estimate Std. Error t value Pr(&gt;|t|)    \ny1  -0.06883    0.01423  -4.837 3.61e-06 ***\ny2  -0.13853    0.01423  -9.735  &lt; 2e-16 ***\ny3  -0.01290    0.01423  -0.907 0.366289    \ny4   0.03840    0.01423   2.699 0.007872 ** \ny5   0.08825    0.01423   6.201 6.69e-09 ***\ny6   0.03871    0.01423   2.720 0.007401 ** \ny7   0.01061    0.01423   0.746 0.457221    \ny8   0.05972    0.01423   4.197 4.94e-05 ***\ny9   0.03776    0.01423   2.653 0.008945 ** \ny10 -0.01856    0.01423  -1.304 0.194518    \ny11 -0.05041    0.01423  -3.542 0.000549 ***\ny12  0.01577    0.01423   1.108 0.269816    \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.0493 on 132 degrees of freedom\nMultiple R-squared:  0.6172,    Adjusted R-squared:  0.5824 \nF-statistic: 17.73 on 12 and 132 DF,  p-value: &lt; 2.2e-16\n\n\n\n제약조건: beta0=0이므로 각 계수들은 각 월에 평균을 의미함\n\\(\\hat{S}_t = −0.069I_1 − 0.139I_2 + ⋯ + 0.016I_{12}\\)\n\n\nhat_St &lt;- fitted(fit1)\nts.plot(hat_St, main=\"추정된 계절성분\")"
  },
  {
    "objectID": "posts/[TS] 04_01.html#불규칙-성분-hati_t-z_t---hatt_t---hats_t",
    "href": "posts/[TS] 04_01.html#불규칙-성분-hati_t-z_t---hatt_t---hats_t",
    "title": "[TS] CH04_01. 추세에 의한 분할법 실습",
    "section": "3. 불규칙 성분 \\(\\hat{I}_t = Z_t - \\hat{T}_t - \\hat{S}_t\\)",
    "text": "3. 불규칙 성분 \\(\\hat{I}_t = Z_t - \\hat{T}_t - \\hat{S}_t\\)\n\nhat_It &lt;- log_food - hat_Tt - hat_St\nts.plot(hat_It); abline(h=0)\n\n\n\n\n\n불규칙 성분들은 0을 근처로 왔다갔다 하면 좋다. 평균이 0인가?에 대한\n정규분포는 크게 중요하지는 않다.\n\n\nt.test(hat_It) #H0 : mu=E(It)=0\n\n\n    One Sample t-test\n\ndata:  hat_It\nt = 5.9991e-16, df = 143, p-value = 1\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.007801616  0.007801616\nsample estimates:\n   mean of x \n2.367739e-18 \n\n\n\n귀무가설을 기각할 수 없다. 즉 평균이 0이다.\n\n\nhist(hat_It)\n\n\n\n\n\ndwtest(lm(hat_It~ 1),\n alternative = 'two.sided')\n\n\n    Durbin-Watson test\n\ndata:  lm(hat_It ~ 1)\nDW = 1.0803, p-value = 2.748e-08\nalternative hypothesis: true autocorrelation is not 0\n\n\n\n오차가 uncorrelected인지 확인해야함..\n양의 상관관계가 있어보인다.\n\n\nbptest이용해서 등분산성/이분사넛ㅇ 확인해야함.. -&gt; 자꾸 오류나넹"
  },
  {
    "objectID": "posts/[TS] 04_01.html#추정-hatz_t-hatt_t-hats_t",
    "href": "posts/[TS] 04_01.html#추정-hatz_t-hatt_t-hats_t",
    "title": "[TS] CH04_01. 추세에 의한 분할법 실습",
    "section": "4. 추정 \\(\\hat{Z}_t = \\hat{T}_t + \\hat{S}_t\\)",
    "text": "4. 추정 \\(\\hat{Z}_t = \\hat{T}_t + \\hat{S}_t\\)\n\n체계적 성분: 추세, 계절 성분\n비체계적 성분: 불규칙 성분\n\n\npred_a &lt;- hat_Tt + hat_St\n\nts.plot(log_food, pred_a, col=1:2, lty=1:2, lwd=2:3,ylab=\"food\", xlab=\"time\",\n     main=\"log변환한 시계열과 분해법에 의한 추정값\")\nlegend(\"topleft\", lty=1:2, col=2:3, c(\"ln(z)\", \"추정값\"))\n\n\n\n\n\nts.plot(food, exp(pred_a), col=1:2, lty=1:2, lwd=2:3,ylab=\"food\", xlab=\"time\",\n     main=\"시계열과 분해법에 의한 추정값\")\nlegend(\"topleft\", lty=1:2, col=1:2, c(\"Z\", \"추정값\"))\n\n\n\n\n\nSSE/MSE 구할 때 로그 변환 했던 데이터 -&gt; 오리지널 데이터로 변환해서 비교해야함!!!\n\n\nSSE = sum((food-exp(pred_a))^2)\nMSE = mean((food-exp(pred_a))^2)\nSSE\nMSE\n\n1636.87967934919\n\n\n11.3672199954805"
  },
  {
    "objectID": "posts/[TS] 04_01.html#추세성분-추정-z_t-beta_0-beta_1t-epsilon_t-적합-1",
    "href": "posts/[TS] 04_01.html#추세성분-추정-z_t-beta_0-beta_1t-epsilon_t-적합-1",
    "title": "[TS] CH04_01. 추세에 의한 분할법 실습",
    "section": "1. 추세성분 추정: \\(Z_t = \\beta_0 + \\beta_1t + \\epsilon_t\\) 적합",
    "text": "1. 추세성분 추정: \\(Z_t = \\beta_0 + \\beta_1t + \\epsilon_t\\) 적합\n\n## 추세성분 추정\nfit3 &lt;- lm(food ~ t ) \nsummary(fit3)\n\n\nCall:\nlm(formula = food ~ t)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-14.0331  -3.4505  -0.1355   4.2911  15.3948 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 35.28614    0.95561   36.92   &lt;2e-16 ***\nt            0.50557    0.01143   44.21   &lt;2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 5.704 on 142 degrees of freedom\nMultiple R-squared:  0.9323,    Adjusted R-squared:  0.9318 \nF-statistic:  1955 on 1 and 142 DF,  p-value: &lt; 2.2e-16\n\n\n\n\\(\\hat{T}_t = 35.286 + 0.506t\\)\n\n\nts.plot(food, fitted(fit3) , col=1:2, lty=1:2, lwd=2:3, ylab=\"food\", xlab=\"time\",\n main=\"원시계열과 분해법에 의한 추세성분\")\nlegend(\"topleft\", lty=1:2, col=1:2, c(\"원시계열\", \"추세성분\"))\n\n\n\n\n\n약간 2차가 있어보인다.\n\n\nfit4 &lt;- lm(food ~ t+I(t^2)) \nsummary(fit4)\n\n\nCall:\nlm(formula = food ~ t + I(t^2))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-16.845  -3.535   0.566   3.523  13.391 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 4.011e+01  1.346e+00  29.799  &lt; 2e-16 ***\nt           3.071e-01  4.286e-02   7.166 3.96e-11 ***\nI(t^2)      1.369e-03  2.863e-04   4.779 4.37e-06 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 5.31 on 141 degrees of freedom\nMultiple R-squared:  0.9417,    Adjusted R-squared:  0.9409 \nF-statistic:  1139 on 2 and 141 DF,  p-value: &lt; 2.2e-16\n\n\n\nts.plot(food, fitted(fit3), fitted(fit4), col=1:3, lty=1:2, lwd=2:3, ylab=\"food\",\n main=\"원시계열과 분해법에 의한 추세성분\")\nlegend(\"topleft\", lty=1:2, col=1:3, c(\"원시계열\", \"추세성분\", \"2차 추세성분\"))"
  },
  {
    "objectID": "posts/[TS] 04_01.html#계절성분-추정-z_t-hatt_t-delta_1i_1-dots-delta_12-i_12-epsilon_t-적합-1",
    "href": "posts/[TS] 04_01.html#계절성분-추정-z_t-hatt_t-delta_1i_1-dots-delta_12-i_12-epsilon_t-적합-1",
    "title": "[TS] CH04_01. 추세에 의한 분할법 실습",
    "section": "2. 계절성분 추정 \\(Z_t / \\hat{T}_t = \\delta_1I_1 + \\dots + \\delta_{12} I_{12} + \\epsilon_t\\): 적합",
    "text": "2. 계절성분 추정 \\(Z_t / \\hat{T}_t = \\delta_1I_1 + \\dots + \\delta_{12} I_{12} + \\epsilon_t\\): 적합\n\n## 원시계열에서 추세성분 조정\ntrend_1 = fitted(fit3)  # fit3:1차 추세모형\nadjtrend_1 = food/trend_1\nplot.ts(adjtrend_1)\n\n\n\n\n\n## 원시계열에서 2차 추세성분 조정\ntrend_2 = fitted(fit4)  # fit4: 2차 추세모형\nadjtrend_2 = food/trend_2\nplot.ts(adjtrend_2)\nabline(h=1, lty=2)\n\n\n\n\n\n## 지시함수를 이용한 계절성분 추정\ny = factor(cycle(adjtrend_2)) \nfit5 &lt;- lm(adjtrend_2 ~ 0+y)\nsummary(fit5)\n\n\nCall:\nlm(formula = adjtrend_2 ~ 0 + y)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.154659 -0.027736  0.000622  0.028345  0.162186 \n\nCoefficients:\n    Estimate Std. Error t value Pr(&gt;|t|)    \ny1   0.93372    0.01368   68.23   &lt;2e-16 ***\ny2   0.86951    0.01368   63.54   &lt;2e-16 ***\ny3   0.98517    0.01368   72.00   &lt;2e-16 ***\ny4   1.03650    0.01368   75.75   &lt;2e-16 ***\ny5   1.08954    0.01368   79.62   &lt;2e-16 ***\ny6   1.03763    0.01368   75.83   &lt;2e-16 ***\ny7   1.00829    0.01368   73.69   &lt;2e-16 ***\ny8   1.05940    0.01368   77.42   &lt;2e-16 ***\ny9   1.03744    0.01368   75.82   &lt;2e-16 ***\ny10  0.97966    0.01368   71.59   &lt;2e-16 ***\ny11  0.94903    0.01368   69.35   &lt;2e-16 ***\ny12  1.01466    0.01368   74.15   &lt;2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.0474 on 132 degrees of freedom\nMultiple R-squared:  0.998, Adjusted R-squared:  0.9978 \nF-statistic:  5359 on 12 and 132 DF,  p-value: &lt; 2.2e-16\n\n\n\n\\(\\hat{S}_t = 0.934I_1 + 0.870I_2 + ⋯ + 1.015I_{12}\\)\n\n\nseasonal &lt;- fitted(fit5)\nts.plot(seasonal, main=\"추정된 계절성분\")\n\n\n\n\n\nseasonal &lt;- fitted(fit5)\nts.plot(adjtrend_2, seasonal, col=1:2, lty=1:2, lwd=2:3, main=\"추세조정된 시계열\")"
  },
  {
    "objectID": "posts/[TS] 04_01.html#불규칙-성분-hati_t-z_t-hatt_t-times-hats_t",
    "href": "posts/[TS] 04_01.html#불규칙-성분-hati_t-z_t-hatt_t-times-hats_t",
    "title": "[TS] CH04_01. 추세에 의한 분할법 실습",
    "section": "3. 불규칙 성분 \\(\\hat{I}_t = Z_t / ( \\hat{T}_t \\times \\hat{S}_t)\\)",
    "text": "3. 불규칙 성분 \\(\\hat{I}_t = Z_t / ( \\hat{T}_t \\times \\hat{S}_t)\\)\n\nirregular &lt;- food/trend_2/seasonal\n\nts.plot(irregular); abline(h=1, lty=2)\n\n\n\n\n\nt.test(irregular, mu=1)\n\n\n    One Sample t-test\n\ndata:  irregular\nt = 0, df = 143, p-value = 1\nalternative hypothesis: true mean is not equal to 1\n95 percent confidence interval:\n 0.9923514 1.0076486\nsample estimates:\nmean of x \n        1 \n\n\n\n나눠준거기 떄문에.. 비슷하면 1이랑 가까워지니까 mu=1과 비교하는 것\n\n\ndwtest(lm(irregular~ 1), alternative = 'two.sided')\n\n\n    Durbin-Watson test\n\ndata:  lm(irregular ~ 1)\nDW = 1.0897, p-value = 3.799e-08\nalternative hypothesis: true autocorrelation is not 0"
  },
  {
    "objectID": "posts/[TS] 04_01.html#추정-hatz_t-hatt_t-times-hats_t",
    "href": "posts/[TS] 04_01.html#추정-hatz_t-hatt_t-times-hats_t",
    "title": "[TS] CH04_01. 추세에 의한 분할법 실습",
    "section": "4. 추정 \\(\\hat{Z}_t = \\hat{T}_t \\times \\hat{S}_t\\)",
    "text": "4. 추정 \\(\\hat{Z}_t = \\hat{T}_t \\times \\hat{S}_t\\)\n\npred_m &lt;- trend_2 * seasonal\n\nts.plot(food, pred_m, col=1:2, lty=1:2, lwd=2:3, ylab=\"food\", xlab=\"time\",\n main=\"원시계열과 분해법에 의한 추정값\")\nlegend(\"topleft\", lty=1:2, col=1:2, c(\"원시계열\", \"추정값\"))\n\n\n\n\n\n#pred_a #가법\n#pred_m #승법\nts.plot(food, pred_a, pred_m, col=1:3, lty=c(1,1,2), lwd=c(2,3,3), ylab=\"food\", xlab=\"time\",\n     main=\"원시계열과 분해법에 의한 추정값\")\n\n\n\n\npred_a는 원 food데이터에서 log를 취한 값이라 그런지,, 빨간색 선..\n\n#pred_a #가법\n#pred_m #승법\nts.plot(food, exp(pred_a), pred_m, col=1:3, lty=c(1,1,2), lwd=c(2,3,3), ylab=\"food\", xlab=\"time\",\n     main=\"원시계열과 분해법에 의한 추정값\")\n\n\n\n\n\npred_a에 다시 exp를 취해줬다."
  },
  {
    "objectID": "posts/[TS] 02_1.html",
    "href": "posts/[TS] 02_1.html",
    "title": "[TS] CH02. 실습1(추세모형)",
    "section": "",
    "text": "해당 자료는 전북대학교 이영미 교수님 2023고급시계열분석 자료임"
  },
  {
    "objectID": "posts/[TS] 02_1.html#잔차분석",
    "href": "posts/[TS] 02_1.html#잔차분석",
    "title": "[TS] CH02. 실습1(추세모형)",
    "section": "잔차분석",
    "text": "잔차분석\n\nplot(tmp.data$day, resid(m1),\n     pch=16, cex=2, xaxt='n',\n     xlab=\"\", ylab=\"\", main=\"residual plot\", cex.main=2)\nabline(h=0, lty=2, lwd=2)"
  },
  {
    "objectID": "posts/[TS] 02_1.html#독립성검정dw-test",
    "href": "posts/[TS] 02_1.html#독립성검정dw-test",
    "title": "[TS] CH02. 실습1(추세모형)",
    "section": "독립성검정(DW test)",
    "text": "독립성검정(DW test)\n\ndwtest(m1)\n\n\n    Durbin-Watson test\n\ndata:  m1\nDW = 0.041645, p-value &lt; 2.2e-16\nalternative hypothesis: true autocorrelation is greater than 0\n\n\n\n아무 옵션이 없으면 0보다 크냐는게 기본!! 대립가설확인필요\n\n\ndwtest(m1, alternative=\"two.sided\")\n\n\n    Durbin-Watson test\n\ndata:  m1\nDW = 0.041645, p-value &lt; 2.2e-16\nalternative hypothesis: true autocorrelation is not 0\n\n\n\n양측검정\n\n\ndwtest(m1, alternative=\"less\")\n\n\n    Durbin-Watson test\n\ndata:  m1\nDW = 0.041645, p-value = 1\nalternative hypothesis: true autocorrelation is less than 0"
  },
  {
    "objectID": "posts/[TS] 02_1.html#정규분포-검정shapro-wilk-test",
    "href": "posts/[TS] 02_1.html#정규분포-검정shapro-wilk-test",
    "title": "[TS] CH02. 실습1(추세모형)",
    "section": "정규분포 검정(shapro-wilk test)",
    "text": "정규분포 검정(shapro-wilk test)\n- 가설\n\\(H_0\\): 정규분포를 따른다. VS \\(H_1\\): 정규분포를 따르지 않는다.\n\nhist(resid(m1))\n\n\n\n\n\n왼쪽으로 치우쳐져 있는 그림. 정규분포가 아닐거 같다.\n\n\nshapiro.test(resid(m1)) #H_0 : 정규분포를 따른다.\n\n\n    Shapiro-Wilk normality test\n\ndata:  resid(m1)\nW = 0.87284, p-value = 0.000669"
  },
  {
    "objectID": "posts/[TS] 02_1.html#등분산성검정breuschpagan-test",
    "href": "posts/[TS] 02_1.html#등분산성검정breuschpagan-test",
    "title": "[TS] CH02. 실습1(추세모형)",
    "section": "등분산성검정(Breusch–Pagan test)",
    "text": "등분산성검정(Breusch–Pagan test)\n- 가설\n\\(H_0\\): 등분산 VS \\(H_1\\): 이분산\n\nbptest(m1)\n\n\n    studentized Breusch-Pagan test\n\ndata:  m1\nBP = 0.0059664, df = 1, p-value = 0.9384\n\n\n\n잔차에 대한 bptest를 한다. 위에 shapiro는 resid(m1)해줬지만 bptest는 그냥 바로 넣어 주면 된다.\npvalue값이 엄청 커서 기각 못함. 즉 등분산이다."
  },
  {
    "objectID": "posts/[TS] 02_1.html#잔차분석-1",
    "href": "posts/[TS] 02_1.html#잔차분석-1",
    "title": "[TS] CH02. 실습1(추세모형)",
    "section": "잔차분석",
    "text": "잔차분석\n\nplot(tmp.data$day, resid(m2),\n pch=16, cex=2, xaxt='n',\n xlab=\"\", ylab=\"\", main=\"residual plot\", cex.main=2)\nabline(h=0, lty=2, lwd=2)"
  },
  {
    "objectID": "posts/[TS] 02_1.html#독립성-검정dw-test",
    "href": "posts/[TS] 02_1.html#독립성-검정dw-test",
    "title": "[TS] CH02. 실습1(추세모형)",
    "section": "독립성 검정(DW test)",
    "text": "독립성 검정(DW test)\n\ndwtest(m2,alternative = \"two.sided\")\n\n\n    Durbin-Watson test\n\ndata:  m2\nDW = 0.31083, p-value = 1.744e-13\nalternative hypothesis: true autocorrelation is not 0\n\n\n\ndwtest(m2,alternative = \"greater\")\n\n\n    Durbin-Watson test\n\ndata:  m2\nDW = 0.31083, p-value = 8.72e-14\nalternative hypothesis: true autocorrelation is greater than 0"
  },
  {
    "objectID": "posts/[TS] 02_1.html#정규성-검정",
    "href": "posts/[TS] 02_1.html#정규성-검정",
    "title": "[TS] CH02. 실습1(추세모형)",
    "section": "정규성 검정",
    "text": "정규성 검정\n\nqqnorm(resid(m2), pch=16, cex=2)\nqqline(resid(m2), col = 2, lwd=2)\n\n\n\n\n\nhist(resid(m2))\n\n\n\n\n\nshapiro.test(resid(m2)) ##shapiro-wilk test\n\n\n    Shapiro-Wilk normality test\n\ndata:  resid(m2)\nW = 0.94947, p-value = 0.1007"
  },
  {
    "objectID": "posts/[TS] 02_1.html#등분산성-검정",
    "href": "posts/[TS] 02_1.html#등분산성-검정",
    "title": "[TS] CH02. 실습1(추세모형)",
    "section": "등분산성 검정",
    "text": "등분산성 검정\n\nbptest(m2)\n\n\n    studentized Breusch-Pagan test\n\ndata:  m2\nBP = 8.2455, df = 2, p-value = 0.0162\n\n\n\n이분산성이다."
  },
  {
    "objectID": "posts/[TS] 02_1.html#잔차분석-2",
    "href": "posts/[TS] 02_1.html#잔차분석-2",
    "title": "[TS] CH02. 실습1(추세모형)",
    "section": "잔차분석",
    "text": "잔차분석\n\nplot(tmp.data$day, resid(m3),\n pch=16, cex=2, xaxt='n',\n xlab=\"\", ylab=\"\", main=\"residual plot\", cex.main=2)\nabline(h=0, lty=2, lwd=2)"
  },
  {
    "objectID": "posts/[TS] 02_1.html#독립성-검정",
    "href": "posts/[TS] 02_1.html#독립성-검정",
    "title": "[TS] CH02. 실습1(추세모형)",
    "section": "독립성 검정",
    "text": "독립성 검정\n\ndwtest(m3,alternative = \"two.sided\")\n\n\n    Durbin-Watson test\n\ndata:  m3\nDW = 0.16493, p-value &lt; 2.2e-16\nalternative hypothesis: true autocorrelation is not 0\n\n\n\ndwtest(m3,alternative = \"greater\")\n\n\n    Durbin-Watson test\n\ndata:  m3\nDW = 0.16493, p-value &lt; 2.2e-16\nalternative hypothesis: true autocorrelation is greater than 0"
  },
  {
    "objectID": "posts/[TS] 02_1.html#정규성-검정-1",
    "href": "posts/[TS] 02_1.html#정규성-검정-1",
    "title": "[TS] CH02. 실습1(추세모형)",
    "section": "정규성 검정",
    "text": "정규성 검정\n\nqqnorm(resid(m2), pch=16, cex=2)\nqqline(resid(m2), col = 2, lwd=2)\n\n\n\n\n\nhist(resid(m3))\n\n\n\n\n\nshapiro.test(resid(m3))\n\n\n    Shapiro-Wilk normality test\n\ndata:  resid(m3)\nW = 0.97547, p-value = 0.5922"
  },
  {
    "objectID": "posts/[TS] 02_1.html#등분산성-검정-1",
    "href": "posts/[TS] 02_1.html#등분산성-검정-1",
    "title": "[TS] CH02. 실습1(추세모형)",
    "section": "등분산성 검정",
    "text": "등분산성 검정\n\nbptest(m3)\n\n\n    studentized Breusch-Pagan test\n\ndata:  m3\nBP = 8.8866, df = 2, p-value = 0.01176"
  },
  {
    "objectID": "posts/[TS] 06.html",
    "href": "posts/[TS] 06.html",
    "title": "[TS] CH06. ARMA 실습",
    "section": "",
    "text": "해당 자료는 전북대학교 이영미 교수님 2023고급시계열분석 자료임\n\n\nimport\n\nlibrary(forecast)\n\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n\n\n\n\noptions(repr.plot.width = 15, repr.plot.height = 8)\n\n\n\n1. \\(AR(p)\\) process\n- \\(Z_t = δ + ϕ_1Z_{t−1} + ⋯ + ϕ_pZ_{t−p} + ϵ_t, ϵ_t ∼ WN(0, σ^2)\\)\n\n\\(E(Z_t) = \\mu | Z_t - \\mu = ϕ_1(Z_{t-1} - \\mu) + \\dots + ϕ_p(Z_{t-p} - \\mu) + \\epsilon\\)\n\\(\\delta = (1 - ϕ_1 - \\dots - ϕ_p) \\mu\\)\n\n- \\(AR(p)\\) 과정을 따르는 데이터 생성하기\n\n초기값으로 \\(Z_1\\) 과 같은 값들이 필요함\n\n\nsim_ar &lt;- function(n, mu, phi){\n ### n : sample size\n ### mu : mean\n ### phi : p-dim coefficients\n\n p &lt;- length(phi)\n z &lt;- rnorm(n+100) #epsilon ~ WN(0, sigma^2), iid N(0,1)\n delta &lt;- (1-sum(phi))*mu\n\n for (k in (length(phi)+1):(n+100)){\n\n z[k] &lt;- delta + sum(z[(k-1):(k-p)]*phi) + rnorm(1) \n }\n\n return(z[-(1:100)])\n}\n\n- \\(AR(1) : Z_t = 0.5Z_{t−1} + ϵ_t\\)\n\nz &lt;- sim_ar(100, 0, phi=c(0.5)) ##AR(1)\n\n\n\\(ar(n, \\mu, ϕ_1)\\)\n\n\nforecast::tsdisplay(z)\n\n\n\n\n- arima.sim 함수 사용\n\n##AR(1) phi=0.5\nz &lt;- arima.sim(n=100, ##order=c(p,d,q) ARMA : d=0, AR : d=q=0\n list(order=c(1,0,0), ar= 0.5), #ar=ϕ1\n rand.gen = rnorm,\n sd = sqrt(1)) #분산\nforecast::tsdisplay(z, lag.max=24)\n\n\n\n\n\nz &lt;- arima.sim(n=10000, ##order=c(p,d,q) ARMA : d=0, AR : q=0\n list(ar= 0.5)\n )\n\n\nforecast::tsdisplay(z, lag.max=24)\n\n\n\n\n- \\(AR(2) : Z_t = 0.5Z_{t−1} − 0.4Z_{t−2} + ϵ_t\\)\n\nz &lt;- arima.sim(n=10000, list(order=c(2,0,0),\n ar=c(0.5, -0.4)), rand.gen = rnorm)\nforecast::tsdisplay(z, lag.max=24)\n\n\n\n\n\n\n2. \\(MA(q)\\) process\n- \\(Z_t − μ = ε_t − θ_1ε_{t−1} − ⋯ − θ_qε_{t−q}, ε_t ∼ WN(0, σ^2)\\)\n\nsim_ma &lt;- function(n, mu, theta){\n ### n : sample size\n ### mu : mean\n ### theta : q-dim coefficients\n\n q &lt;- length(theta)\n\n ep &lt;- rnorm(n+100)\n    \n z &lt;- ep\n\n for (k in (q+1):(n+100)){\n\n z[k] &lt;- mu + ep[k] - sum(ep[(k-1):(k-q)]*theta)\n }\n\n return(z[-(1:100)])\n}\n\n- \\(Z_t = ε_t − 0.9ε_{t−1}\\)\n\nz &lt;- sim_ma(100, 0, theta=0.9)\nforecast::tsdisplay(z, lag.max=24)\n\n\n\n\n\nz &lt;- arima.sim(n=100, #ARMA : d=0, MA : p=d=0\n list(order=c(0,0,1), ma= -0.9),\n rand.gen = rnorm)\n# z &lt;- arima.sim(n=100, list(ma= 0.9), rand.gen = rnorm)\nforecast::tsdisplay(z, lag.max=24)\n\n\n\n\n\n강의록에 있는 \\(\\theta\\)와 양/음 부호가 다르다.\n\n- \\(Z_t = ε_t − 0.5ε_{t−1} + 0.2ε_{t−2}\\)\n\nz &lt;- arima.sim(n=100,\n list(order=c(0,0,2), ma=c(0.5, -0.2)))\nforecast::tsdisplay(z, lag.max=24)\n\n\n\n\n\n\n\\(3.ARMA(p,q)\\) preocess\n- \\(Z_t = δ + ϕ_1Z_{t−1} + ⋯ + ϕ_pZ_{t−p} + ε_t − θ_1ε_{t−1} − ⋯θ_qε_{t−q}, ε_t ∼ WN(0, σ^2)\\)\n- \\(ARMA(1,1): Z_t = -0.5Z_{t-1} + \\epsilon_t - 0.3 \\epsilon_{t-1}, \\epsilon_t \\sim WN(0,1)\\)\n\nz &lt;- arima.sim(n=10000,\n list(order=c(1,0,1), ar=-0.5, ma=-0.3),\n rand.gen = rnorm)\nforecast::tsdisplay(z, lag.max=24)"
  },
  {
    "objectID": "posts/[TS] 01.html",
    "href": "posts/[TS] 01.html",
    "title": "[TS] CH01. 실습",
    "section": "",
    "text": "해당 자료는 전북대학교 이영미 교수님 2023고급시계열분석 자료임"
  },
  {
    "objectID": "posts/[TS] 01.html#예시1",
    "href": "posts/[TS] 01.html#예시1",
    "title": "[TS] CH01. 실습",
    "section": "예시1",
    "text": "예시1\n\nx &lt;- 1:10\n\n\nclass(x)\n\n'integer'\n\n\n\nx &lt;- ts(1:10)\n\n\nclass(x)\n\n'ts'\n\n\n\nx &lt;- ts(rnorm(50), start=c(2000,1), frequency=12)   \n\n\nstart=c(2000,1) 은 2000년도 1월부터 시작, frequency=12로 설정하면 월별 데이터\nfrequency=4로 하면 분기별로\nfrequency=52로 하면 주별로\nfrequency=1로 하면 1년\n\n\nx\n\n\nA Time Series: 5 × 12\n\n\n\nJan\nFeb\nMar\nApr\nMay\nJun\nJul\nAug\nSep\nOct\nNov\nDec\n\n\n\n\n2000\n0.76405413\n-1.02349881\n-0.51959564\n0.01864085\n-0.60774019\n0.14672756\n1.29754383\n-0.48970178\n0.63146949\n0.95926188\n-0.25685314\n-1.29338383\n\n\n2001\n-1.59141361\n0.40743501\n1.75707309\n-0.99527927\n-1.14542320\n-0.37712164\n1.17125683\n-1.77853599\n0.88462388\n0.38648820\n0.63353985\n0.14774167\n\n\n2002\n-1.27983177\n0.40469783\n-0.79593176\n-0.92399600\n0.47708488\n0.23482996\n-1.47308579\n0.52336346\n1.52855291\n-0.22313437\n0.28595267\n-1.98182541\n\n\n2003\n0.60718388\n-1.21229303\n-0.62694271\n1.66803342\n-0.32590005\n-1.07216211\n-0.66451496\n-0.54215015\n-0.73426974\n-0.91737960\n0.92539709\n0.44326098\n\n\n2004\n-0.57459795\n0.84987553\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncycle(x) #주기\n\n\nA Time Series: 5 × 12\n\n\n\nJan\nFeb\nMar\nApr\nMay\nJun\nJul\nAug\nSep\nOct\nNov\nDec\n\n\n\n\n2000\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n2001\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n2002\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n2003\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n2004\n1\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- 주기\n\n분해법 같은 거 할 때 주기가 설명변수로 들어갈 때가 있다.\n\n\nclass(cycle(x))\n\n'ts'\n\n\n\ntime(x)\n\n\nA Time Series: 5 × 12\n\n\n\nJan\nFeb\nMar\nApr\nMay\nJun\nJul\nAug\nSep\nOct\nNov\nDec\n\n\n\n\n2000\n2000.000\n2000.083\n2000.167\n2000.250\n2000.333\n2000.417\n2000.500\n2000.583\n2000.667\n2000.750\n2000.833\n2000.917\n\n\n2001\n2001.000\n2001.083\n2001.167\n2001.250\n2001.333\n2001.417\n2001.500\n2001.583\n2001.667\n2001.750\n2001.833\n2001.917\n\n\n2002\n2002.000\n2002.083\n2002.167\n2002.250\n2002.333\n2002.417\n2002.500\n2002.583\n2002.667\n2002.750\n2002.833\n2002.917\n\n\n2003\n2003.000\n2003.083\n2003.167\n2003.250\n2003.333\n2003.417\n2003.500\n2003.583\n2003.667\n2003.750\n2003.833\n2003.917\n\n\n2004\n2004.000\n2004.083"
  },
  {
    "objectID": "posts/[TS] 01.html#예시2",
    "href": "posts/[TS] 01.html#예시2",
    "title": "[TS] CH01. 실습",
    "section": "예시2",
    "text": "예시2\n\nx &lt;- rnorm(100)\n\n\nclass(x)\n\n'numeric'\n\n\n\nt &lt;- 1:100\n\n\nplot(t,x, type='l')\n\n\n\n\n\ntype=‘l’ 하면 선으로 그려짐\n\n\ny &lt;- as.ts(x)\n\n\nclass(y)\n\n'ts'\n\n\n\nplot(y)\n\n\n\n\n\ny를 ts로 바꿔준 후 plot그리면 바로 선으로 그려짐\n\n\nplot.ts(x)\n\n\n\n\n\nts.plot(x)"
  },
  {
    "objectID": "posts/[TS] 01.html#예시3",
    "href": "posts/[TS] 01.html#예시3",
    "title": "[TS] CH01. 실습",
    "section": "예시3",
    "text": "예시3\n\nz &lt;- ts(matrix(rnorm(300), 100, 3), start=c(2000), frequency=12)\n\n\nz\n\n\nA Time Series: 100 × 3\n\n\n\nSeries 1\nSeries 2\nSeries 3\n\n\n\n\nJan 2000\n1.29698875\n-1.21674471\n-1.045034994\n\n\nFeb 2000\n0.25714581\n-0.46422565\n0.483273186\n\n\nMar 2000\n-1.69609518\n0.11543522\n1.394646640\n\n\nApr 2000\n-0.02172058\n0.43036387\n0.905497648\n\n\nMay 2000\n-0.39205715\n-0.27943394\n1.358016569\n\n\nJun 2000\n0.50886335\n0.85316956\n-1.895619864\n\n\nJul 2000\n-1.80530553\n1.71537527\n1.329138264\n\n\nAug 2000\n-1.46328716\n-0.31392842\n0.742000641\n\n\nSep 2000\n-1.38169601\n-1.26421866\n-0.191226610\n\n\nOct 2000\n-0.01805485\n0.93875696\n2.068855082\n\n\nNov 2000\n-0.34166996\n-1.61838098\n0.639833161\n\n\nDec 2000\n2.18777732\n0.62720494\n1.453509388\n\n\nJan 2001\n-0.48260923\n-0.28668534\n1.773957684\n\n\nFeb 2001\n-0.16098004\n-1.01794429\n-0.183156085\n\n\nMar 2001\n0.59254034\n2.47052543\n-0.809340939\n\n\nApr 2001\n-0.58943389\n0.82159951\n0.352739904\n\n\nMay 2001\n-1.45154532\n-0.43198993\n0.665977309\n\n\nJun 2001\n0.46219480\n0.19420399\n-0.262522937\n\n\nJul 2001\n0.74171572\n0.88243415\n0.892556497\n\n\nAug 2001\n-0.53807879\n-0.58672603\n0.545136112\n\n\nSep 2001\n0.65559328\n0.91101814\n-2.056745676\n\n\nOct 2001\n0.36380952\n0.26730273\n0.553534241\n\n\nNov 2001\n0.49678797\n0.72762693\n1.365226501\n\n\nDec 2001\n1.14095522\n-1.30247190\n1.510088305\n\n\nJan 2002\n-1.39845866\n1.80914173\n0.247411534\n\n\nFeb 2002\n0.54354719\n0.40637855\n2.951693379\n\n\nMar 2002\n0.74456311\n-0.97149128\n-0.424397231\n\n\nApr 2002\n0.67847157\n-1.33946923\n-1.009035652\n\n\nMay 2002\n-0.71580510\n-1.03397342\n0.740221981\n\n\nJun 2002\n-0.41755001\n-0.10206794\n1.570414318\n\n\nJul 2002\n0.17680380\n0.43245983\n1.625357479\n\n\nAug 2002\n-0.95681583\n-0.32390645\n-0.709353518\n\n\nSep 2002\n0.78065065\n2.76478866\n-0.127425483\n\n\nOct 2002\n1.02147488\n0.26340296\n-1.306210735\n\n\nNov 2002\n-0.61802357\n0.73282875\n-0.779533677\n\n\nDec 2002\n-0.98624272\n-0.90351530\n0.559447943\n\n\nJan 2003\n-1.67644507\n-0.96854559\n0.352028417\n\n\nFeb 2003\n-0.02038246\n-1.14873244\n0.313497750\n\n\nMar 2003\n-0.26066156\n-0.33632808\n0.456722618\n\n\nApr 2003\n1.67542156\n1.21970305\n0.230345692\n\n\nMay 2003\n0.26359387\n0.71395285\n1.116902239\n\n\nJun 2003\n1.45528996\n1.10804737\n0.542625091\n\n\nJul 2003\n-0.71892538\n0.35460415\n0.863238040\n\n\nAug 2003\n-1.31576484\n-0.49592678\n1.783651647\n\n\nSep 2003\n-0.20677657\n0.94086539\n0.108162065\n\n\nOct 2003\n-0.41455675\n-0.63930979\n-0.520634930\n\n\nNov 2003\n-0.53695148\n-1.29420682\n1.743452058\n\n\nDec 2003\n0.85407196\n-0.45433578\n-0.090949969\n\n\nJan 2004\n0.49875472\n0.74599358\n0.114811798\n\n\nFeb 2004\n-0.21734313\n-1.55225754\n-0.295416275\n\n\nMar 2004\n-0.16518469\n0.63871891\n-0.307326165\n\n\nApr 2004\n1.34706900\n-0.81975832\n0.841763649\n\n\nMay 2004\n1.46561716\n0.05836098\n1.370650302\n\n\nJun 2004\n0.91005600\n1.48060158\n-0.924395745\n\n\nJul 2004\n1.75993687\n0.53251578\n0.007020867\n\n\nAug 2004\n-1.33355445\n-0.66142666\n-0.956165251\n\n\nSep 2004\n-2.32004900\n0.49294086\n0.438495174\n\n\nOct 2004\n-1.28912660\n0.37384792\n-0.721941570\n\n\nNov 2004\n-0.89574330\n-1.18158398\n-0.308383156\n\n\nDec 2004\n-2.16302760\n0.61114109\n-0.159999432\n\n\nJan 2005\n0.06904502\n0.45510869\n0.542888786\n\n\nFeb 2005\n-1.76391821\n-0.37935623\n0.674218646\n\n\nMar 2005\n2.27249463\n-1.01247888\n-0.794283698\n\n\nApr 2005\n0.20353326\n-2.09981742\n-2.445789016\n\n\nMay 2005\n-0.34161710\n-0.11308729\n1.194669309\n\n\nJun 2005\n-0.47317357\n-0.96164561\n-1.105428534\n\n\nJul 2005\n0.88899272\n-0.46110042\n1.018510347\n\n\nAug 2005\n-1.21056402\n0.94189524\n-0.154002748\n\n\nSep 2005\n1.27189344\n-0.09086265\n0.853223269\n\n\nOct 2005\n2.43673610\n-0.38708700\n-0.114912446\n\n\nNov 2005\n-0.70430531\n0.29337553\n-0.231400148\n\n\nDec 2005\n0.21192641\n1.08547553\n1.758685933\n\n\nJan 2006\n-0.36607787\n-0.21454928\n0.604770490\n\n\nFeb 2006\n2.74487541\n0.37143248\n-1.804909791\n\n\nMar 2006\n-0.06660497\n-0.49540231\n0.520447152\n\n\nApr 2006\n-0.36036564\n-0.65447797\n1.101548824\n\n\nMay 2006\n0.03937687\n0.29065032\n0.710582404\n\n\nJun 2006\n1.20196082\n-2.38804583\n-0.661208046\n\n\nJul 2006\n2.42037478\n0.92585911\n-0.164038692\n\n\nAug 2006\n-0.81440983\n-1.34864791\n-0.349078183\n\n\nSep 2006\n0.55318248\n-0.76005851\n0.442683600\n\n\nOct 2006\n-1.66074158\n0.09216394\n-1.290911876\n\n\nNov 2006\n-1.53176534\n-0.28728584\n-1.336682588\n\n\nDec 2006\n-0.21676828\n-0.10978893\n-0.898920033\n\n\nJan 2007\n-0.05676096\n0.88120659\n-1.211459957\n\n\nFeb 2007\n1.60050550\n1.10863397\n0.801239884\n\n\nMar 2007\n1.18151898\n1.22710760\n0.234467028\n\n\nApr 2007\n1.86273043\n0.64789357\n0.968746102\n\n\nMay 2007\n-0.19704726\n-0.31664389\n0.115593106\n\n\nJun 2007\n-0.80236520\n-0.46278229\n-0.798281008\n\n\nJul 2007\n-0.57023657\n-0.28156889\n1.988958919\n\n\nAug 2007\n0.39209971\n-2.77298749\n1.456734626\n\n\nSep 2007\n-2.58484490\n1.01233158\n0.106086064\n\n\nOct 2007\n1.57908149\n-0.75397813\n-0.442861061\n\n\nNov 2007\n0.08697194\n-1.82803417\n-1.439861978\n\n\nDec 2007\n-0.26444040\n0.56057798\n0.428862529\n\n\nJan 2008\n0.65498531\n-2.29645430\n-0.144352451\n\n\nFeb 2008\n2.18246630\n0.00740514\n0.010789788\n\n\nMar 2008\n-0.79253588\n-0.35783010\n-1.029779770\n\n\nApr 2008\n1.31979636\n0.09844285\n-0.198100075\n\n\n\n\n\n\nplot(z)\n\n\n\n\n\nplot.ts(z)\n\n\n\n\n\nplot.ts(z, plot.type=\"single\", col=1:3, lty=1:3)\n\n\n\n\n\nts.plot(z, col=1:3)"
  },
  {
    "objectID": "posts/[TS] 01.html#예시4-iris-데이터",
    "href": "posts/[TS] 01.html#예시4-iris-데이터",
    "title": "[TS] CH01. 실습",
    "section": "예시4: iris 데이터",
    "text": "예시4: iris 데이터\n\nhead(iris)\n\n\nA data.frame: 6 × 5\n\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;fct&gt;\n\n\n\n\n1\n5.1\n3.5\n1.4\n0.2\nsetosa\n\n\n2\n4.9\n3.0\n1.4\n0.2\nsetosa\n\n\n3\n4.7\n3.2\n1.3\n0.2\nsetosa\n\n\n4\n4.6\n3.1\n1.5\n0.2\nsetosa\n\n\n5\n5.0\n3.6\n1.4\n0.2\nsetosa\n\n\n6\n5.4\n3.9\n1.7\n0.4\nsetosa\n\n\n\n\n\n\nt.iris &lt;- as.ts(iris[,-5])\n\n\n마지막 자료는 범주형 자료라서 빼줌\n\n\nclass(t.iris)\n\n\n'mts''ts''matrix'\n\n\n\nmts: multiple time series\n\n\nt.iris[10,3]\n\nPetal.Length: 1.5\n\n\n\nmatrix에 사용하는 모든 함수 같은걸 사용할 수 있다.\n\n\nhead(t.iris)\n\n\nA matrix: 6 × 4 of type dbl\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\n\n\n\n\n5.1\n3.5\n1.4\n0.2\n\n\n4.9\n3.0\n1.4\n0.2\n\n\n4.7\n3.2\n1.3\n0.2\n\n\n4.6\n3.1\n1.5\n0.2\n\n\n5.0\n3.6\n1.4\n0.2\n\n\n5.4\n3.9\n1.7\n0.4\n\n\n\n\n\n\nplot.ts(t.iris)\n\n\n\n\n\nts.plot(t.iris, col=1:4)"
  },
  {
    "objectID": "posts/[TS] 01.html#날짜-시간-정보를-추출",
    "href": "posts/[TS] 01.html#날짜-시간-정보를-추출",
    "title": "[TS] CH01. 실습",
    "section": "날짜, 시간 정보를 추출",
    "text": "날짜, 시간 정보를 추출\n\na &lt;- today()\n\n\na\n\n2023-09-17\n\n\n\nclass(a)\n\n'Date'\n\n\n\nyear(a)\n\n2023\n\n\n\nmonth(a)\n\n9\n\n\n\nday(a)\n\n17\n\n\n\nwday(a)\n\n1\n\n\n\n기본세팅 1:일요일, 2: 월요일 …\n\n\nwday(a, label=TRUE)\n\n일\n\n    \n        Levels:\n    \n    \n    '일''월''화''수''목''금''토'\n\n\n\n\nclass(wday(a,label=TRUE))\n\n\n'ordered''factor'\n\n\n\nnow()\n\n[1] \"2023-09-17 16:41:22 KST\"\n\n\n\nclass(now())\n\n\n'POSIXct''POSIXt'\n\n\n\nnow &lt;- now()\n\n\nhour(now)\n\n16\n\n\n\nminute(now)\n\n41\n\n\n\nsecond(now)\n\n29.3091588020325\n\n\n\nymd(\"2023-09-17\")\n\n2023-09-17\n\n\n\nymd: year month day\n\n\nmdy(\"09-17-23\")\n\n2023-09-17\n\n\n\nymd(20230917)\n\n2023-09-17\n\n\n\nymd(\"2023 Sep 17\") # locale=\"USA\")\n\n2023-09-17\n\n\n\n뒤에 locale 하면 안되넹\n\n\nymd(\"2023/09/17\")\n\n2023-09-17\n\n\n\na &lt;- ymd_hms(\"2023-09-17 09:00:00\", tz=\"Asia/Seoul\")\n\n\nhms: 시간\n\n\n ymd_hms(\"2023-09-17 09:00:00\")\n\n[1] \"2023-09-17 09:00:00 UTC\"\n\n\n\nymd_hms(\"2023-09-17 09:00:00\", tz=\"Asia/Seoul\")\n\n[1] \"2023-09-17 09:00:00 KST\"\n\n\n\na\n\n[1] \"2023-09-17 09:00:00 KST\"\n\n\n\nwith_tz(a, tz=\"America/New_York\")\n\n[1] \"2023-09-16 20:00:00 EDT\"\n\n\n\ntz: time zone\n한국은 현재 9.17. 인데 미국은 9. 16.일수도 있음. 미국을 9. 17.로 바꾸어버리면 한국 기준으로 미국의 데이터는 미래 데이터인 경우가 있다! 그러므로 time zone을 생각해야함!!ㅡ\n설명변수에 미래변수가 있으면 안된다.\n\n\nym(202309)\n\n2023-09-01\n\n\n\nhms(\"11:30:00\")\n\n11H 30M 0S\n\n\n\nhm(\"11:30\")\n\n11H 30M 0S\n\n\n\nnow &lt;- now()\n\n\nnow\n\n[1] \"2023-09-17 16:43:59 KST\"\n\n\n\nupdate(now, years=2000)\n\n[1] \"2000-09-17 16:43:59 KST\"\n\n\n\n필요한 날짜만 변경"
  },
  {
    "objectID": "posts/[TS] 04_02.html",
    "href": "posts/[TS] 04_02.html",
    "title": "[TS] CH04_02. 평활에 의한 분할법 실습",
    "section": "",
    "text": "해당 자료는 전북대학교 이영미 교수님 2023고급시계열분석 자료임"
  },
  {
    "objectID": "posts/[TS] 04_02.html#이동평균을-이용한-분해법",
    "href": "posts/[TS] 04_02.html#이동평균을-이용한-분해법",
    "title": "[TS] CH04_02. 평활에 의한 분할법 실습",
    "section": "이동평균을 이용한 분해법",
    "text": "이동평균을 이용한 분해법\n\nz &lt;- scan(\"food.txt\")\nt &lt;- 1:length(z)\nfood &lt;- ts(z, start=c(1981,1), frequency=12)\nlog_food &lt;- log(food) #이분산성 제거를 위한 로그변환\n\n\nplot.ts(log_food)\nlines(ma(log_food,3), col='blue', lwd=2)\nlines(ma(log_food,12), col='red', lwd=2)\nlegend('topleft', lty=c(1,1,1), col=c('black', 'blue', 'red'),\n     lwd=c(1,1,2),\n     c('원시계열', \"CSMA(m=3)\", \"CSMA(m=12)\"),\n     bty='n')\n\n\n\n\n\n파란색 실선: 계절성분이 아직 남아있다.\n빨간색 실선: 추세성분\n\n\nts.plot(log_food,ma(log_food,3),ma(log_food,12),col=c('black', 'red', 'blue'),lwd=c(1,1,2))\nlegend('topleft', lty=c(1,1,1), col=c('black', 'red', 'blue'),\n     lwd=c(1,1,2),\n     c('원시계열', \"CSMA(m=3)\", \"CSMA(m=12)\"),\n     bty='n')\n\n\n\n\n\n1. 추세성분 : 계절주기와 동일한 m을 이용한 중심이동평균\n\ntrend = ma(log_food, 12)\nplot.ts(trend, lwd=2)\n\n\n\n\n\n\n2. 계절성분 \\(Z_t - \\hat{T}_t\\): (추세가 조정된 시계열에서) 각 계절성분의 평균을 구한 후, 평균을 0으로 조정\n\ntrend  \n\n\nA Time Series: 12 × 12\n\n\n\nJan\nFeb\nMar\nApr\nMay\nJun\nJul\nAug\nSep\nOct\nNov\nDec\n\n\n\n\n1981\nNA\nNA\nNA\nNA\nNA\nNA\n3.776909\n3.768171\n3.765650\n3.772193\n3.780789\n3.787192\n\n\n1982\n3.792454\n3.800800\n3.809986\n3.813205\n3.811735\n3.809846\n3.807105\n3.808179\n3.813880\n3.818792\n3.824604\n3.832142\n\n\n1983\n3.839197\n3.842931\n3.851755\n3.865473\n3.878257\n3.891586\n3.906633\n3.923833\n3.937371\n3.946951\n3.957391\n3.969470\n\n\n1984\n3.982121\n3.995975\n4.006874\n4.016255\n4.026038\n4.034346\n4.044893\n4.052862\n4.058200\n4.064307\n4.068383\n4.071068\n\n\n1985\n4.074011\n4.078939\n4.082001\n4.083920\n4.089078\n4.095447\n4.100883\n4.109219\n4.118915\n4.125308\n4.129394\n4.130955\n\n\n1986\n4.132087\n4.133212\n4.137813\n4.145571\n4.152502\n4.160765\n4.170780\n4.178388\n4.185752\n4.195880\n4.206118\n4.216379\n\n\n1987\n4.227826\n4.239234\n4.247686\n4.256777\n4.266321\n4.273846\n4.280121\n4.287533\n4.295180\n4.302811\n4.311553\n4.323067\n\n\n1988\n4.335021\n4.342923\n4.344312\n4.347814\n4.359916\n4.371597\n4.383732\n4.397334\n4.410493\n4.421668\n4.431175\n4.440963\n\n\n1989\n4.449280\n4.458997\n4.476260\n4.489322\n4.492920\n4.490487\n4.489941\n4.492986\n4.495008\n4.499586\n4.503510\n4.506159\n\n\n1990\n4.507716\n4.512991\n4.519904\n4.523437\n4.526672\n4.535067\n4.540304\n4.542365\n4.543296\n4.541811\n4.544339\n4.548056\n\n\n1991\n4.553791\n4.558916\n4.566754\n4.576309\n4.583845\n4.591157\n4.599096\n4.606357\n4.613876\n4.624492\n4.633683\n4.639443\n\n\n1992\n4.645921\n4.654420\n4.657406\n4.661770\n4.669345\n4.675451\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\n\n\n\nm=12인 경우, 만약 7월 기준이면 (6,5,4,3,2,10.5), (8,9,10,11,12,10.5) 1월제외하고 1/12의 weight값이 들어가는데 1월은 1/24의 weight값이 들어간다\n\n\nadj_trend &lt;- log_food - trend\nplot.ts(adj_trend, lwd=2)\n\n\n\n\n\nseasonal &lt;- tapply(adj_trend, cycle(adj_trend), function(y) mean(y,na.rm=T))\nseasonal\n\n1-0.08058937562429922-0.1467310823602693-0.013432213575837140.039809494404777350.089994562155833860.038991388193025970.0097944896760988880.05807462739053190.040654270057519110-0.018624705851606511-0.0475874742255177120.0213986388818562\n\n\n\n각 월 데이터의 평균\n아래 summary값의 Estimate와 동일함..\n\n\nsummary(lm(adj_trend~0+as.factor(cycle(adj_trend))))\n\n\nCall:\nlm(formula = adj_trend ~ 0 + as.factor(cycle(adj_trend)))\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.171707 -0.018376  0.001116  0.023348  0.098197 \n\nCoefficients:\n                               Estimate Std. Error t value Pr(&gt;|t|)    \nas.factor(cycle(adj_trend))1  -0.080589   0.011748  -6.860 3.22e-10 ***\nas.factor(cycle(adj_trend))2  -0.146731   0.011748 -12.489  &lt; 2e-16 ***\nas.factor(cycle(adj_trend))3  -0.013432   0.011748  -1.143 0.255181    \nas.factor(cycle(adj_trend))4   0.039809   0.011748   3.388 0.000951 ***\nas.factor(cycle(adj_trend))5   0.089995   0.011748   7.660 5.28e-12 ***\nas.factor(cycle(adj_trend))6   0.038991   0.011748   3.319 0.001197 ** \nas.factor(cycle(adj_trend))7   0.009794   0.011748   0.834 0.406115    \nas.factor(cycle(adj_trend))8   0.058075   0.011748   4.943 2.52e-06 ***\nas.factor(cycle(adj_trend))9   0.040654   0.011748   3.460 0.000748 ***\nas.factor(cycle(adj_trend))10 -0.018625   0.011748  -1.585 0.115531    \nas.factor(cycle(adj_trend))11 -0.047587   0.011748  -4.051 9.10e-05 ***\nas.factor(cycle(adj_trend))12  0.021399   0.011748   1.821 0.071036 .  \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.03897 on 120 degrees of freedom\n  (12 observations deleted due to missingness)\nMultiple R-squared:  0.7419,    Adjusted R-squared:  0.716 \nF-statistic: 28.74 on 12 and 120 DF,  p-value: &lt; 2.2e-16\n\n\n\nmean(seasonal)\n\n-0.000687281739823944\n\n\n\nseasonal &lt;- seasonal - mean(seasonal) #평균을 0으로 수정\nseasonal\n\n1-0.07990209388447532-0.1460438006204453-0.012744931836013140.040496776144601250.090681843895657760.039678669932849870.010481771415922880.05876190913035590.04134155179734310-0.017937424111782511-0.0469001924856937120.0220859206216802\n\n\n\nSt = rep(seasonal, 12)\nplot.ts(St)\n\n\n\n\n\n\n3. 불규칙 성분: \\(\\hat{I}_t = Z_t - \\hat{T}_t - \\hat{S}_t\\)\n\nirregular &lt;- log_food - trend - St\nplot.ts(irregular)\nabline(h=0, lty=2)\n\n\n\n\n\n몇개의 이상점은 있지만 이분산성은 없어 보인다.\n\n\nt.test(irregular)\n\n\n    One Sample t-test\n\ndata:  irregular\nt = -0.21173, df = 131, p-value = 0.8326\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.007108577  0.005734014\nsample estimates:\n    mean of x \n-0.0006872817 \n\n\n\ndwtest(lm(irregular~1))\n\n\n    Durbin-Watson test\n\ndata:  lm(irregular ~ 1)\nDW = 1.7816, p-value = 0.1031\nalternative hypothesis: true autocorrelation is greater than 0\n\n\n\n독립이다.\n\n\n\n4. 추정: \\(\\hat{Z}_t = \\hat{T}_t + \\hat{S}_t\\)\n\nfit_ &lt;- trend + St\nts.plot(log_food, fit_, lty=1:2, col=1:2, lwd=2:3)\n\n\n\n\n\nsum((fit_$residuals)^2)\n\nERROR: Error in fit_$residuals: $ operator is invalid for atomic vectors\n\n\n\nsum((food - exp(fit_))^2)\n\n&lt;NA&gt;"
  },
  {
    "objectID": "posts/[TS] 04_02.html#decompose-함수를-이용한-분해법",
    "href": "posts/[TS] 04_02.html#decompose-함수를-이용한-분해법",
    "title": "[TS] CH04_02. 평활에 의한 분할법 실습",
    "section": "decompose 함수를 이용한 분해법",
    "text": "decompose 함수를 이용한 분해법\n\n위에서 설명한 평활법을 이용한 분해법과 동일함\n\n\ndec_fit &lt;- decompose(log_food, 'additive')\ndec_fit\n\n$x\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug\n1981 3.790985 3.688879 3.735286 3.772761 3.828641 3.808882 3.781914 3.795489\n1982 3.683867 3.586293 3.777348 3.887730 3.919991 3.871201 3.845883 3.931826\n1983 3.634951 3.660994 3.839452 3.943522 4.003690 3.968403 3.918005 3.949319\n1984 3.848018 3.860730 3.964615 4.048301 4.149464 4.112512 4.077537 4.122284\n1985 4.000034 3.899950 4.053523 4.105944 4.189655 4.136765 4.123903 4.194190\n1986 4.056989 4.043051 4.143135 4.169761 4.223910 4.139955 4.147885 4.197202\n1987 4.186620 4.096010 4.266896 4.289089 4.350278 4.259859 4.302713 4.316154\n1988 4.251348 4.209160 4.337291 4.401829 4.447346 4.439116 4.410371 4.398146\n1989 4.420045 4.366913 4.495355 4.511958 4.565389 4.555980 4.493121 4.548600\n1990 4.502029 4.357990 4.552824 4.564348 4.607168 4.577799 4.508659 4.659658\n1991 4.473922 4.435567 4.497585 4.583947 4.648230 4.625953 4.598146 4.693181\n1992 4.595120 4.488636 4.624973 4.711330 4.741448 4.670958 4.708629 4.786658\n          Sep      Oct      Nov      Dec\n1981 3.768153 3.781914 3.756538 3.867026\n1982 3.852273 3.775057 3.728100 3.850148\n1983 4.046554 3.910021 3.899950 3.998201\n1984 4.135167 4.046554 3.998201 4.099332\n1985 4.136765 4.091006 4.077537 4.172848\n1986 4.244200 4.169761 4.165114 4.283587\n1987 4.328098 4.304065 4.259859 4.369448\n1988 4.279440 4.436752 4.417635 4.492001\n1989 4.543295 4.486387 4.454347 4.396915\n1990 4.598146 4.516339 4.502029 4.550714\n1991 4.752728 4.591071 4.608166 4.620059\n1992 4.730921 4.717606 4.663439 4.711330\n\n$seasonal\n             Jan         Feb         Mar         Apr         May         Jun\n1981 -0.07990209 -0.14604380 -0.01274493  0.04049678  0.09068184  0.03967867\n1982 -0.07990209 -0.14604380 -0.01274493  0.04049678  0.09068184  0.03967867\n1983 -0.07990209 -0.14604380 -0.01274493  0.04049678  0.09068184  0.03967867\n1984 -0.07990209 -0.14604380 -0.01274493  0.04049678  0.09068184  0.03967867\n1985 -0.07990209 -0.14604380 -0.01274493  0.04049678  0.09068184  0.03967867\n1986 -0.07990209 -0.14604380 -0.01274493  0.04049678  0.09068184  0.03967867\n1987 -0.07990209 -0.14604380 -0.01274493  0.04049678  0.09068184  0.03967867\n1988 -0.07990209 -0.14604380 -0.01274493  0.04049678  0.09068184  0.03967867\n1989 -0.07990209 -0.14604380 -0.01274493  0.04049678  0.09068184  0.03967867\n1990 -0.07990209 -0.14604380 -0.01274493  0.04049678  0.09068184  0.03967867\n1991 -0.07990209 -0.14604380 -0.01274493  0.04049678  0.09068184  0.03967867\n1992 -0.07990209 -0.14604380 -0.01274493  0.04049678  0.09068184  0.03967867\n             Jul         Aug         Sep         Oct         Nov         Dec\n1981  0.01048177  0.05876191  0.04134155 -0.01793742 -0.04690019  0.02208592\n1982  0.01048177  0.05876191  0.04134155 -0.01793742 -0.04690019  0.02208592\n1983  0.01048177  0.05876191  0.04134155 -0.01793742 -0.04690019  0.02208592\n1984  0.01048177  0.05876191  0.04134155 -0.01793742 -0.04690019  0.02208592\n1985  0.01048177  0.05876191  0.04134155 -0.01793742 -0.04690019  0.02208592\n1986  0.01048177  0.05876191  0.04134155 -0.01793742 -0.04690019  0.02208592\n1987  0.01048177  0.05876191  0.04134155 -0.01793742 -0.04690019  0.02208592\n1988  0.01048177  0.05876191  0.04134155 -0.01793742 -0.04690019  0.02208592\n1989  0.01048177  0.05876191  0.04134155 -0.01793742 -0.04690019  0.02208592\n1990  0.01048177  0.05876191  0.04134155 -0.01793742 -0.04690019  0.02208592\n1991  0.01048177  0.05876191  0.04134155 -0.01793742 -0.04690019  0.02208592\n1992  0.01048177  0.05876191  0.04134155 -0.01793742 -0.04690019  0.02208592\n\n$trend\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug\n1981       NA       NA       NA       NA       NA       NA 3.776909 3.768171\n1982 3.792454 3.800800 3.809986 3.813205 3.811735 3.809846 3.807105 3.808179\n1983 3.839197 3.842931 3.851755 3.865473 3.878257 3.891586 3.906633 3.923833\n1984 3.982121 3.995975 4.006874 4.016255 4.026038 4.034346 4.044893 4.052862\n1985 4.074011 4.078939 4.082001 4.083920 4.089078 4.095447 4.100883 4.109219\n1986 4.132087 4.133212 4.137813 4.145571 4.152502 4.160765 4.170780 4.178388\n1987 4.227826 4.239234 4.247686 4.256777 4.266321 4.273846 4.280121 4.287533\n1988 4.335021 4.342923 4.344312 4.347814 4.359916 4.371597 4.383732 4.397334\n1989 4.449280 4.458997 4.476260 4.489322 4.492920 4.490487 4.489941 4.492986\n1990 4.507716 4.512991 4.519904 4.523437 4.526672 4.535067 4.540304 4.542365\n1991 4.553791 4.558916 4.566754 4.576309 4.583845 4.591157 4.599096 4.606357\n1992 4.645921 4.654420 4.657406 4.661770 4.669345 4.675451       NA       NA\n          Sep      Oct      Nov      Dec\n1981 3.765650 3.772193 3.780789 3.787192\n1982 3.813880 3.818792 3.824604 3.832142\n1983 3.937371 3.946951 3.957391 3.969470\n1984 4.058200 4.064307 4.068383 4.071068\n1985 4.118915 4.125308 4.129394 4.130955\n1986 4.185752 4.195880 4.206118 4.216379\n1987 4.295180 4.302811 4.311553 4.323067\n1988 4.410493 4.421668 4.431175 4.440963\n1989 4.495008 4.499586 4.503510 4.506159\n1990 4.543296 4.541811 4.544339 4.548056\n1991 4.613876 4.624492 4.633683 4.639443\n1992       NA       NA       NA       NA\n\n$random\n               Jan           Feb           Mar           Apr           May\n1981            NA            NA            NA            NA            NA\n1982 -2.868508e-02 -6.846347e-02 -1.989281e-02  3.402840e-02  1.757482e-02\n1983 -1.243435e-01 -3.589262e-02  4.426514e-04  3.755177e-02  3.475130e-02\n1984 -5.420150e-02  1.079818e-02 -2.951402e-02 -8.451628e-03  3.274391e-02\n1985  5.925294e-03 -3.294445e-02 -1.573387e-02 -1.847322e-02  9.894901e-03\n1986  4.804114e-03  5.588356e-02  1.806619e-02 -1.630698e-02 -1.927397e-02\n1987  3.869574e-02  2.819972e-03  3.195551e-02 -8.185632e-03 -6.725121e-03\n1988 -3.770958e-03  1.228057e-02  5.723298e-03  1.351894e-02 -3.251897e-03\n1989  5.066679e-02  5.395998e-02  3.184058e-02 -1.786072e-02 -1.821209e-02\n1990  7.421549e-02 -8.957053e-03  4.566484e-02  4.141535e-04 -1.018569e-02\n1991  3.299354e-05  2.269483e-02 -5.642417e-02 -3.285907e-02 -2.629720e-02\n1992  2.910053e-02 -1.973959e-02 -1.968829e-02  9.063904e-03 -1.857906e-02\n               Jun           Jul           Aug           Sep           Oct\n1981            NA -5.476607e-03 -3.144419e-02 -3.883854e-02  2.765913e-02\n1982  2.167599e-02  2.829650e-02  6.488439e-02 -2.948120e-03 -2.579731e-02\n1983  3.713832e-02  8.903010e-04 -3.327621e-02  6.784182e-02 -1.899302e-02\n1984  3.848752e-02  2.216218e-02  1.066032e-02  3.562465e-02  1.847060e-04\n1985  1.639766e-03  1.253848e-02  2.620922e-02 -2.349141e-02 -1.636496e-02\n1986 -6.048862e-02 -3.337689e-02 -3.994831e-02  1.710708e-02 -8.181771e-03\n1987 -5.366616e-02  1.210999e-02 -3.014070e-02 -8.423644e-03  1.919151e-02\n1988  2.784037e-02  1.615736e-02 -5.794992e-02 -1.723946e-01  3.302117e-02\n1989  2.581396e-02 -7.302501e-03 -3.147727e-03  6.944851e-03  4.738246e-03\n1990  3.053252e-03 -4.212669e-02  5.853102e-02  1.350780e-02 -7.534808e-03\n1991 -4.882692e-03 -1.143223e-02  2.806200e-02  9.751001e-02 -1.548298e-02\n1992 -4.417181e-02            NA            NA            NA            NA\n               Nov           Dec\n1981  2.264905e-02  5.774762e-02\n1982 -4.960362e-02 -4.079858e-03\n1983 -1.054053e-02  6.645212e-03\n1984 -2.328214e-02  6.177973e-03\n1985 -4.956761e-03  1.980710e-02\n1986  5.896112e-03  4.512159e-02\n1987 -4.793851e-03  2.429536e-02\n1988  3.336031e-02  2.895280e-02\n1989 -2.262059e-03 -1.313301e-01\n1990  4.590922e-03 -1.942792e-02\n1991  2.138247e-02 -4.146985e-02\n1992            NA            NA\n\n$figure\n [1] -0.07990209 -0.14604380 -0.01274493  0.04049678  0.09068184  0.03967867\n [7]  0.01048177  0.05876191  0.04134155 -0.01793742 -0.04690019  0.02208592\n\n$type\n[1] \"additive\"\n\nattr(,\"class\")\n[1] \"decomposed.ts\"\n\n\n\n## 비교 - Trend\ntrend[1:15]\ndec_fit$trend[1:15]\n\n\n&lt;NA&gt;&lt;NA&gt;&lt;NA&gt;&lt;NA&gt;&lt;NA&gt;&lt;NA&gt;3.776909155269433.768171473872113.765649627472043.772192612886123.780789244275813.787192100233633.792454085535363.800800140801813.80998584120039\n\n\n\n&lt;NA&gt;&lt;NA&gt;&lt;NA&gt;&lt;NA&gt;&lt;NA&gt;&lt;NA&gt;3.776909155269433.768171473872113.765649627472043.772192612886123.780789244275813.787192100233633.792454085535363.800800140801813.80998584120039\n\n\n\n## 비교 - Seasonal\nSt[1:12]\ndec_fit$seasonal[1:12]\n\n1-0.07990209388447532-0.1460438006204453-0.012744931836013140.040496776144601250.090681843895657760.039678669932849870.010481771415922880.05876190913035590.04134155179734310-0.017937424111782511-0.0469001924856937120.0220859206216802\n\n\n\n-0.0799020938844753-0.146043800620445-0.01274493183601310.04049677614460120.09068184389565770.03967866993284980.01048177141592280.0587619091303550.041341551797343-0.0179374241117825-0.04690019248569370.0220859206216802\n\n\n\nplot(dec_fit)\n\n\n\n\n\ndec_fit2 &lt;- decompose(food, type = \"multiplicative\")\ndec_fit2\n\n$x\n       Jan   Feb   Mar   Apr   May   Jun   Jul   Aug   Sep   Oct   Nov   Dec\n1981  44.3  40.0  41.9  43.5  46.0  45.1  43.9  44.5  43.3  43.9  42.8  47.8\n1982  39.8  36.1  43.7  48.8  50.4  48.0  46.8  51.0  47.1  43.6  41.6  47.0\n1983  37.9  38.9  46.5  51.6  54.8  52.9  50.3  51.9  57.2  49.9  49.4  54.5\n1984  46.9  47.5  52.7  57.3  63.4  61.1  59.0  61.7  62.5  57.2  54.5  60.3\n1985  54.6  49.4  57.6  60.7  66.0  62.6  61.8  66.3  62.6  59.8  59.0  64.9\n1986  57.8  57.0  63.0  64.7  68.3  62.8  63.3  66.5  69.7  64.7  64.4  72.5\n1987  65.8  60.1  71.3  72.9  77.5  70.8  73.9  74.9  75.8  74.0  70.8  79.0\n1988  70.2  67.3  76.5  81.6  85.4  84.7  82.3  81.3  72.2  84.5  82.9  89.3\n1989  83.1  78.8  89.6  91.1  96.1  95.2  89.4  94.5  94.0  88.8  86.0  81.2\n1990  90.2  78.1  94.9  96.0 100.2  97.3  90.8 105.6  99.3  91.5  90.2  94.7\n1991  87.7  84.4  89.8  97.9 104.4 102.1  99.3 109.2 115.9  98.6 100.3 101.5\n1992  99.0  89.0 102.0 111.2 114.6 106.8 110.9 119.9 113.4 111.9 106.0 111.2\n\n$seasonal\n           Jan       Feb       Mar       Apr       May       Jun       Jul\n1981 0.9219246 0.8621213 0.9844960 1.0380042 1.0916505 1.0378593 1.0080029\n1982 0.9219246 0.8621213 0.9844960 1.0380042 1.0916505 1.0378593 1.0080029\n1983 0.9219246 0.8621213 0.9844960 1.0380042 1.0916505 1.0378593 1.0080029\n1984 0.9219246 0.8621213 0.9844960 1.0380042 1.0916505 1.0378593 1.0080029\n1985 0.9219246 0.8621213 0.9844960 1.0380042 1.0916505 1.0378593 1.0080029\n1986 0.9219246 0.8621213 0.9844960 1.0380042 1.0916505 1.0378593 1.0080029\n1987 0.9219246 0.8621213 0.9844960 1.0380042 1.0916505 1.0378593 1.0080029\n1988 0.9219246 0.8621213 0.9844960 1.0380042 1.0916505 1.0378593 1.0080029\n1989 0.9219246 0.8621213 0.9844960 1.0380042 1.0916505 1.0378593 1.0080029\n1990 0.9219246 0.8621213 0.9844960 1.0380042 1.0916505 1.0378593 1.0080029\n1991 0.9219246 0.8621213 0.9844960 1.0380042 1.0916505 1.0378593 1.0080029\n1992 0.9219246 0.8621213 0.9844960 1.0380042 1.0916505 1.0378593 1.0080029\n           Aug       Sep       Oct       Nov       Dec\n1981 1.0591710 1.0427540 0.9807592 0.9523825 1.0208744\n1982 1.0591710 1.0427540 0.9807592 0.9523825 1.0208744\n1983 1.0591710 1.0427540 0.9807592 0.9523825 1.0208744\n1984 1.0591710 1.0427540 0.9807592 0.9523825 1.0208744\n1985 1.0591710 1.0427540 0.9807592 0.9523825 1.0208744\n1986 1.0591710 1.0427540 0.9807592 0.9523825 1.0208744\n1987 1.0591710 1.0427540 0.9807592 0.9523825 1.0208744\n1988 1.0591710 1.0427540 0.9807592 0.9523825 1.0208744\n1989 1.0591710 1.0427540 0.9807592 0.9523825 1.0208744\n1990 1.0591710 1.0427540 0.9807592 0.9523825 1.0208744\n1991 1.0591710 1.0427540 0.9807592 0.9523825 1.0208744\n1992 1.0591710 1.0427540 0.9807592 0.9523825 1.0208744\n\n$trend\n           Jan       Feb       Mar       Apr       May       Jun       Jul\n1981        NA        NA        NA        NA        NA        NA  43.72917\n1982  44.53750  44.92917  45.35833  45.50417  45.44167  45.35833  45.24583\n1983  46.78750  46.97083  47.42917  48.11250  48.70000  49.33750  50.02500\n1984  53.87083  54.64167  55.27083  55.79583  56.31250  56.76667  57.32917\n1985  58.95833  59.26667  59.46250  59.57500  59.87083  60.25000  60.57500\n1986  62.39583  62.46667  62.77083  63.27083  63.70000  64.24167  64.89167\n1987  68.73333  69.52500  70.12917  70.77083  71.42500  71.96250  72.41667\n1988  76.52500  77.14167  77.25833  77.54583  78.48750  79.42083  80.38750\n1989  85.82917  86.67500  88.13333  89.22083  89.52917  89.32083  89.27917\n1990  90.94167  91.46250  92.14583  92.47917  92.76667  93.50417  93.96250\n1991  95.22083  95.72500  96.56667  97.55417  98.27083  98.97500  99.72917\n1992 104.43333 105.36250 105.70417 106.15417 106.94583 107.58750        NA\n           Aug       Sep       Oct       Nov       Dec\n1981  43.37917  43.29167  43.58750  43.99167  44.29583\n1982  45.28333  45.51667  45.75000  46.05000  46.43750\n1983  50.75833  51.37500  51.87083  52.46667  53.16667\n1984  57.72917  58.01250  58.35833  58.60833  58.77917\n1985  61.02500  61.56667  61.95833  62.22083  62.32500\n1986  65.35417  65.82917  66.51667  67.24167  67.95833\n1987  72.90000  73.41667  73.99583  74.68750  75.59583\n1988  81.40417  82.42917  83.37083  84.21250  85.09583\n1989  89.54583  89.73750  90.16250  90.53750  90.79583\n1990  94.12083  94.17083  94.03750  94.29167  94.66667\n1991 100.39167 101.09167 102.15417 103.13333 103.75417\n1992        NA        NA        NA        NA        NA\n\n$random\n           Jan       Feb       Mar       Apr       May       Jun       Jul\n1981        NA        NA        NA        NA        NA        NA 0.9959362\n1982 0.9693080 0.9319883 0.9786116 1.0331647 1.0159976 1.0196372 1.0261373\n1983 0.8786460 0.9606229 0.9958490 1.0332197 1.0307847 1.0330945 0.9975142\n1984 0.9443299 1.0083267 0.9685022 0.9893586 1.0313376 1.0370730 1.0209738\n1985 1.0045048 0.9668254 0.9839326 0.9815796 1.0098224 1.0011031 1.0121229\n1986 1.0047935 1.0584202 1.0194565 0.9851483 0.9821949 0.9418990 0.9677273\n1987 1.0383961 1.0026863 1.0327064 0.9923711 0.9939576 0.9479567 1.0123813\n1988 0.9950350 1.0119467 1.0057780 1.0137540 0.9967213 1.0275678 1.0156628\n1989 1.0501968 1.0545422 1.0326516 0.9836781 0.9832755 1.0269415 0.9934033\n1990 1.0758413 0.9904660 1.0461080 1.0000650 0.9894461 1.0026362 0.9586708\n1991 0.9990154 1.0227010 0.9445721 0.9668025 0.9731779 0.9939436 0.9877915\n1992 1.0282545 0.9797957 0.9801535 1.0091800 0.9816058 0.9564691        NA\n           Aug       Sep       Oct       Nov       Dec\n1981 0.9685292 0.9591835 1.0269284 1.0215555 1.0570432\n1982 1.0633242 0.9923585 0.9717018 0.9485327 0.9914178\n1983 0.9653703 1.0677321 0.9808779 0.9886261 1.0041180\n1984 1.0090758 1.0331813 0.9993803 0.9763954 1.0048971\n1985 1.0257456 0.9750947 0.9840997 0.9956456 1.0200234\n1986 0.9606878 1.0153892 0.9917710 1.0056248 1.0450161\n1987 0.9700368 0.9901310 1.0196757 0.9953457 1.0236628\n1988 0.9429265 0.8399906 1.0334279 1.0336335 1.0279473\n1989 0.9963693 1.0045510 1.0042102 0.9973752 0.8760277\n1990 1.0592832 1.0112324 0.9921050 1.0044350 0.9798974\n1991 1.0269727 1.0994771 0.9841436 1.0211522 0.9582707\n1992        NA        NA        NA        NA        NA\n\n$figure\n [1] 0.9219246 0.8621213 0.9844960 1.0380042 1.0916505 1.0378593 1.0080029\n [8] 1.0591710 1.0427540 0.9807592 0.9523825 1.0208744\n\n$type\n[1] \"multiplicative\"\n\nattr(,\"class\")\n[1] \"decomposed.ts\"\n\n\n\nplot(dec_fit2)\n\n\n\n\n\n## 가법모형 vs. 승법모형\npred_dec &lt;-dec_fit$trend+dec_fit$seasonal\npred_dec2 &lt;-dec_fit2$trend*dec_fit2$seasonal\n\nts.plot(exp(pred_dec), pred_dec2, col=1:2, lty=1:2, ylab=\"food\", xlab=\"time\")\nlegend(\"topleft\", lty=1:2, col=1:2, c(\"가법모형\", \"승법모형\"))\n\n\n\n\n\nsum((food-exp(pred_dec))^2, na.rm=T) #SSE - 가법\nsum((food-pred_dec2)^2, na.rm=T) #SSE - 승법\n\n1023.54847457354\n\n\n1018.60297817558"
  },
  {
    "objectID": "posts/[TS] 04_02.html#stl-함수를-이용한-분해법",
    "href": "posts/[TS] 04_02.html#stl-함수를-이용한-분해법",
    "title": "[TS] CH04_02. 평활에 의한 분할법 실습",
    "section": "stl 함수를 이용한 분해법",
    "text": "stl 함수를 이용한 분해법\n\nstl_fit1 &lt;- stl(log_food, s.window=12)\nstl_fit1\n\n Call:\n stl(x = log_food, s.window = 12)\n\nComponents\n             seasonal    trend     remainder\nJan 1981 -0.090355040 3.789108  0.0922314967\nFeb 1981 -0.147931392 3.787232  0.0495793240\nMar 1981 -0.019896144 3.785355 -0.0301728541\nApr 1981  0.038295797 3.783478 -0.0490129862\nMay 1981  0.094538719 3.782254 -0.0481517327\nJun 1981  0.043787287 3.781031 -0.0159357336\nJul 1981  0.016322459 3.779807 -0.0142151139\nAug 1981  0.054057673 3.779134 -0.0377023021\nSep 1981  0.039065446 3.778461 -0.0493734719\nOct 1981 -0.017797397 3.777788  0.0219242129\nNov 1981 -0.051814854 3.783126  0.0252270946\nDec 1981  0.040229276 3.788464  0.0383321435\nJan 1982 -0.089173122 3.793803 -0.0207625430\nFeb 1982 -0.147042503 3.798761 -0.0654256842\nMar 1982 -0.018690332 3.803720 -0.0076810928\nApr 1982  0.038138951 3.808678  0.0409133606\nMay 1982  0.094194552 3.809407  0.0163898255\nJun 1982  0.043112958 3.810136  0.0179524600\nJul 1982  0.015984650 3.810864  0.0190341639\nAug 1982  0.053498710 3.813796  0.0645310601\nSep 1982  0.037846447 3.816727 -0.0023007819\nOct 1982 -0.017452956 3.819659 -0.0271487028\nNov 1982 -0.051324746 3.825650 -0.0462255807\nDec 1982  0.039260799 3.831642 -0.0207553771\nJan 1983 -0.087966826 3.837634 -0.1147159270\nFeb 1983 -0.146135888 3.847433 -0.0403029418\nMar 1983 -0.017473449 3.857232 -0.0003065345\nApr 1983  0.037980073 3.867032  0.0385100873\nMay 1983  0.093835251 3.880566  0.0292887865\nJun 1983  0.042403358 3.894101  0.0318991805\nJul 1983  0.015591436 3.907635 -0.0052218029\nAug 1983  0.052859624 3.920708 -0.0242492985\nSep 1983  0.036522608 3.933781  0.0762498060\nOct 1983 -0.017238715 3.946855 -0.0195947865\nNov 1983 -0.050990199 3.958519 -0.0075781870\nDec 1983  0.038115435 3.970183 -0.0100978487\nJan 1984 -0.087481925 3.981847 -0.0463478200\nFeb 1984 -0.145147847 3.993190  0.0126872193\nMar 1984 -0.015006854 4.004533 -0.0249109472\nApr 1984  0.038408184 4.015876 -0.0059837345\nMay 1984  0.094031062 4.025158  0.0302743166\nJun 1984  0.041902931 4.034441  0.0361681428\nJul 1984  0.015065465 4.043723  0.0187488780\nAug 1984  0.052311137 4.050097  0.0198760582\nSep 1984  0.035466668 4.056470  0.0432295181\nOct 1984 -0.017102070 4.062844  0.0008119634\nNov 1984 -0.050592001 4.066767 -0.0179738394\nDec 1984  0.035312067 4.070689 -0.0066690422\nJan 1985 -0.087083944 4.074612  0.0125062112\nFeb 1985 -0.144276449 4.078371 -0.0341438171\nMar 1985 -0.012686626 4.082130 -0.0159205713\nApr 1985  0.038638257 4.085889 -0.0185833996\nMay 1985  0.093977165 4.091587  0.0040904694\nJun 1985  0.041093790 4.097285 -0.0016138861\nJul 1985  0.014171772 4.102984  0.0067479515\nAug 1985  0.051340125 4.109317  0.0335332416\nSep 1985  0.033933401 4.115649 -0.0128175430\nOct 1985 -0.017478830 4.121982 -0.0134978193\nNov 1985 -0.050743286 4.125710  0.0025704884\nDec 1985  0.031962787 4.129438  0.0114466647\nJan 1986 -0.079400189 4.133166  0.0032228621\nFeb 1986 -0.139761420 4.137633  0.0451800036\nMar 1986 -0.008787686 4.142099  0.0098231472\nApr 1986  0.036156856 4.146566 -0.0129615009\nMay 1986  0.090867314 4.154163 -0.0211203692\nJun 1986  0.038419133 4.161760 -0.0602238561\nJul 1986  0.011119587 4.169357 -0.0325910292\nAug 1986  0.051269774 4.178394 -0.0324613899\nSep 1986  0.031546346 4.187430  0.0252236149\nOct 1986 -0.016407480 4.196467 -0.0102984691\nNov 1986 -0.047807235 4.206828  0.0060924438\nDec 1986  0.024904443 4.217190  0.0414924216\nJan 1987 -0.071537745 4.227551  0.0306066122\nFeb 1987 -0.135015578 4.237186 -0.0061601224\nMar 1987 -0.004605810 4.246820  0.0246820251\nApr 1987  0.034019101 4.256455 -0.0013851446\nMay 1987  0.088161821 4.264375 -0.0022592469\nJun 1987  0.036215394 4.272296 -0.0486524350\nJul 1987  0.008604879 4.280217  0.0138912271\nAug 1987  0.051796799 4.288290 -0.0239329035\nSep 1987  0.029816567 4.296363  0.0019184563\nOct 1987 -0.014645693 4.304437  0.0142742433\nNov 1987 -0.044147588 4.313453 -0.0094460131\nDec 1987  0.018551419 4.322469  0.0284277726\nJan 1988 -0.066994887 4.331485 -0.0131415217\nFeb 1988 -0.135273209 4.338849  0.0055846249\nMar 1988 -0.006606944 4.346213 -0.0023152381\nApr 1988  0.033601814 4.353577  0.0146504240\nMay 1988  0.085304609 4.363699 -0.0016577354\nJun 1988  0.034088493 4.373821  0.0312056785\nJul 1988  0.007913946 4.383944  0.0185135283\nAug 1988  0.056440814 4.395809 -0.0541040930\nSep 1988  0.033186744 4.407675 -0.1614216558\nOct 1988 -0.013340634 4.419541  0.0305515492\nNov 1988 -0.042517441 4.430522  0.0296309463\nDec 1988  0.014012406 4.441502  0.0364865885\nJan 1989 -0.062874173 4.452483  0.0304354435\nFeb 1989 -0.135926089 4.462095  0.0407441050\nMar 1989 -0.008976429 4.471707  0.0326252190\nApr 1989  0.032869012 4.481318 -0.0022292877\nMay 1989  0.082184719 4.484957 -0.0017519729\nJun 1989  0.031759209 4.488595  0.0356256737\nJul 1989  0.007080924 4.492234 -0.0061937910\nAug 1989  0.060995286 4.494502 -0.0068971080\nSep 1989  0.036519923 4.496770  0.0100050953\nOct 1989 -0.012033563 4.499038 -0.0006176589\nNov 1989 -0.040846269 4.502620 -0.0074266290\nDec 1989  0.009541407 4.506203 -0.1188286780\nJan 1990 -0.061489653 4.509785  0.0537342391\nFeb 1990 -0.136191947 4.514472 -0.0202904056\nMar 1990 -0.009503303 4.519160  0.0431670300\nApr 1990  0.032626857 4.523848  0.0078737868\nMay 1990  0.081047138 4.528378 -0.0022568624\nJun 1990  0.031248182 4.532908  0.0136425285\nJul 1990  0.006748128 4.537439 -0.0355274861\nAug 1990  0.062187615 4.539692  0.0577783594\nSep 1990  0.036749420 4.541946  0.0194500023\nOct 1990 -0.011470114 4.544200 -0.0163908155\nNov 1990 -0.040301079 4.547645 -0.0053144959\nDec 1990  0.007540353 4.551090 -0.0079164542\nJan 1991 -0.059868140 4.554535 -0.0207451618\nFeb 1991 -0.136245151 4.561404  0.0104087459\nMar 1991 -0.009841859 4.568272 -0.0608455768\nApr 1991  0.032547982 4.575141 -0.0237424488\nMay 1991  0.080047800 4.583198 -0.0150158979\nJun 1991  0.030850586 4.591255  0.0038476084\nJul 1991  0.006503948 4.599311 -0.0076696659\nAug 1991  0.063449649 4.607518  0.0222136339\nSep 1991  0.037029708 4.615724  0.0999737700\nOct 1991 -0.010864347 4.623931 -0.0219951548\nNov 1991 -0.039722044 4.631183  0.0167042648\nDec 1991  0.005573334 4.638436 -0.0239507203\nJan 1992 -0.058789565 4.645689  0.0082205189\nFeb 1992 -0.136344021 4.652149 -0.0271690668\nMar 1992 -0.010165681 4.658610 -0.0234715256\nApr 1992  0.032432742 4.665071  0.0138270581\nMay 1992  0.079342676 4.671422 -0.0093164248\nJun 1992  0.030772591 4.677773 -0.0375871882\nJul 1992  0.006178394 4.684123  0.0183270058\nAug 1992  0.064582720 4.690835  0.0312406115\nSep 1992  0.037697263 4.697546 -0.0043218381\nOct 1992 -0.010643402 4.704257  0.0239918153\nNov 1992 -0.039355534 4.711239 -0.0084445332\nDec 1992  0.003929109 4.718221 -0.0108198469\n\n\n\nhead(stl_fit1$time.series)\n\n\nA Time Series: 6 × 3\n\n\n\nseasonal\ntrend\nremainder\n\n\n\n\nJan 1981\n-0.09035504\n3.789108\n0.09223150\n\n\nFeb 1981\n-0.14793139\n3.787232\n0.04957932\n\n\nMar 1981\n-0.01989614\n3.785355\n-0.03017285\n\n\nApr 1981\n0.03829580\n3.783478\n-0.04901299\n\n\nMay 1981\n0.09453872\n3.782254\n-0.04815173\n\n\nJun 1981\n0.04378729\n3.781031\n-0.01593573\n\n\n\n\n\n\nt.test(stl_fit1$time.series[,3])\n\n\n    One Sample t-test\n\ndata:  stl_fit1$time.series[, 3]\nt = -0.18, df = 143, p-value = 0.8574\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.006341435  0.005282903\nsample estimates:\n    mean of x \n-0.0005292661 \n\n\n\ndwtest(lm(stl_fit1$time.series[,3]~1), alternative=\"two.sided\")\n\n\n    Durbin-Watson test\n\ndata:  lm(stl_fit1$time.series[, 3] ~ 1)\nDW = 1.64, p-value = 0.02962\nalternative hypothesis: true autocorrelation is not 0\n\n\n\nplot(stl_fit1)\n\n\n\n\n\n## stl vs. decompose\npred_stl &lt;- stl_fit1$time.series[,1]+stl_fit1$time.series[,2]\n\nts.plot(pred_stl, pred_dec, col=1:2, lty=1:2, lwd=2:3, ylab=\"food\", xlab=\"time\",\n     main=\"stl vs. decomse\")\nlegend(\"topleft\", lty=1:2, col=1:2, c(\"stl\", \"decomse\"))\n\n\n\n\n\n### SSE : 1-시차 후 예측 오차 제곱합\nsum((log_food-pred_stl)^2) #144\nsum((log_food-pred_dec)^2, na.rm=T) #144-12=132\n\n0.178071880323909\n\n\n0.182256001685046\n\n\n\n### MSE : 1-시차 후 예측 오차 제곱합의 평균\nsum((log_food-pred_stl)^2)/144\nsum((log_food-pred_dec)^2, na.rm=T)/132\n\n0.00123661028002714\n\n\n0.00138072728549277\n\n\n\n### MSE : 1-시차 후 예측 오차 제곱합의 평균\nmean((log_food-pred_stl)^2)\nmean((log_food-pred_dec)^2, na.rm=T)\n\n0.00123661028002714\n\n\n0.00138072728549277"
  },
  {
    "objectID": "posts/[TS] HW01.html",
    "href": "posts/[TS] HW01.html",
    "title": "[TS] HW01",
    "section": "",
    "text": "해당 자료는 전북대학교 이영미 교수님 2023고급시계열분석 자료임"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-1",
    "href": "posts/[TS] HW01.html#section-1",
    "title": "[TS] HW01",
    "section": "(1)",
    "text": "(1)\n상수평균모형을 적합하여라.\n상수평균모형 \\(Z_t = \\beta_0 + \\epsilon_t\\)\nLSE: \\(\\hat {\\beta_0} = \\bar{Z}=48.3\\)\n\nz=c(52,46,46,52,50,50,48,45,41,53)\n\n\nmean(z)\n\n48.3\n\n\n\\(\\hat{Z_t} = \\hat{\\beta_0} = 48.3\\)"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-2",
    "href": "posts/[TS] HW01.html#section-2",
    "title": "[TS] HW01",
    "section": "(2)",
    "text": "(2)\n미래값 \\(Z_{10+l}\\) 에 대한 예측값 \\(\\hat{Z}_{10}(l)\\)을 구하시오. \\((l = 1, 2, 3, 4, 5)\\)\n\nnote 시점 n에서의 l-시차 후의 예측값: \\(\\hat{Z_n(l)} = \\hat{\\beta_0} = \\bar{Z}\\)\n\n\\(\\hat{Z}_{10}(1)=\\hat{Z}_{10}(2)=\\hat{Z}_{10}(3)=\\hat{Z}_{10}(4)=\\hat{Z}_{10}(5)=48.3\\)"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-3",
    "href": "posts/[TS] HW01.html#section-3",
    "title": "[TS] HW01",
    "section": "(3)",
    "text": "(3)\n미래값 \\(Z_{10+l}, l = 1, 2, 3, 4, 5\\)에 대한 95% 예측구간을 구하고, 예측값 및 예측구간의 하한값과 상한값을 관측값 \\(Z_t\\)의 시계열과 함께 표시하여라.\n\nnote \\(Z_{n+l}\\)의 \\(100(1-\\alpha)\\)% 예측 구간: \\(\\bar{Z} \\pm t_{\\alpha/2}(n-1) \\times \\sqrt{(1+\\frac{1}{n})s^2}\\)\n\n\nqt(0.975,9)\n\n2.2621571627982\n\n\n\nmean_z &lt;- mean(z)\nn &lt;- length(z)\ndf &lt;- n - 1\nsample_variance &lt;- sum((z - mean_z)^2) / df\n\n\nsample_variance\n\n14.4555555555556\n\n\n\nt_critical\n\n2.2621571627982\n\n\n\nsqrt( 1.1 * 14.46 )\n\n3.98823269130576\n\n\n\nlwr &lt;- 48.3-2.26*3.98823269130576\nupr &lt;- 48.3+2.26*3.98823269130576\n\n\nlwr &lt;- 39.286594117649\nupr &lt;- 57.313405882351\n\n\nt &lt;- c(1:10)\nplot(t,z, type='l',  xlab = \"t\", ylab = \"z\", main = \"Z 시계열\", ylim=c(35,60))\nabline(h=mean_z, col=\"red\", lty=2)\nabline(h = lwr, col = \"blue\", lty = 2)\nabline(h = upr, col = \"blue\", lty = 2)"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-5",
    "href": "posts/[TS] HW01.html#section-5",
    "title": "[TS] HW01",
    "section": "(1)",
    "text": "(1)\n선형추세모형을 쓰시오.\n\nz &lt;- c(303,298,303,314,303,314,310,324,317,327,323,324,331,330,332)\n\n\nt &lt;- 1:15\ndf &lt;- data.frame(t, z)\nreg &lt;- lm(z~t, data=df)\nsummary(reg)\n\n\nCall:\nlm(formula = z ~ t, data = df)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-6.710 -2.331 -1.181  2.519  7.133 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  297.781      2.364 125.964  &lt; 2e-16 ***\nt              2.386      0.260   9.176 4.84e-07 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 4.351 on 13 degrees of freedom\nMultiple R-squared:  0.8662,    Adjusted R-squared:  0.856 \nF-statistic: 84.19 on 1 and 13 DF,  p-value: 4.836e-07\n\n\n\nnote \\(Z_t=\\beta_0+\\beta_1 t + \\epsilon_t, \\epsilon_t \\sim N(0,\\sigma^2), i.i.d\\)"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-6",
    "href": "posts/[TS] HW01.html#section-6",
    "title": "[TS] HW01",
    "section": "(2)",
    "text": "(2)\n최소제곱법에 의하여 구한 \\(β_0, β_1\\)의 추정량이 각각 다음과 같아짐을 보여라.\n\\[\\hat{\\beta_0} = \\frac{2(2n+1)}{n(n-1)} \\sum_{t=1}^n Z_t - \\frac{6}{n(n-1)} \\sum_{t=1}^n t_t\\]\n\\[\\hat{\\beta_1} = \\frac{12}{n(n^2-1)} \\sum_{t=1}^n t Z_t - \\frac{6}{n(n-1)} \\sum_{t=1}^n Z_t\\]\n\\(Z_t = \\beta_0 + \\beta_1 t + \\epsilon_t\\)\n최소제곱법을 통해 \\(\\beta\\)값 추정하자.\n\\(S = \\sum_{t=1}^n \\epsilon_t^2 = \\sum_{t=1}^n(Z_t-\\beta_0-\\beta_1t)^2\\)\n\\(\\dfrac{\\delta S}{\\delta \\beta_0}=\\sum_{t=1}^n (Z_t-\\beta_0 -\\beta_1t)(-1)=0\\) - (a)라고 하자\n\\(\\dfrac{\\delta S}{\\delta \\beta_1}=\\sum_{t=1}^n (Z_t-\\beta_0 -\\beta_1t)(-t)=0\\) -(b)라고 하자.\n(a)식을 \\(\\beta_0\\)에 관하여 풀면\n\\(\\sum_{t=1}^n Z_t - n \\hat{\\beta}_0 - \\hat{\\beta}_1 \\sum_{t=1}^n t = 0\\)\n\\(\\hat{\\beta}_0 = \\dfrac{\\sum_{t=1}^n Z_t -\\hat{\\beta}_1 \\sum_{t=1}^n t }{n}= \\dfrac{\\sum_{t=1}^n Z_t}{n} - \\hat{\\beta}_1 \\dfrac{(n+1)}{2}\\) -(c)라고 하자\n(b)식을 정리하면,\n\\(\\sum_{t=1}^n t Z_t = \\hat{\\beta}_0 \\sum_{t=1}^n t + \\hat{\\beta}_1 \\sum_{t=1}^n t^2=\\hat{\\beta}_0 \\dfrac{n(n+1)}{2} + \\hat{\\beta}_1 \\dfrac{n(n+1)(2n+1)}{6}\\)\n(c)식을 (b)식에 대입 후 연립방정식을 풀자\n\\(=\\left( \\dfrac{\\sum_{t=1}^n Z_t}{n} - \\hat{\\beta}_1 \\dfrac{(n+1)}{2} \\right) \\dfrac{n(n+1)}{2} + \\hat{\\beta}_1 \\dfrac{n(n+1)(2n+1)}{6}\\)\n\\(=\\dfrac{(n+1)}{2} \\sum_{t=1}^n Z_t + \\hat{\\beta}_1 \\left( \\dfrac{2n(n+1)(2n+1) -3n(n+1)^2}{12} \\right)\\)\n\\(=\\dfrac{(n+1)}{2} \\sum_{t=1}^n Z_t + \\hat{\\beta}_1 \\left( \\dfrac{n(n+1)(n-1)}{12} \\right)\\)\n즉 \\(\\sum_{t=1}^n t Z_t =\\dfrac{(n+1)}{2} \\sum_{t=1}^n Z_t + \\hat{\\beta}_1 \\left( \\dfrac{n(n+1)(n-1)}{12} \\right)\\)\n\\(\\hat{\\beta}_1 \\left( \\dfrac{n(n+1)(n-1)}{12} \\right) = \\sum_{t=1}^n t Z_t - \\dfrac{(n+1)}{2} \\sum_{t=1}^n Z_t\\)\n\\(\\hat{\\beta_1} = \\frac{12}{n(n^2-1)} \\sum_{t=1}^n t Z_t - \\frac{6}{n(n-1)} \\sum_{t=1}^n Z_t\\)\n\\(\\hat{\\beta}_1\\) 값 (c)식에 대입\n\\(\\hat{\\beta}_0 = \\dfrac{\\sum_{t=1}^n Z_t}{n} - \\hat{\\beta}_1 \\dfrac{(n+1)}{2}\\)\n\\(=\\dfrac{\\sum_{t=1}^n Z_t}{n} - \\dfrac{6}{n(n-1)} \\sum_{t=1}^n tZ_t + \\dfrac{3(n+1)}{n(n-1)} \\sum_{t=1}^n Z_t\\)\n\\(=\\dfrac{2(2n+1)}{n(n-1)} \\sum_{t=1}^n Z_t - \\dfrac{6}{n(n-1)} \\sum_{t=1}^n t_t Z_t\\)"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-7",
    "href": "posts/[TS] HW01.html#section-7",
    "title": "[TS] HW01",
    "section": "(3)",
    "text": "(3)\n선형추세모형을 적합하시오. (회귀계수 추정 및 모형 결과 설명)\n\\(\\hat{Z}_t=\\hat{\\beta_0}+\\hat{\\beta_1}t = 297.7714 + 2.3786 t\\)\n위 (2)식에 대입하기\nt가 1씩 증가할수록 해당 편의점의 매출액은 2.38만큼 증가한다."
  },
  {
    "objectID": "posts/[TS] HW01.html#section-8",
    "href": "posts/[TS] HW01.html#section-8",
    "title": "[TS] HW01",
    "section": "(4)",
    "text": "(4)\n미래값 \\(Z_{15+l}\\) 에 대한 예측값 \\(\\hat {Z}_{15}(l)\\)을 구하시오. \\((l = 1, 2, 3, 4, 5)\\)\n- 손게산 하는 방법\n\\(\\hat{Z}_{n}(l) = \\hat{\\beta}_0 + \\hat{\\beta}_1(n+l)\\)\n\nbeta0 =297.78\n\n\nbeta1=2.38\n\n\nbeta0 + beta1 * 16\n\n335.86\n\n\n\nbeta0 + beta1 * 17\n\n338.24\n\n\n\nbeta0 + beta1 * 18\n\n340.62\n\n\n\nbeta0 + beta1 * 19\n\n343\n\n\n\nbeta0 + beta1 * 20\n\n345.38\n\n\n- 코드\n\nnew_data &lt;- data.frame(\n     t = 16:20,\n     y = as.factor(1:5)\n     )\nnew_data\n\n\nA data.frame: 5 × 2\n\n\nt\ny\n\n\n&lt;int&gt;\n&lt;fct&gt;\n\n\n\n\n16\n1\n\n\n17\n2\n\n\n18\n3\n\n\n19\n4\n\n\n20\n5\n\n\n\n\n\n\nt &lt;-c(1:15)\ndata &lt;- data.frame(t, z)\n\n\nm &lt;- lm(z~t, data=data)\nsummary(m)\n\n\nCall:\nlm(formula = z ~ t, data = data)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-6.710 -2.331 -1.181  2.519  7.133 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  297.781      2.364 125.964  &lt; 2e-16 ***\nt              2.386      0.260   9.176 4.84e-07 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 4.351 on 13 degrees of freedom\nMultiple R-squared:  0.8662,    Adjusted R-squared:  0.856 \nF-statistic: 84.19 on 1 and 13 DF,  p-value: 4.836e-07\n\n\n\npredict(m, newdata = new_data)\n\n1335.9523809523812338.3380952380953340.7238095238094343.1095238095245345.495238095238"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-10",
    "href": "posts/[TS] HW01.html#section-10",
    "title": "[TS] HW01",
    "section": "(1)",
    "text": "(1)\n\\(Z_t = 100 + ϵ_t\\), 단 \\(ϵ_t\\)는 서로 독립이고 \\(N(0, 1)\\) 분포를 따른다.\n\nz1 &lt;- 100 + rnorm(100)\n\n\\(E(Z_t)=E(100+\\epsilon_t) = 100 + E(\\epsilon_t) = 100 + 0 = 100\\)\n\\(Var(Z_t) = Var(100+\\epsilon_t) = Var(\\epsilon_t) = 1 = 1\\)"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-11",
    "href": "posts/[TS] HW01.html#section-11",
    "title": "[TS] HW01",
    "section": "(2)",
    "text": "(2)\n\\(Z_t = 500 + ϵ_t\\), 단 \\(ϵ_t\\)는 서로 독립이고 \\(N(0, 1)\\) 분포를 따른다.\n\nz2 &lt;- 500 + rnorm(100)\n\n\\(E(Z_t)=E(500+\\epsilon_t) = 500 + E(\\epsilon_t) = 500 + 0 = 500\\)\n\\(Var(Z_t) = Var(500+\\epsilon_t) = Var(\\epsilon_t) = 1 = 1\\)"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-12",
    "href": "posts/[TS] HW01.html#section-12",
    "title": "[TS] HW01",
    "section": "(3)",
    "text": "(3)\n\\(Z_t = 100 + ϵ_t\\), 단 \\(ϵ_t\\)는 서로 독립이고 \\(N(0, 100)\\) 분포를 따른다.\n\nz3 &lt;- 100 + rnorm(100, 0, 10)\n\n\\(E(Z_t)=E(100+\\epsilon_t) = 100 + E(\\epsilon_t) = 100 + 0 = 100\\)\n\\(Var(Z_t) = Var(100+\\epsilon_t) = Var(\\epsilon_t) = 100 = 100\\)"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-13",
    "href": "posts/[TS] HW01.html#section-13",
    "title": "[TS] HW01",
    "section": "(4)",
    "text": "(4)\n\\(Z_t = 100 + tϵ_t\\), 단 \\(ϵ_t\\)는 서로 독립이고 \\(N(0, 1)\\) 분포를 따른다.\n\nz4 &lt;- 100 + t * rnorm(100)\n\n\\(E(Z_t)=E(100+ t \\epsilon_t) = 100 + t E(\\epsilon_t) = 100 + t 0 = 100\\)\n\\(Var(Z_t) = Var(100+ t \\epsilon_t) = Var(t \\epsilon_t) = t^2 Var(\\epsilon_t) = t^2 \\times 1 = t^2\\)"
  },
  {
    "objectID": "posts/[TS] HW01.html#풀이",
    "href": "posts/[TS] HW01.html#풀이",
    "title": "[TS] HW01",
    "section": "2 풀이",
    "text": "2 풀이\n\nt &lt;- 1:100\ndf &lt;- data.frame(t,z1,z2,z3,z4)\n\n- ggplot\n\nggplot(data=df, aes(t)) + \n  geom_line(aes(y=z1, colour='z1')) + \n  geom_line(aes(y=z2, colour='z2')) + \n  geom_line(aes(y=z3, colour='z3')) + \n  geom_line(aes(y=z4, colour='z4')) +\n  ylab('z')\n\n\n\n\n- plot\n\nplot(df$t, df$z1, type = 'l', col = 'red', xlab = 't', ylab = 'z', ylim=c(-200,800))\nlines(df$t, df$z2, col = 'blue')\nlines(df$t, df$z3, col = 'green')\nlines(df$t, df$z4, col = 'purple')\nlegend('topright', legend = c('z1', 'z2', 'z3', 'z4'), col = c('red', 'blue', 'green', 'purple'), lty = 1)"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-15",
    "href": "posts/[TS] HW01.html#section-15",
    "title": "[TS] HW01",
    "section": "(1)",
    "text": "(1)\n\\(Z_t = 100 + ϵ_t\\)\n상수평균모형: 불규칙성분만을 갖는 경우\n\nt &lt;- 1:100\ne &lt;- rep(100, 100)\nz &lt;- 100 + rnorm(100)\ndf &lt;- data.frame(t, e, z)\nggplot(data=df, aes(t)) + geom_line(aes(y=z, colour=\"Z\")) + geom_line(aes(y=e, colour=\"E[Z]\"))\n\n\n\n\n\nplot(df$t, df$z, type=\"l\", col=\"blue\", xlab=\"t\", ylab=\"Z\", main=\"Z and E[Z]\")\nlines(df$t, df$e, col=\"red\")\nlegend(\"topright\", legend=c(\"Z\", \"E[Z]\"), col=c(\"blue\", \"red\"), lty=1)"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-16",
    "href": "posts/[TS] HW01.html#section-16",
    "title": "[TS] HW01",
    "section": "(2)",
    "text": "(2)\n\\(Z_t = 100 + t + ϵ_t\\)\n선형추세모형: 직선형인 추세를 가지고 증가\n\nt &lt;- 1:100\ne &lt;- 100 + t\nz &lt;- 100 + t + rnorm(100)\ndf &lt;- data.frame(t, e, z)\nggplot(data=df, aes(t)) + geom_line(aes(y=z, colour=\"Z\")) + geom_line(aes(y=e, colour=\"E[Z]\"))\n\n\n\n\n\nplot(df$t, df$z, type=\"l\", col=\"blue\", xlab=\"t\", ylab=\"Z\", main=\"Z and E[Z]\")\nlines(df$t, df$e, col=\"red\")\nlegend(\"topright\", legend=c(\"Z\", \"E[Z]\"), col=c(\"blue\", \"red\"), lty=1)"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-17",
    "href": "posts/[TS] HW01.html#section-17",
    "title": "[TS] HW01",
    "section": "(3)",
    "text": "(3)\n\\(Z_t = 100 + 0.3t + sin \\left( \\frac{2πt}{12} \\right)+ cos \\left(\\frac{2πt}{12} \\right) + ϵ_t\\)\n선형계절추세모형: 추세 및 계절 성분을 가진다..\n\nt &lt;- 1:100\ne &lt;- 100 + 0.3*t + sin(2*pi*t/12) + cos(2*pi*t/12)\nz &lt;- 100 + 0.3*t + sin(2*pi*t/12) + cos(2*pi*t/12) + rnorm(100, 0, 5)\ndf &lt;- data.frame(t, e, z)\nggplot(data=df, aes(t)) + geom_line(aes(y=z, colour=\"Z\")) + geom_line(aes(y=e, colour=\"E[Z]\"))\n\n\n\n\n\nplot(df$t, df$z, type=\"l\", col=\"blue\", xlab=\"t\", ylab=\"Z\", main=\"Z and E[Z]\")\nlines(df$t, df$e, col=\"red\")\nlegend(\"topright\", legend=c(\"Z\", \"E[Z]\"), col=c(\"blue\", \"red\"), lty=1)"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-19",
    "href": "posts/[TS] HW01.html#section-19",
    "title": "[TS] HW01",
    "section": "(1)",
    "text": "(1)\n시계열 그림을 그리시오.\n\nbook &lt;- scan(\"book.txt\")\nlength(book)\nhead(book)\n\n30\n\n\n\n121517212528\n\n\n\nt &lt;- 1:30\nplot(t, book, type='l')"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-20",
    "href": "posts/[TS] HW01.html#section-20",
    "title": "[TS] HW01",
    "section": "(2)",
    "text": "(2)\n이 시계열 자료는 어떤 성분으로 구성되어 있는지 설명하시오.\n선형 추세 모형"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-21",
    "href": "posts/[TS] HW01.html#section-21",
    "title": "[TS] HW01",
    "section": "(3)",
    "text": "(3)\n적절한 추세모형을 적합하여라.\n\ndata &lt;- data.frame(t, book)\n\n\nm &lt;- lm(book~t, data=data)\nsummary(m)\n\n\nCall:\nlm(formula = book ~ t, data = data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.5563 -1.0063 -0.2081  1.0385  2.0644 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  8.19080    0.46960   17.44   &lt;2e-16 ***\nt            3.07586    0.02645  116.28   &lt;2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 1.254 on 28 degrees of freedom\nMultiple R-squared:  0.9979,    Adjusted R-squared:  0.9979 \nF-statistic: 1.352e+04 on 1 and 28 DF,  p-value: &lt; 2.2e-16\n\n\n\\(\\hat{Z}_t = 8.19080 + 3.07586 t\\)\n\n잔차분석\n\nplot(t,resid(m),\n     pch=16, cex=2, xaxt='n',\n     xlab=\"\", ylab=\"\", cex.main=2)\nabline(h=0, lty=2, lwd=2)\n\n\n\n\n\n\n독립성검정\n\ndwtest(m,alternative = \"two.sided\")\n\n\n    Durbin-Watson test\n\ndata:  m\nDW = 0.50342, p-value = 1.283e-07\nalternative hypothesis: true autocorrelation is not 0\n\n\n\n\n정규분포검정\n\nqqnorm(resid(m), pch=16, cex=2)\nqqline(resid(m), col = 2, lwd=2)\n\n\n\n\n\nhist(resid(m))\n\n\n\n\n\nshapiro.test(resid(m))\n\n\n    Shapiro-Wilk normality test\n\ndata:  resid(m)\nW = 0.96173, p-value = 0.3427\n\n\n\n\n등분산성검정\n\nbptest(m)\n\n\n    studentized Breusch-Pagan test\n\ndata:  m\nBP = 3.4481, df = 1, p-value = 0.06333"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-22",
    "href": "posts/[TS] HW01.html#section-22",
    "title": "[TS] HW01",
    "section": "(4)",
    "text": "(4)\n마지막 관측값으로 부터 \\(Z_{n+l}\\) 에 대한 예측값 \\(\\hat{Z}_n (l)\\)을 구하시오. \\((n = 30, l = 1, 2, . . . , 12)\\)\n\nnew_data &lt;- data.frame(\n     t = 31:42,\n     y = as.factor(1:12)\n     )\nnew_data\n\n\nA data.frame: 12 × 2\n\n\nt\ny\n\n\n&lt;int&gt;\n&lt;fct&gt;\n\n\n\n\n31\n1\n\n\n32\n2\n\n\n33\n3\n\n\n34\n4\n\n\n35\n5\n\n\n36\n6\n\n\n37\n7\n\n\n38\n8\n\n\n39\n9\n\n\n40\n10\n\n\n41\n11\n\n\n42\n12\n\n\n\n\n\n\npredict(m, newdata = new_data)\n\n1103.5425287356322106.6183908045983109.6942528735634112.7701149425295115.8459770114946118.921839080467121.9977011494258125.0735632183919128.14942528735610131.22528735632211134.30114942528712137.377011494253"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-23",
    "href": "posts/[TS] HW01.html#section-23",
    "title": "[TS] HW01",
    "section": "(5)",
    "text": "(5)\n마지막 관측값으로 부터 \\(Z_{n+l}(n = 30, l = 1, 2, . . . , 12)\\)에 대한 95% 예측구간을 구하여라\n\npredict_result &lt;- as.data.frame(predict(m, newdata = new_data, interval = \"predict\",level=0.95))\npredict_result\n\n\nA data.frame: 12 × 3\n\n\n\nfit\nlwr\nupr\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n103.5425\n100.7996\n106.2855\n\n\n2\n106.6184\n103.8584\n109.3784\n\n\n3\n109.6943\n106.9162\n112.4723\n\n\n4\n112.7701\n109.9731\n115.5671\n\n\n5\n115.8460\n113.0291\n118.6629\n\n\n6\n118.9218\n116.0842\n121.7595\n\n\n7\n121.9977\n119.1384\n124.8570\n\n\n8\n125.0736\n122.1918\n127.9554\n\n\n9\n128.1494\n125.2443\n131.0546\n\n\n10\n131.2253\n128.2960\n134.1546\n\n\n11\n134.3011\n131.3469\n137.2554\n\n\n12\n137.3770\n134.3970\n140.3570"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-24",
    "href": "posts/[TS] HW01.html#section-24",
    "title": "[TS] HW01",
    "section": "(6)",
    "text": "(6)\n예측값 및 예측구간의 하한값과 상한값을 관측값 \\(Z_t\\)의 시계열과 함께 표시하여라.\n\nplot(data$book~data$t, data,\n     xlab = \"t\", ylab = \"book\",\n     xlim=c(1,42),\n     ylim=c(1,150),\n     type='l',\n     lwd=2)\nlines(31:42, predict_result$fit, col='darkorange', lwd=2)\nlines(31:42, predict_result$lwr, col='steelblue', lwd=2, lty=2)\nlines(31:42, predict_result$upr, col='steelblue', lwd=2, lty=2)"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-25",
    "href": "posts/[TS] HW01.html#section-25",
    "title": "[TS] HW01",
    "section": "(1)",
    "text": "(1)\n시계열 그림을 그리시오.\n\nexport &lt;- scan(\"export.txt\")\nlength(export)\nhead(export)\n\n86\n\n\n\n20.423.0125.7325.5529.9631.94\n\n\n\nts함수 사용하여 plot (1980년 1월은 임의로 설정함)\n\nexport2 &lt;- ts(export, frequency=12, start=c(1980,1))\nplot(export2)\n\n\n\n\n\n\nplot\n\nt &lt;- 1:length(export)\nplot(t, export, type='l')"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-26",
    "href": "posts/[TS] HW01.html#section-26",
    "title": "[TS] HW01",
    "section": "(2)",
    "text": "(2)\n이 시계열 자료는 어떤 성분으로 구성되어 있는지 설명하시오.\n선형 계절 추세 모형"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-27",
    "href": "posts/[TS] HW01.html#section-27",
    "title": "[TS] HW01",
    "section": "(3)",
    "text": "(3)\n적절한 추세모형을 적합하여라. (지시함수 사용)\n이분산성이 있어보이니 로그변환 실시\n\ntmp.data &lt;- data.frame(\n day = seq(ymd(\"1984-01-01\"),\n by='1 month', length.out=length(export)),\n export=export\n)\ntmp.data$lnex &lt;- log(export) #로그변환\ntmp.data$y &lt;- as.factor(as.integer(cycle(export2))) #지시함수로 사용할 주기\ntmp.data$trend &lt;- 1:length(export)\n\n\nhead(tmp.data)\n\n\nA data.frame: 6 × 5\n\n\n\nday\nexport\nlnex\ny\ntrend\n\n\n\n&lt;date&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;fct&gt;\n&lt;int&gt;\n\n\n\n\n1\n1984-01-01\n20.40\n3.015535\n1\n1\n\n\n2\n1984-02-01\n23.01\n3.135929\n2\n2\n\n\n3\n1984-03-01\n25.73\n3.247658\n3\n3\n\n\n4\n1984-04-01\n25.55\n3.240637\n4\n4\n\n\n5\n1984-05-01\n29.96\n3.399863\n5\n5\n\n\n6\n1984-06-01\n31.94\n3.463859\n6\n6\n\n\n\n\n\n\n제약조건 beta1=0\n\nreg &lt;- lm(lnex ~ trend + y, tmp.data)      \nsummary(reg)\n\n\nCall:\nlm(formula = lnex ~ trend + y, data = tmp.data)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.242037 -0.076076 -0.000101  0.061002  0.228615 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 3.2478546  0.0465045  69.840  &lt; 2e-16 ***\ntrend       0.0097170  0.0005074  19.151  &lt; 2e-16 ***\ny2          0.0449215  0.0580829   0.773 0.441781    \ny3          0.2113353  0.0601535   3.513 0.000764 ***\ny4          0.1732163  0.0601385   2.880 0.005212 ** \ny5          0.2230338  0.0601278   3.709 0.000402 ***\ny6          0.2902377  0.0601214   4.828 7.39e-06 ***\ny7          0.2196982  0.0601192   3.654 0.000483 ***\ny8          0.1847631  0.0601214   3.073 0.002977 ** \ny9          0.2563299  0.0601278   4.263 5.95e-05 ***\ny10         0.2416985  0.0601385   4.019 0.000141 ***\ny11         0.2741932  0.0601535   4.558 2.03e-05 ***\ny12         0.3781424  0.0601727   6.284 2.14e-08 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.1162 on 73 degrees of freedom\nMultiple R-squared:  0.8596,    Adjusted R-squared:  0.8365 \nF-statistic: 37.25 on 12 and 73 DF,  p-value: &lt; 2.2e-16\n\n\n- 제약조건 \\(\\beta_1=0\\)\n\ns2는 1월보다 0.0449215만큼 더 팔리고\ns3는 1월보다 0.0449215만큼 더 팔린다.\n\ns2는 유의하지 않게 나왔는데 이는 1월과 2월의 시간차이가 적기 때문이다.\n\n\n제약조건 beta0=0\n\nreg2 &lt;- lm(lnex ~ 0+trend+y, tmp.data)  # 제약조건에서 beta0=0으로 놓는다는 뜻. 절편을 0으로!      \nsummary(reg2)\n\n\nCall:\nlm(formula = lnex ~ 0 + trend + y, data = tmp.data)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.242037 -0.076076 -0.000101  0.061002  0.228615 \n\nCoefficients:\n       Estimate Std. Error t value Pr(&gt;|t|)    \ntrend 0.0097170  0.0005074   19.15   &lt;2e-16 ***\ny1    3.2478546  0.0465045   69.84   &lt;2e-16 ***\ny2    3.2927761  0.0467447   70.44   &lt;2e-16 ***\ny3    3.4591898  0.0481580   71.83   &lt;2e-16 ***\ny4    3.4210709  0.0483687   70.73   &lt;2e-16 ***\ny5    3.4708884  0.0485837   71.44   &lt;2e-16 ***\ny6    3.5380923  0.0488031   72.50   &lt;2e-16 ***\ny7    3.4675528  0.0490268   70.73   &lt;2e-16 ***\ny8    3.4326177  0.0492547   69.69   &lt;2e-16 ***\ny9    3.5041845  0.0494867   70.81   &lt;2e-16 ***\ny10   3.4895531  0.0497228   70.18   &lt;2e-16 ***\ny11   3.5220478  0.0499630   70.49   &lt;2e-16 ***\ny12   3.6259970  0.0502071   72.22   &lt;2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.1162 on 73 degrees of freedom\nMultiple R-squared:  0.9992,    Adjusted R-squared:  0.9991 \nF-statistic:  7394 on 13 and 73 DF,  p-value: &lt; 2.2e-16\n\n\n\n\n제약조건 sum\n\nreg3 &lt;- lm(lnex ~ trend+y, tmp.data,\n           contrast = list(y=\"contr.sum\"))\nsummary(reg3)\n\n\nCall:\nlm(formula = lnex ~ trend + y, data = tmp.data, contrasts = list(y = \"contr.sum\"))\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.242037 -0.076076 -0.000101  0.061002  0.228615 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  3.4559854  0.0253853 136.141  &lt; 2e-16 ***\ntrend        0.0097170  0.0005074  19.151  &lt; 2e-16 ***\ny1          -0.2081308  0.0395338  -5.265 1.36e-06 ***\ny2          -0.1632093  0.0395338  -4.128 9.59e-05 ***\ny3           0.0032044  0.0420579   0.076   0.9395    \ny4          -0.0349145  0.0420334  -0.831   0.4089    \ny5           0.0149030  0.0420150   0.355   0.7238    \ny6           0.0821069  0.0420028   1.955   0.0544 .  \ny7           0.0115674  0.0419967   0.275   0.7838    \ny8          -0.0233678  0.0419967  -0.556   0.5796    \ny9           0.0481991  0.0420028   1.148   0.2549    \ny10          0.0335677  0.0420150   0.799   0.4269    \ny11          0.0660624  0.0420334   1.572   0.1204    \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.1162 on 73 degrees of freedom\nMultiple R-squared:  0.8596,    Adjusted R-squared:  0.8365 \nF-statistic: 37.25 on 12 and 73 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-28",
    "href": "posts/[TS] HW01.html#section-28",
    "title": "[TS] HW01",
    "section": "(4)",
    "text": "(4)\n적합 결과를 설명하여라. (회귀계수의 의미 설명)\n모형의 p-value값은 \\(&lt;2.2e^{-16}\\)이므로 모형은 유의하고 \\(R^2\\)값도 85퍼의 설명력을 가진다. 각 회귀계수도 유의미하며, ..\n\nhead(data.frame(hat_y1 = fitted(reg),\n                hat_y2 = fitted(reg2),\n                hat_y3 = fitted(reg3)))\n\n\nA data.frame: 6 × 3\n\n\n\nhat_y1\nhat_y2\nhat_y3\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n3.257572\n3.257572\n3.257572\n\n\n2\n3.312210\n3.312210\n3.312210\n\n\n3\n3.488341\n3.488341\n3.488341\n\n\n4\n3.459939\n3.459939\n3.459939\n\n\n5\n3.519473\n3.519473\n3.519473\n\n\n6\n3.596394\n3.596394\n3.596394\n\n\n\n\n\n\n잔차분석\n\nplot(tmp.data$trend,resid(reg),\n     pch=16, cex=2, xaxt='n',\n     xlab=\"\", ylab=\"\", cex.main=2)\nabline(h=0, lty=2, lwd=2)\n\n\n\n\n\n\n독립성검정\n\ndwtest(reg,alternative = \"two.sided\")\n\n\n    Durbin-Watson test\n\ndata:  reg\nDW = 0.36406, p-value &lt; 2.2e-16\nalternative hypothesis: true autocorrelation is not 0\n\n\n\n\n정규분포검정\n\nqqnorm(resid(reg), pch=16, cex=2)\nqqline(resid(reg), col = 2, lwd=2)\n\n\n\n\n\nhist(resid(reg))\n\n\n\n\n\nshapiro.test(resid(reg))\n\n\n    Shapiro-Wilk normality test\n\ndata:  resid(reg)\nW = 0.9873, p-value = 0.5678\n\n\n\n\n등분산성검정\n\nbptest(reg)\n\n\n    studentized Breusch-Pagan test\n\ndata:  reg\nBP = 25.457, df = 12, p-value = 0.0128"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-29",
    "href": "posts/[TS] HW01.html#section-29",
    "title": "[TS] HW01",
    "section": "(5)",
    "text": "(5)\n마지막 관측값으로 부터 \\(Z_{n+l}\\) 에 대한 예측값 \\(\\hat{Z}_n(l)\\)을 구하시오. \\((n = 30, l = 1, 2, . . . , 12)\\)\n\n문제 오류인듯? n=86이여야 하는 것 같다.\n\n\nhead(tmp.data)\n\n\nA data.frame: 6 × 5\n\n\n\nday\nexport\nlnex\ny\ntrend\n\n\n\n&lt;date&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;fct&gt;\n&lt;int&gt;\n\n\n\n\n1\n1984-01-01\n20.40\n3.015535\n1\n1\n\n\n2\n1984-02-01\n23.01\n3.135929\n2\n2\n\n\n3\n1984-03-01\n25.73\n3.247658\n3\n3\n\n\n4\n1984-04-01\n25.55\n3.240637\n4\n4\n\n\n5\n1984-05-01\n29.96\n3.399863\n5\n5\n\n\n6\n1984-06-01\n31.94\n3.463859\n6\n6\n\n\n\n\n\n\nnew_data &lt;- data.frame(\n     trend = 87:98,\n     y = as.factor(1:12)\n     )\nnew_data\n\n\nA data.frame: 12 × 2\n\n\ntrend\ny\n\n\n&lt;int&gt;\n&lt;fct&gt;\n\n\n\n\n87\n1\n\n\n88\n2\n\n\n89\n3\n\n\n90\n4\n\n\n91\n5\n\n\n92\n6\n\n\n93\n7\n\n\n94\n8\n\n\n95\n9\n\n\n96\n10\n\n\n97\n11\n\n\n98\n12\n\n\n\n\n\n\npredict(reg, newdata = new_data)\n\n14.0932343613161624.1478728533417934.3240036311821344.2956017175703154.3551362339190964.4320570852663374.3712346164129984.34601648041194.42730031451426104.42238594651055114.46459767559151124.57826387917784\n\n\n\nexp(predict(reg, newdata = new_data))\n\n159.9334249083451263.2992102862583375.4902592354147473.3763530050669577.8774341622356684.1042486952906779.1412805316252877.1704398657382983.70513406592881083.29478536146171186.88606612174691297.3452443116255"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-30",
    "href": "posts/[TS] HW01.html#section-30",
    "title": "[TS] HW01",
    "section": "(6)",
    "text": "(6)\n마지막 관측값으로 부터 \\(Z_{n+l}(n = 30, l = 1, 2, . . . , 12)\\)에 대한 95% 예측구간을 구하여라\n\npredict_result &lt;- as.data.frame(predict(reg, newdata = new_data, interval = \"predict\"))\npredict_result\n\n\nA data.frame: 12 × 3\n\n\n\nfit\nlwr\nupr\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n4.093234\n3.843683\n4.342785\n\n\n2\n4.147873\n3.898322\n4.397424\n\n\n3\n4.324004\n4.071398\n4.576609\n\n\n4\n4.295602\n4.042996\n4.548207\n\n\n5\n4.355136\n4.102531\n4.607742\n\n\n6\n4.432057\n4.179452\n4.684663\n\n\n7\n4.371235\n4.118629\n4.623840\n\n\n8\n4.346016\n4.093411\n4.598622\n\n\n9\n4.427300\n4.174695\n4.679906\n\n\n10\n4.422386\n4.169780\n4.674991\n\n\n11\n4.464598\n4.211992\n4.717203\n\n\n12\n4.578264\n4.325658\n4.830869\n\n\n\n\n\n\npredict_result$fitted_dep &lt;- exp(predict_result$fit)\npredict_result$fitted_dep_l &lt;- exp(predict_result$lwr)\npredict_result$fitted_dep_u &lt;- exp(predict_result$upr)\npredict_result\n\n\nA data.frame: 12 × 6\n\n\n\nfit\nlwr\nupr\nfitted_dep\nfitted_dep_l\nfitted_dep_u\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n4.093234\n3.843683\n4.342785\n59.93342\n46.69716\n76.92150\n\n\n2\n4.147873\n3.898322\n4.397424\n63.29921\n49.31961\n81.24131\n\n\n3\n4.324004\n4.071398\n4.576609\n75.49026\n58.63889\n97.18429\n\n\n4\n4.295602\n4.042996\n4.548207\n73.37635\n56.99686\n94.46290\n\n\n5\n4.355136\n4.102531\n4.607742\n77.87743\n60.49319\n100.25748\n\n\n6\n4.432057\n4.179452\n4.684663\n84.10425\n65.33002\n108.27373\n\n\n7\n4.371235\n4.118629\n4.623840\n79.14128\n61.47491\n101.88453\n\n\n8\n4.346016\n4.093411\n4.598622\n77.17044\n59.94401\n99.34731\n\n\n9\n4.427300\n4.174695\n4.679906\n83.70513\n65.02000\n107.75992\n\n\n10\n4.422386\n4.169780\n4.674991\n83.29479\n64.70125\n107.23164\n\n\n11\n4.464598\n4.211992\n4.717203\n86.88607\n67.49086\n111.85497\n\n\n12\n4.578264\n4.325658\n4.830869\n97.34524\n75.61528\n125.31986"
  },
  {
    "objectID": "posts/[TS] HW01.html#section-31",
    "href": "posts/[TS] HW01.html#section-31",
    "title": "[TS] HW01",
    "section": "(7)",
    "text": "(7)\n예측값 및 예측구간의 하한값과 상한값을 관측값 \\(Z_t\\)의 시계열과 함께 표시하여라.\n\nplot(export~tmp.data$trend, tmp.data,\n     xlab = \"t\", ylab = \"export\",\n     xlim=c(1,98),\n     ylim=c(1,100),\n     type='l',\n     lwd=2)\nlines(87:98, predict_result$fitted_dep, col='darkorange', lwd=2)\nlines(87:98, predict_result$fitted_dep_l, col='steelblue', lwd=2, lty=2)\nlines(87:98, predict_result$fitted_dep_u, col='steelblue', lwd=2, lty=2)"
  },
  {
    "objectID": "posts/[TS] HW03_A.html",
    "href": "posts/[TS] HW03_A.html",
    "title": "[TS] HW03_Answer",
    "section": "",
    "text": "해당 자료는 전북대학교 이영미 교수님 2023고급시계열분석 자료임\noptions(repr.plot.width = 15, repr.plot.height = 6)"
  },
  {
    "objectID": "posts/[TS] HW03_A.html#모형1",
    "href": "posts/[TS] HW03_A.html#모형1",
    "title": "[TS] HW03_Answer",
    "section": "모형1",
    "text": "모형1\n\\(Z_t - 9.5 = \\epsilon_t - 1.3 \\epsilon_{t-1} + 0.6 \\epsilon_{t-2}\\)\n\\((Z_t - 9.5) = (1-1.3B+0.6B^2) \\epsilon_t, MA(2)\\)\n\nz &lt;- arima.sim(n=10000, list(ma=c(-1.3, 0.6))) + 9.5\npar(mfrow=c(1,2))\nacf_z &lt;- acf(z, lwd=2, main=\"ACF of Model 1\", )\npacf_z &lt;- pacf(z, lwd=2, main = \"PACF of Model 1\")\n\n\n\n\n\nacf_z[1:10]\n\n\nAutocorrelations of series ‘z’, by lag\n\n     1      2      3      4      5      6      7      8      9     10 \n-0.688  0.211 -0.014  0.004  0.007 -0.014  0.015 -0.018  0.015 -0.007 \n\n\n\npacf_z[1:10]\n\n\nPartial autocorrelations of series ‘z’, by lag\n\n     1      2      3      4      5      6      7      8      9     10 \n-0.688 -0.498 -0.351 -0.209 -0.055  0.036  0.094  0.077  0.049  0.017"
  },
  {
    "objectID": "posts/[TS] HW03_A.html#모형2",
    "href": "posts/[TS] HW03_A.html#모형2",
    "title": "[TS] HW03_Answer",
    "section": "모형2",
    "text": "모형2\n\\(Z_t - 0.6 Z_{t-1} = 38 + \\epsilon_t + 0.9 \\epsilon_{t-1}\\)\n\\((1-0.6B)(Z_t - 95) = (1+0.9B) \\epsilon_t: ARMA(1,1)\\)\n\nz &lt;- arima.sim(n=10000, list(ar=0.6, ma=0.9)) + 95\npar(mfrow=c(1,2))\nacf_z &lt;- acf(z, lwd=2, main=\"ACF of Model 2\", )\npacf_z &lt;- pacf(z, lwd=2, main = \"PACF of Model 2\")\n\n\n\n\n\nacf_z[1:10]\n\n\nAutocorrelations of series ‘z’, by lag\n\n    1     2     3     4     5     6     7     8     9    10 \n0.804 0.492 0.308 0.203 0.144 0.102 0.067 0.044 0.032 0.022 \n\n\n\npacf_z[1:10]\n\n\nPartial autocorrelations of series ‘z’, by lag\n\n     1      2      3      4      5      6      7      8      9     10 \n 0.804 -0.437  0.315 -0.209  0.186 -0.159  0.124 -0.099  0.092 -0.090"
  },
  {
    "objectID": "posts/[TS] HW03_A.html#모형3",
    "href": "posts/[TS] HW03_A.html#모형3",
    "title": "[TS] HW03_Answer",
    "section": "모형3",
    "text": "모형3\n\\(Z_t = 26 + 0.6 Z_{t-1} + \\epsilon_t + 0.2 \\epsilon_{t-1} + 0.5 \\epsilon_{t-2}\\)\n\\((1-0.6B)(Z_t - 65) = (1+0.2B + 0.5 B^2) \\epsilon_t : ARMA(1,2)\\)\n\nz &lt;- arima.sim(n=10000, list(ar=0.6, ma=c(0.2,0.5))) + 65\npar(mfrow=c(1,2))\nacf_z &lt;- acf(z, lwd=2, main=\"ACF of Model 3\", )\npacf_z &lt;- pacf(z, lwd=2, main = \"PACF of Model 3\")\n\n\n\n\n\nacf_z[1:10]\n\n\nAutocorrelations of series ‘z’, by lag\n\n    1     2     3     4     5     6     7     8     9    10 \n0.787 0.634 0.384 0.241 0.158 0.110 0.081 0.060 0.050 0.043 \n\n\n\npacf_z[1:10]\n\n\nPartial autocorrelations of series ‘z’, by lag\n\n     1      2      3      4      5      6      7      8      9     10 \n 0.787  0.038 -0.333  0.071  0.157 -0.054 -0.056  0.038  0.038 -0.018"
  },
  {
    "objectID": "posts/[TS] HW03_A.html#모형-4",
    "href": "posts/[TS] HW03_A.html#모형-4",
    "title": "[TS] HW03_Answer",
    "section": "모형 4",
    "text": "모형 4\n\\(Z_t - 1.5 Z_{t-1} + 0.7 Z_{t-2} = 100 + \\epsilon_t - 0.5 \\epsilon_{t-1}\\)\n\\((1-1.5B + 0.7B^2)(Z_t - 500) = (1-0.5B)\\epsilon_t : ARMA(2,1)\\)\n\nz &lt;- arima.sim(n=10000, list(ar=c(1.5,-0.7), ma=-0.5)) + 500\npar(mfrow=c(1,2))\nacf_z &lt;- acf(z, lwd=2, main=\"ACF of Model 4\", )\npacf_z &lt;- pacf(z, lwd=2, main = \"PACF of Model 4\")\n\n\n\n\n\nacf_z[1:10]\n\n\nAutocorrelations of series ‘z’, by lag\n\n     1      2      3      4      5      6      7      8      9     10 \n 0.798  0.499  0.189 -0.063 -0.230 -0.301 -0.292 -0.229 -0.140 -0.047 \n\n\n\npacf_z[1:10]\n\n\nPartial autocorrelations of series ‘z’, by lag\n\n     1      2      3      4      5      6      7      8      9     10 \n 0.798 -0.379 -0.184 -0.079 -0.051 -0.019 -0.011 -0.010  0.000  0.008"
  },
  {
    "objectID": "posts/[TS] HW04.html",
    "href": "posts/[TS] HW04.html",
    "title": "[TS] HW04",
    "section": "",
    "text": "\\(ε_t\\) 가 \\(W N(0, σ^2)\\)를 따를 때, 다음과 같은 확률과정 모형에 대하여 각 물음에 답하고, 답에 대한 이유를 밝혀라.\n\\[(1 − B)^2(1 − B^{12})Z_t = (1 − 0.5B)ε_t\\]\n\n\n\\(\\{Z_t\\}\\)는 정상시계열인가?\n비정상 시계열이다.\n (교수님풀이)\n 특성함수 \\(\\Phi(B) = (1-B)^2(1-B^{12})=0\\)을 만족하는 모든 근의 절대값이 1보다 큰 것은 아니기 때문에 \\((B = 1, -1)\\) 정상시계열이 아니다.\n\n\n\n\\(W_t = (1 − B)Z_t\\)는 정상시계열인가?\n비정상 시계열이다. 한 번 차분해도 계절 성분이 있는 비정상 시계열을 얻는다.\n (교수님풀이)\n \\((1-B)(1-B^{12})W_t = (1-0.5B)\\epsilon_t\\)이다. 이 때 특성함수 \\(\\Phi(B) = (1-B)(1-B^{12}) = 0\\)을 만족하는 모든 근의 절대값이 1보다 큰 것은 아니기 때문에 \\((B=1, -1)\\) 정상시계열이 아니다.\n\n\n\n\\(W_t = Z_t − 2Z_{t−1} + Z_{t−2}\\)는 정상시계열인가?\n\\(W_t=(1-B)^2\\)가 정상 시계열인가 묻는 문제이다. 비정상 시계열이다. 두 번 차분해도 계절 성분이 있는 비정상 시계열을 얻는다.\n(교수님 풀이)\n\\(W_t = (1-B^{12})Z_t\\)이고, \\((1-B)^2 W_t = (1-0.5B) \\epsilon_t\\)이 된다. 특성함수 \\(\\Phi(B) = (1-B)^2W_t = 0\\)을 만족하는 모든 근의 절대값이 1보다 큰 것은 아니기 때문에 \\((B=1)\\) 정상 시계열이 아니다.\n\n\n\n\\(W_t = Z_t − Z_{t−12}\\)는 정상시계열인가?\n\\(W_t = (1-B^{12})\\)이다. 비정상시계열이다. 추세 성분이 남아있다.\n(교수님 풀이)\n\\(W_t = (1-B^{12})Z_t\\)이고, \\((1-B)^2 W_t = (1-0.5B)\\epsilon_t\\)이 된다. 특성함수 \\(\\Phi(B) = (1-B)^2 W_t = 0\\)을 만족하는 모든 근의 절대값이 1보다 큰 것은 아니기 때문에 \\((B=1)\\) 정상시계열이 아니다.\n\n\n\n\\(W_t = (1 − B)^2(1 − B^{12})Z_t\\)는 정상시계열인가?\n정상 시계열이다.\n(교수님 풀이)\n\\(W_t = (1-0.5B)\\epsilon_t\\)이고, \\(W_t \\sim MA(1)\\)익 때문에 정상 시계열이다."
  },
  {
    "objectID": "posts/[TS] HW04.html#section",
    "href": "posts/[TS] HW04.html#section",
    "title": "[TS] HW04",
    "section": "",
    "text": "\\(\\{Z_t\\}\\)는 정상시계열인가?\n비정상 시계열이다.\n (교수님풀이)\n 특성함수 \\(\\Phi(B) = (1-B)^2(1-B^{12})=0\\)을 만족하는 모든 근의 절대값이 1보다 큰 것은 아니기 때문에 \\((B = 1, -1)\\) 정상시계열이 아니다."
  },
  {
    "objectID": "posts/[TS] HW04.html#section-1",
    "href": "posts/[TS] HW04.html#section-1",
    "title": "[TS] HW04",
    "section": "",
    "text": "\\(W_t = (1 − B)Z_t\\)는 정상시계열인가?\n비정상 시계열이다. 한 번 차분해도 계절 성분이 있는 비정상 시계열을 얻는다.\n (교수님풀이)\n \\((1-B)(1-B^{12})W_t = (1-0.5B)\\epsilon_t\\)이다. 이 때 특성함수 \\(\\Phi(B) = (1-B)(1-B^{12}) = 0\\)을 만족하는 모든 근의 절대값이 1보다 큰 것은 아니기 때문에 \\((B=1, -1)\\) 정상시계열이 아니다."
  },
  {
    "objectID": "posts/[TS] HW04.html#section-2",
    "href": "posts/[TS] HW04.html#section-2",
    "title": "[TS] HW04",
    "section": "",
    "text": "\\(W_t = Z_t − 2Z_{t−1} + Z_{t−2}\\)는 정상시계열인가?\n\\(W_t=(1-B)^2\\)가 정상 시계열인가 묻는 문제이다. 비정상 시계열이다. 두 번 차분해도 계절 성분이 있는 비정상 시계열을 얻는다.\n(교수님 풀이)\n\\(W_t = (1-B^{12})Z_t\\)이고, \\((1-B)^2 W_t = (1-0.5B) \\epsilon_t\\)이 된다. 특성함수 \\(\\Phi(B) = (1-B)^2W_t = 0\\)을 만족하는 모든 근의 절대값이 1보다 큰 것은 아니기 때문에 \\((B=1)\\) 정상 시계열이 아니다."
  },
  {
    "objectID": "posts/[TS] HW04.html#section-3",
    "href": "posts/[TS] HW04.html#section-3",
    "title": "[TS] HW04",
    "section": "",
    "text": "\\(W_t = Z_t − Z_{t−12}\\)는 정상시계열인가?\n\\(W_t = (1-B^{12})\\)이다. 비정상시계열이다. 추세 성분이 남아있다.\n(교수님 풀이)\n\\(W_t = (1-B^{12})Z_t\\)이고, \\((1-B)^2 W_t = (1-0.5B)\\epsilon_t\\)이 된다. 특성함수 \\(\\Phi(B) = (1-B)^2 W_t = 0\\)을 만족하는 모든 근의 절대값이 1보다 큰 것은 아니기 때문에 \\((B=1)\\) 정상시계열이 아니다."
  },
  {
    "objectID": "posts/[TS] HW04.html#section-4",
    "href": "posts/[TS] HW04.html#section-4",
    "title": "[TS] HW04",
    "section": "",
    "text": "\\(W_t = (1 − B)^2(1 − B^{12})Z_t\\)는 정상시계열인가?\n정상 시계열이다.\n(교수님 풀이)\n\\(W_t = (1-0.5B)\\epsilon_t\\)이고, \\(W_t \\sim MA(1)\\)익 때문에 정상 시계열이다."
  },
  {
    "objectID": "posts/[TS] HW04.html#section-6",
    "href": "posts/[TS] HW04.html#section-6",
    "title": "[TS] HW04",
    "section": "(1)",
    "text": "(1)\n\\(n = 100, \\bar Z = 24.75, s_Z = 9.27\\)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n\n\\(\\hat ρ_k\\)\n-0.48\n-0.04\n-0.06\n0.14\n-0.22\n0.19\n-0.10\n-0.02\n0.09\n-0.03\n-0.12\n0.09\n0.03\n\n\n\\(\\hat ϕ_{kk}\\)\n-0.48\n-0.24\n-0.21\n0.01\n-0.20\n-0.01\n-0.05\n-0.15\n-0.04\n-0.06\n-0.04\n0.02\n0.06\n\n\n\n \\(\\hat{s.e}(\\hat \\rho_k)\\) 값을 구해주자\n \\(\\hat{s.e}(\\hat \\rho_1) = \\sqrt{\\frac{1}{n}(1)}\\)\n \\(\\hat{s.e}(\\hat \\rho_2) \\approx \\sqrt{\\frac{1}{n}(1+2\\rho_1^2)}= \\sqrt{\\frac{1}{n}(1+2 \\times 0.48^2)}\\)\n - ACF: 1차 이후 절단 형태 : MA(1)\n - PACF: 1.96/ \\(\\sqrt{100}\\) = 0.196이므로 3차 이후 절단 형태 : AR(3)\n - 더 간단한 형태인 MA(1)모형 선택 (ACF는 1시차 이후 절단이고, PACF는 서서히 감소하는 형태이므로 MA(1)모형이 더 적당하다.)\n \\[Z_t = \\mu + (1-\\theta B) \\epsilon_t, \\epsilon_t \\sim WN(0,\\sigma^2_\\epsilon)\\]\n MME를 생각하면\n \\[\\hat \\mu = \\bar Z = 24.75\\]\n \\[\\gamma_0 = \\frac{1}{100} \\sum_{t=1}^{100}(Z_t - \\bar Z)^2 = \\frac{99}{100} s^2_Z = 85.074\\]\n \\[\\hat \\rho_1 = \\frac{-\\theta}{1+\\theta^2} \\rightarrow \\hat \\theta = \\frac{-1 \\pm \\sqrt{1-4\\rho_1^2} }{2\\hat \\rho_1} = 0.75, 1.33 \\rightarrow \\hat \\theta = 0.75 (\\because |\\theta| &lt; 1)\\]\n \\[\\gamma_0 = \\sigma_\\epsilon^2 (1+\\theta^2) \\rightarrow \\hat \\sigma^2_\\epsilon = \\frac{\\gamma_0}{1+\\hat \\theta^2} = 54.45\\]\n - 따라서 다음의 모형이 적절하다.\n \\[Z_t - 24.75 = \\epsilon_t - 0.75 \\epsilon_{t-1}, \\epsilon_t \\sim WN(0.54,45)\\]\nMA(1)모형\n\n1.96/sqrt(100)\n\n0.196\n\n\n시차 2부터는 0.196보다 작다. 즉 다 0이므로 무시하자.."
  },
  {
    "objectID": "posts/[TS] HW04.html#section-7",
    "href": "posts/[TS] HW04.html#section-7",
    "title": "[TS] HW04",
    "section": "(2)",
    "text": "(2)\n\\(n = 100, \\bar Z = 25.56, s_Z = 3.85\\)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n\n\\(\\hat ρ_k\\)\n0.59\n0.44\n0.33\n0.23\n0.24\n0.16\n0.05\n0.01\n-0.03\n-0.11\n-0.08\n-0.07\n0.01\n\n\n\\(\\hat ϕ_{kk}\\)\n0.59\n0.13\n0.04\n-0.02\n0.12\n-0.05\n-0.12\n-0.03\n-0.01\n-0.13\n0.06\n0.04\n0.13\n\n\n\n MME를 생각하면\n \\[\\hat \\mu = \\bar Z = 25.56\\]\n \\[\\gamma_0 = \\frac{1}{100} \\sum_{t=1}^{100}(Z_t - \\bar Z)^2 = \\frac{99}{100} s^2_Z = 14.674\\]\n \\[\\hat \\phi = \\hat \\roh_1 = 0.59\\]\n \\[\\gamma_0 = \\frac{\\sigma^2_\\epsilon}{1-\\phi^2} \\rightarrow \\hat \\sigma^2_\\epsilon = \\hat \\gamma_0(1-\\hat \\rho_1^2) = 2.467\\]\n - 따라서 다음의 모형이 적절하다.\n \\[Z_t - 25.56 = 0.59(Z_{t-1} - 25.56) + \\epsilon_t, \\epsilon_t \\sim WN(0, 2.467)\\]\nAR(1)모형"
  },
  {
    "objectID": "posts/[TS] HW04.html#section-8",
    "href": "posts/[TS] HW04.html#section-8",
    "title": "[TS] HW04",
    "section": "(3)",
    "text": "(3)\n\\(n = 99, \\bar W = 19.02, s_w = 1.351,\\) 단 \\(W_k = (1 − B)Z_k\\)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n\n\\(\\hat ρ_k\\)\n-0.44\n-0.05\n-0.01\n-0.03\n0.12\n-0.15\n0.15\n-0.04\n-0.10\n0.09\n0.08\n-0.07\n0.06\n\n\n\\(\\hat ϕ_{kk}\\)\n-0.44\n-0.31\n-0.25\n-0.25\n-0.07\n-0.21\n-0.01\n0.02\n-0.09\n-0.02\n0.03\n-0.02\n0.01\n\n\n\n차분을 한 번 진행했다.\nW가 MA(1)모형이다.\n그리고 Z_k는 ARIMA(0,1,1)모형이다.\n - MME를 생각하면\n \\[\\hat \\mu = \\bar W = 19.02\\]\n \\[\\gamma_0 = \\frac{1}{99} \\sum_{t=1}^{99}(W_t - \\bar W)^2 = \\frac{98}{99} s^2_W = 1.807\\]\n \\[\\hat \\rho_1 = \\frac{- \\theta}{1+\\theta^2} \\rightarrow \\hat \\theta = \\frac{-1 \\pm \\sqrt{1-4\\rho_1^2}}{2 \\hat \\rho_1} = 0.597, 1.676 \\rightarrow \\hat \\theta = 0.597 (\\because |\\theta|&lt;1)\\]\n \\[\\gamma_0 = \\sigma^2_\\epsilon (1+\\theta^2) \\rightarrow \\hat \\sigma^2_\\epsilon = \\frac{\\gamma_0}{1+\\hat \\theta^2} = 1.332\\]\n - 따라서 다음의 모형이 적절하다.\n \\[(1-B)Z_t = 19.02 + \\epsilon_t - 0.597 \\epsilon_{t-1}, \\epsilon_t \\sim WN(0, 1.332)\\]"
  },
  {
    "objectID": "posts/[TS] HW04.html#section-10",
    "href": "posts/[TS] HW04.html#section-10",
    "title": "[TS] HW04",
    "section": "(1)",
    "text": "(1)\n\\(Z_t\\) 의 시계열 그림을 그려라. 비성상성이 존재하는가? 존재한다면 비정상성분은 무엇이라고 생각하는가?\n\nplot.ts(z4, main = \"ex7_3\")\n\n\n\n\n추세와 계절성분에 의한 비정상성이 존재하는 것으로 보인다."
  },
  {
    "objectID": "posts/[TS] HW04.html#section-11",
    "href": "posts/[TS] HW04.html#section-11",
    "title": "[TS] HW04",
    "section": "(2)",
    "text": "(2)\n1차 차분시계열 \\((1 − B)Z_t\\)의 시계열그림을 그려라. 계절성분에 의한 비정상성이 존재하는가? 존재한다면 계정성분을 제거하기 위하여 계절차분을 하여라.\n\noptions(repr.plot.width = 12, repr.plot.height = 10)\nforecast::tsdisplay(diff(z4), lag.max=24)\n\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n\n\n\n\n\n\n\nACF가 들쭉날쭉 하다.. 계절 성분이 있어 보인다. (시도표로 확인했을 떄도 계절 성분이 있어 보임)\n\n\nforecast::tsdisplay(diff(diff(z4),4), lag.max=24)"
  },
  {
    "objectID": "posts/[TS] HW04.html#section-12",
    "href": "posts/[TS] HW04.html#section-12",
    "title": "[TS] HW04",
    "section": "(3)",
    "text": "(3)\n계절주기가 \\(4\\)인 계절차분된 시계열 \\((1 − B^4)Z_t\\)의 시계열을그림을 그려라. 비정상성이 존재하 는가?\n\nz4_2 &lt;- diff(z4, 4)\noptions(repr.plot.width = 12, repr.plot.height = 10)\nforecast::tsdisplay(z4_2, lag.max=24)"
  },
  {
    "objectID": "posts/[TS] HW04.html#section-13",
    "href": "posts/[TS] HW04.html#section-13",
    "title": "[TS] HW04",
    "section": "(4)",
    "text": "(4)\n차분의 순서에 따라 결과가 달라짐에 주목하고 이에 대해 논하여라.\n계절 차분을 먼저 진행하였고 추세가 없어짐을 볼 수 있다. 추세 차분을 먼저 진행하는 경우 계절 추세가 남을 수 있으니, 계절 차분을 먼저 진행해 주는 것이 좋다."
  },
  {
    "objectID": "posts/[TS] HW04.html#section-14",
    "href": "posts/[TS] HW04.html#section-14",
    "title": "[TS] HW04",
    "section": "(1)",
    "text": "(1)\n\\(Z_t\\) 의 시계열 그림을 그려라. 비성상성이 존재하는가? 존재한다면 비정상성분은 무엇이라고 생각하는가?\n\nz5 &lt;- scan(\"ex7_4.txt\")\n\n\nplot.ts(z5, main = \"ex7_4\")\n\n\n\n\n시도표를 확인 했을 때는 계절 성분이 있어 보이고, 시간에 따라 분산이 점점 작아 보인다."
  },
  {
    "objectID": "posts/[TS] HW04.html#section-15",
    "href": "posts/[TS] HW04.html#section-15",
    "title": "[TS] HW04",
    "section": "(2)",
    "text": "(2)\n1차 차분시계열 \\((1 − B)Z_t\\)의 시계열그림을 그려라. 계절성분에 의한 비정상성이 존재하는가?\n\noptions(repr.plot.width = 12, repr.plot.height = 10)\nforecast::tsdisplay(diff(z5), lag.max=24)\n\n\n\n\n계절성분에 의해 ACF가 주기에 따라 들쭉 날쭉 하다. 비정상 시계열이다."
  },
  {
    "objectID": "posts/[TS] HW04.html#section-16",
    "href": "posts/[TS] HW04.html#section-16",
    "title": "[TS] HW04",
    "section": "(3)",
    "text": "(3)\n계절주기가 \\(4\\)인 계절차분된 시계열 \\((1 − B^4)Z_t\\)의 시계열을그림을 그려라. 비정상성이 존재하 는가? 존재한다면 비정상성분은 무엇이라 생각되는가?\n\nz5_2 &lt;- diff(z5, 4)\noptions(repr.plot.width = 12, repr.plot.height = 10)\nforecast::tsdisplay(z5_2, lag.max=24)\n\n\n\n\n정상 시계열이다..(아마..)"
  },
  {
    "objectID": "posts/[TS] HW04.html#section-17",
    "href": "posts/[TS] HW04.html#section-17",
    "title": "[TS] HW04",
    "section": "(4)",
    "text": "(4)\n1차 및 계절 차분 된 시계열 \\((1 − B^4)(1 − B)Z_t\\) 의 시계열그림을 그려라. 비정상성이 존재하 는가?\n\nz5_3 &lt;- diff(diff(z5),4)\noptions(repr.plot.width = 12, repr.plot.height = 10)\nforecast::tsdisplay(diff(z5_3), lag.max=24)\n\n\n\n\n정상 시계열이다."
  },
  {
    "objectID": "posts/[TS] HW04.html#section-18",
    "href": "posts/[TS] HW04.html#section-18",
    "title": "[TS] HW04",
    "section": "(5)",
    "text": "(5)\n4번 문제와, 위의 결과로부터 차분의 순서에 대하여 논하라.\n계절 성분을 먼저 차분 하면 추세가 없어지는 경우가 생기므로 그 이후의 차분을 하지 않아도 된다.\n추세 차분을 먼저 하고 계절 차분을 진행해도 같은 정상 시계열을 얻을 수 있다. 다만, 모형이 복잡해질 수 있고 과대 차분으로 인해 분산이 커질 수 있다.\n\nsd(z5_2)\nsd(z5_3)\n\n6.44212496199616\n\n\n6.42585266650135\n\n\n옷! 근데 이 예제에서는 분산이 커지진 않는당 ㅎ"
  },
  {
    "objectID": "posts/[TS] HW01_A.html",
    "href": "posts/[TS] HW01_A.html",
    "title": "[TS] HW01_Answer",
    "section": "",
    "text": "해당 자료는 전북대학교 이영미 교수님 2023고급시계열분석 자료임\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(car)\n#library(forecast)\nlibrary(lmtest)\n\n\nAttaching package: ‘lubridate’\n\n\nThe following objects are masked from ‘package:base’:\n\n    date, intersect, setdiff, union\n\n\nLoading required package: carData\n\nLoading required package: zoo\n\n\nAttaching package: ‘zoo’\n\n\nThe following objects are masked from ‘package:base’:\n\n    as.Date, as.Date.numeric"
  },
  {
    "objectID": "posts/[TS] HW01_A.html#section-1",
    "href": "posts/[TS] HW01_A.html#section-1",
    "title": "[TS] HW01_Answer",
    "section": "(1)",
    "text": "(1)\n\nsum(z)\n(bar_z = mean(z))\n\n483\n\n\n48.3"
  },
  {
    "objectID": "posts/[TS] HW01_A.html#section-2",
    "href": "posts/[TS] HW01_A.html#section-2",
    "title": "[TS] HW01_Answer",
    "section": "(3)",
    "text": "(3)\n\nsum((z- mean(z))^2)\ns2 = sum((z- mean(z))^2)/(n-1)\ns2\n\n130.1\n\n\n14.4555555555556\n\n\n\nbar_z + qt(0.975,(n-1)) * sqrt((1+1/n)*s2)\nbar_z - qt(0.975,(n-1)) * sqrt((1+1/n)*s2)\n\n57.3206225347423\n\n\n39.2793774652577\n\n\n- lm함수 비교\n\nm &lt;- lm(z~1)\nsummary(m)\n\n\nCall:\nlm(formula = z ~ 1)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n  -7.3   -2.3    0.7    3.2    4.7 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   48.300      1.202   40.17 1.83e-11 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 3.802 on 9 degrees of freedom\n\n\n\npredict(m, newdata=data.frame(t=11:15), interval=\"prediction\")\n\n\nA matrix: 5 × 3 of type dbl\n\n\n\nfit\nlwr\nupr\n\n\n\n\n1\n48.3\n39.27938\n57.32062\n\n\n2\n48.3\n39.27938\n57.32062\n\n\n3\n48.3\n39.27938\n57.32062\n\n\n4\n48.3\n39.27938\n57.32062\n\n\n5\n48.3\n39.27938\n57.32062"
  },
  {
    "objectID": "posts/[TS] HW01_A.html#section-4",
    "href": "posts/[TS] HW01_A.html#section-4",
    "title": "[TS] HW01_Answer",
    "section": "(3)",
    "text": "(3)\n\nz &lt;- c(303,298,303,314,303,314,310,324,317,327,323,324,331,330,332)\nn &lt;- length(z)\n\n\nt &lt;- 1:n\n\n\nhat_beta_0 = 2*(2*n+1)/n/(n-1) * sum(z) - 6/n/(n-1)*sum(t*z)\nhat_beta_0\nhat_beta_1 = 12/n/(n^2-1)*sum(t*z) - 6/n/(n-1)*sum(z)\nhat_beta_1\n\n297.780952380952\n\n\n2.3857142857143"
  },
  {
    "objectID": "posts/[TS] HW01_A.html#section-5",
    "href": "posts/[TS] HW01_A.html#section-5",
    "title": "[TS] HW01_Answer",
    "section": "(4)",
    "text": "(4)\n\\(\\hat Z_n(l) = \\hat \\beta_0 + \\hat \\beta_1(n+l)\\)\n\nhat_beta_0 + hat_beta_1 *(15+(1:5))\n\n\n335.952380952381338.338095238095340.72380952381343.109523809524345.495238095238\n\n\n- lm비교\n\nm &lt;- lm(z~t)\nsummary(m)\n\n\nCall:\nlm(formula = z ~ t)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-6.710 -2.331 -1.181  2.519  7.133 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  297.781      2.364 125.964  &lt; 2e-16 ***\nt              2.386      0.260   9.176 4.84e-07 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 4.351 on 13 degrees of freedom\nMultiple R-squared:  0.8662,    Adjusted R-squared:  0.856 \nF-statistic: 84.19 on 1 and 13 DF,  p-value: 4.836e-07\n\n\n\npredict(m, newdata = data.frame(t=15+(1:5)), interval=\"prediction\")\n\n\nA matrix: 5 × 3 of type dbl\n\n\n\nfit\nlwr\nupr\n\n\n\n\n1\n335.9524\n325.2553\n346.6495\n\n\n2\n338.3381\n327.3932\n349.2830\n\n\n3\n340.7238\n329.5084\n351.9393\n\n\n4\n343.1095\n331.6025\n354.6166\n\n\n5\n345.4952\n333.6771\n357.3134"
  },
  {
    "objectID": "posts/[TS] HW01_A.html#section-7",
    "href": "posts/[TS] HW01_A.html#section-7",
    "title": "[TS] HW01_Answer",
    "section": "4",
    "text": "4\n\n###### (1)\nZt_1 &lt;- 100 + rnorm(100,0,1)\n####### (2)\nZt_2 &lt;- 100 + t + rnorm(100,0,1)\n####### (3)\nZt_3 &lt;- 100 + 0.3*t + sin(2*pi*t/12) + cos(2*pi*t/12) + rnorm(100,0,1)\n\nWarning message in 100 + t + rnorm(100, 0, 1):\n“longer object length is not a multiple of shorter object length”\nWarning message in 100 + 0.3 * t + sin(2 * pi * t/12) + cos(2 * pi * t/12) + rnorm(100, :\n“longer object length is not a multiple of shorter object length”\n\n\n\nts.plot(ts(Zt_1), ts(Zt_2), ts(Zt_3),col= 1:3, lwd=2)\nlegend(\"topleft\", legend = c(expression(Z[t1]), expression(Z[t2]), expression(Z[\n col= 1:3, lty=1, lwd=2)\n\n\nZt_1 : 불규칙성분\nZt_2 : 추세성분 + 불규칙 성분\nZt_3 : 추세성분 + 계절성분(주기12) + 불규칙 성분: 계절성분 값이 오차에 비해 너무 작아 확인하기 쉽지 않다.\n\n\nZt_3 &lt;- 100 + 0.3*t + 3*sin(2*pi*t/12) + 20*cos(2*pi*t/12) + rnorm(100,0,1)\nts.plot(ts(Zt_1), ts(Zt_2), ts(Zt_3),col= 1:3)\nlegend(\"topleft\", legend = c(expression(Z[t1]), expression(Z[t2]), expression(Z[\n col= 1:3, lty=1)"
  },
  {
    "objectID": "posts/[TS] HW01_A.html#section-9",
    "href": "posts/[TS] HW01_A.html#section-9",
    "title": "[TS] HW01_Answer",
    "section": "(3)",
    "text": "(3)\n\\(Z_t = \\beta_0 + \\beta_1 t + \\epsilon_t\\)\n\nlength(z)\n\n30\n\n\n\nt &lt;- 1:length(z)\nm &lt;- lm(z~t)\nsummary(m)\n\n\nCall:\nlm(formula = z ~ t)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.5563 -1.0063 -0.2081  1.0385  2.0644 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  8.19080    0.46960   17.44   &lt;2e-16 ***\nt            3.07586    0.02645  116.28   &lt;2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 1.254 on 28 degrees of freedom\nMultiple R-squared:  0.9979,    Adjusted R-squared:  0.9979 \nF-statistic: 1.352e+04 on 1 and 28 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "posts/[TS] HW01_A.html#section-10",
    "href": "posts/[TS] HW01_A.html#section-10",
    "title": "[TS] HW01_Answer",
    "section": "(4)",
    "text": "(4)\n\\(\\hat Z_{n+l} = \\hat Z_n(l) = \\hat \\beta_0 + \\hat \\beta_1(n+l)\\)\n\nnew_dt &lt;- data.frame(t=30+(1:12))\npredict(m, new_dt)\n\n1103.5425287356322106.6183908045983109.6942528735634112.7701149425295115.8459770114946118.921839080467121.9977011494258125.0735632183919128.14942528735610131.22528735632211134.30114942528712137.377011494253\n\n\n\npred &lt;- predict(m, new_dt, interval=\"prediction\")\npred\n\n\nA matrix: 12 × 3 of type dbl\n\n\n\nfit\nlwr\nupr\n\n\n\n\n1\n103.5425\n100.7996\n106.2855\n\n\n2\n106.6184\n103.8584\n109.3784\n\n\n3\n109.6943\n106.9162\n112.4723\n\n\n4\n112.7701\n109.9731\n115.5671\n\n\n5\n115.8460\n113.0291\n118.6629\n\n\n6\n118.9218\n116.0842\n121.7595\n\n\n7\n121.9977\n119.1384\n124.8570\n\n\n8\n125.0736\n122.1918\n127.9554\n\n\n9\n128.1494\n125.2443\n131.0546\n\n\n10\n131.2253\n128.2960\n134.1546\n\n\n11\n134.3011\n131.3469\n137.2554\n\n\n12\n137.3770\n134.3970\n140.3570\n\n\n\n\n\n\nplot(t, z, type='n', ylim = c(0, 145), xlim=c(1,(30+12)))\nlines(t, z, lwd=2)\nlines(30+(1:12), pred[,1], col=2, lwd=3)\nlines(30+(1:12), pred[,2], col=3, lwd=3, lty=2)\nlines(30+(1:12), pred[,3], col=3, lwd=3, lty=2)"
  },
  {
    "objectID": "posts/[TS] HW01_A.html#모형설명제약조건-주의",
    "href": "posts/[TS] HW01_A.html#모형설명제약조건-주의",
    "title": "[TS] HW01_Answer",
    "section": "(4) 모형설명(제약조건 주의!)",
    "text": "(4) 모형설명(제약조건 주의!)\n\n1개월이 지날 때마다 월별수출액은 평균적으로 0.437억$증가\n2월은 1월에 비해 월별수출액이 1.72억$ 증가\n3월은 1월에 비해 월별수출액이 9.22억$ 증가\n…\n12월은 1월에 비해 평균 월별수출액이 18.58억$ 증가"
  },
  {
    "objectID": "posts/[TS] HW01_A.html#section-12",
    "href": "posts/[TS] HW01_A.html#section-12",
    "title": "[TS] HW01_Answer",
    "section": "(5)",
    "text": "(5)\n\\(\\hat Z_{n+l} = \\hat Z_n(l) = \\hat \\beta_0 + \\hat \\beta_1(n+l) + \\sum_{i=1}^{12} \\delta_i I_{t1}\\)\n\nnew_dt &lt;- data.frame( t = n + (1:12),\n seasonal_I = as.factor(c(3:12,1,2)))\nnew_dt\n\n\nA data.frame: 12 × 2\n\n\nt\nseasonal_I\n\n\n&lt;int&gt;\n&lt;fct&gt;\n\n\n\n\n87\n3\n\n\n88\n4\n\n\n89\n5\n\n\n90\n6\n\n\n91\n7\n\n\n92\n8\n\n\n93\n9\n\n\n94\n10\n\n\n95\n11\n\n\n96\n12\n\n\n97\n1\n\n\n98\n2"
  },
  {
    "objectID": "posts/[TS] HW01_A.html#예측-구간",
    "href": "posts/[TS] HW01_A.html#예측-구간",
    "title": "[TS] HW01_Answer",
    "section": "(6) 95% 예측 구간",
    "text": "(6) 95% 예측 구간\n\npredict(m2, new_dt)\n\n169.2346153846154267.8260439560439370.1946153846154474.2946153846154570.9289010989011669.9374725274725773.7131868131868873.7617582417582975.89032967032971082.53175824175821164.38929945054951266.5442994505494\n\n\n\npred &lt;- predict(m2, new_dt, interval = 'prediction')\npred\n\n\nA matrix: 12 × 3 of type dbl\n\n\n\nfit\nlwr\nupr\n\n\n\n\n1\n69.23462\n59.82517\n78.64407\n\n\n2\n67.82604\n58.41659\n77.23549\n\n\n3\n70.19462\n60.78517\n79.60407\n\n\n4\n74.29462\n64.88517\n83.70407\n\n\n5\n70.92890\n61.51945\n80.33835\n\n\n6\n69.93747\n60.52802\n79.34692\n\n\n7\n73.71319\n64.30374\n83.12264\n\n\n8\n73.76176\n64.35231\n83.17121\n\n\n9\n75.89033\n66.48088\n85.29978\n\n\n10\n82.53176\n73.12231\n91.94121\n\n\n11\n64.38930\n55.00439\n73.77421\n\n\n12\n66.54430\n57.15939\n75.92921\n\n\n\n\n\n69.23462 = \\(\\hat Z_{87} = \\hat Z_{86}(1) = \\hat \\beta_0 + \\hat \\beta_1 \\times 87 + \\delta_3 \\times I_{87 \\times 3}\\) (3월)\n70.92890 = $ Z_{86}(5) = _0 + _1 (86+5) + 7 I{91 }$ (7월)"
  },
  {
    "objectID": "posts/[TS] HW01_A.html#section-13",
    "href": "posts/[TS] HW01_A.html#section-13",
    "title": "[TS] HW01_Answer",
    "section": "(7)",
    "text": "(7)\n\nmin_ &lt;- min(c(z, pred[,2]))\nmax_ &lt;- max(c(z, pred[,3]))\nplot(t, z, type='n', ylim = c(min_, max_), xlim=c(1,(n+12)))\nlines(t, z, lwd=2)\nlines(n+(1:12), pred[,1], col=2, lwd=3)\nlines(n+(1:12), pred[,2], col=3, lwd=3, lty=2)\nlines(n+(1:12), pred[,3], col=3, lwd=3, lty=2)"
  },
  {
    "objectID": "posts/[TS] HW01_A.html#번외-잔차검정",
    "href": "posts/[TS] HW01_A.html#번외-잔차검정",
    "title": "[TS] HW01_Answer",
    "section": "(번외) 잔차검정",
    "text": "(번외) 잔차검정\n\nresid_m &lt;- resid(m2)\nplot(resid_m, pch=16, type='l')\nabline(h=0, lty=2)\n\n\n\n\n\nt.test(resid_m)\n\n\n    One Sample t-test\n\ndata:  resid_m\nt = 2.6111e-16, df = 85, p-value = 1\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.861081  0.861081\nsample estimates:\n   mean of x \n1.130835e-16 \n\n\n\nhist(resid_m)\n\n\n\n\n\nlmtest::bptest(m2)\n\n\n    studentized Breusch-Pagan test\n\ndata:  m2\nBP = 18.466, df = 12, p-value = 0.1023\n\n\n\nlmtest::dwtest(m2, alternative=\"two.sided\")\n\n\n    Durbin-Watson test\n\ndata:  m2\nDW = 0.79196, p-value = 5.014e-09\nalternative hypothesis: true autocorrelation is not 0"
  },
  {
    "objectID": "posts/[TS] HW01_A.html#다항추세-사용",
    "href": "posts/[TS] HW01_A.html#다항추세-사용",
    "title": "[TS] HW01_Answer",
    "section": "다항추세 사용",
    "text": "다항추세 사용\n\nm3 &lt;- lm(z ~ t + I(t^2) + seasonal_I)\nsummary(m3)\n\n\nCall:\nlm(formula = z ~ t + I(t^2) + seasonal_I)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-9.2252 -2.1156  0.0414  2.2895  7.5664 \n\nCoefficients:\n               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  17.3011107  1.6527443  10.468 4.12e-16 ***\nt             0.7955399  0.0637685  12.475  &lt; 2e-16 ***\nI(t^2)       -0.0041187  0.0007103  -5.799 1.65e-07 ***\nseasonal_I2   1.7177908  1.8014987   0.954 0.343510    \nseasonal_I3   8.5584096  1.8691776   4.579 1.91e-05 ***\nseasonal_I4   6.6796790  1.8690680   3.574 0.000633 ***\nseasonal_I5   8.5863287  1.8690137   4.594 1.81e-05 ***\nseasonal_I6  12.2326445  1.8690050   6.545 7.54e-09 ***\nseasonal_I7   8.4214835  1.8690354   4.506 2.50e-05 ***\nseasonal_I8   6.9928457  1.8691016   3.741 0.000365 ***\nseasonal_I9  10.3395882  1.8692037   5.532 4.84e-07 ***\nseasonal_I10  9.9674253  1.8693449   5.332 1.07e-06 ***\nseasonal_I11 11.6835000  1.8695317   6.249 2.59e-08 ***\nseasonal_I12 17.9206692  1.8697737   9.584 1.72e-14 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 3.603 on 72 degrees of freedom\nMultiple R-squared:  0.9326,    Adjusted R-squared:  0.9204 \nF-statistic: 76.58 on 13 and 72 DF,  p-value: &lt; 2.2e-16\n\n\n\nsummary(m2)\n\n\nCall:\nlm(formula = z ~ t + seasonal_I)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-10.8562  -2.2938   0.1567   2.6730   9.3951 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  21.98000    1.73500  12.669  &lt; 2e-16 ***\nt             0.43721    0.01893  23.097  &lt; 2e-16 ***\nseasonal_I2   1.71779    2.16697   0.793 0.430512    \nseasonal_I3   9.21741    2.24422   4.107 0.000103 ***\nseasonal_I4   7.37163    2.24366   3.286 0.001566 ** \nseasonal_I5   9.30299    2.24326   4.147 8.98e-05 ***\nseasonal_I6  12.96578    2.24302   5.780 1.72e-07 ***\nseasonal_I7   9.16286    2.24294   4.085 0.000112 ***\nseasonal_I8   7.73422    2.24302   3.448 0.000941 ***\nseasonal_I9  11.07272    2.24326   4.936 4.88e-06 ***\nseasonal_I10 10.68409    2.24366   4.762 9.47e-06 ***\nseasonal_I11 12.37545    2.24422   5.514 5.03e-07 ***\nseasonal_I12 18.57967    2.24494   8.276 4.26e-12 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 4.334 on 73 degrees of freedom\nMultiple R-squared:  0.9011,    Adjusted R-squared:  0.8848 \nF-statistic:  55.4 on 12 and 73 DF,  p-value: &lt; 2.2e-16\n\n\n\n2차 추세도 유의하고, 수정된 결정계수의 값이 증가 하였기 때문에 2차 추세 모형 사용 가능\n\n\nresid_m3 &lt;- resid(m3)\n\n\nplot.ts(resid_m3)\nabline(h=0, lty=2)\n\n\n\n\n\nt.test(resid_m3)\n\n\n    One Sample t-test\n\ndata:  resid_m3\nt = -4.2693e-16, df = 85, p-value = 1\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.7109349  0.7109349\nsample estimates:\n    mean of x \n-1.526557e-16 \n\n\n\nlmtest::bptest(m3)\n\n\n    studentized Breusch-Pagan test\n\ndata:  m3\nBP = 11.389, df = 13, p-value = 0.5783\n\n\n\nlmtest::dwtest(m3)\n\n\n    Durbin-Watson test\n\ndata:  m3\nDW = 1.1633, p-value = 4.187e-05\nalternative hypothesis: true autocorrelation is greater than 0"
  },
  {
    "objectID": "posts/[TS] 10.html",
    "href": "posts/[TS] 10.html",
    "title": "[TS] 10. Seasonal ARIMA 실습",
    "section": "",
    "text": "options(repr.plot.width = 12, repr.plot.height = 6)"
  },
  {
    "objectID": "posts/[TS] 10.html#분산안정화-변수변환",
    "href": "posts/[TS] 10.html#분산안정화-변수변환",
    "title": "[TS] 10. Seasonal ARIMA 실습",
    "section": "(1) 분산안정화 : 변수변환",
    "text": "(1) 분산안정화 : 변수변환\n\nlog_z = log(z)\nsqrt_z = sqrt(z)\nboxcox_z = forecast::BoxCox(z,lambda= forecast::BoxCox.lambda(z))\n\n\nforecast::BoxCox.lambda(z)\n\n0.597503413076269\n\n\n\npar(mfrow=c(2,2))\nplot.ts(z, main = \"original\")\nplot.ts(log_z, main = 'log')\nplot.ts(sqrt_z, main = 'sqrt')\nplot.ts(boxcox_z, main = 'Boxcox')\n\n\n\n\n\nt = 1:length(z)\nlmtest::bptest(lm(z~t)) #H0 : 등분산이다\nlmtest::bptest(lm(log_z~t))\nlmtest::bptest(lm(sqrt_z~t))\nlmtest::bptest(lm(boxcox_z~t))\n\n\n    studentized Breusch-Pagan test\n\ndata:  lm(z ~ t)\nBP = 1.574, df = 1, p-value = 0.2096\n\n\n\n    studentized Breusch-Pagan test\n\ndata:  lm(log_z ~ t)\nBP = 5.4539, df = 1, p-value = 0.01953\n\n\n\n    studentized Breusch-Pagan test\n\ndata:  lm(sqrt_z ~ t)\nBP = 0.26821, df = 1, p-value = 0.6045\n\n\n\n    studentized Breusch-Pagan test\n\ndata:  lm(boxcox_z ~ t)\nBP = 0.026422, df = 1, p-value = 0.8709\n\n\n\n원데이터도 등분산이긴 하지만.. sqrt나 boxcox를 하는게 나은 것 같다.\n\\(\\lambda = 0.597\\)을 이용한 Boxcox 변환 수행\n\n\nforecast::tsdisplay(boxcox_z)\n\n\n\n\n\n계절성분과 추세가 존재하므로 우선 계절차분을 통한 계절성분 제거"
  },
  {
    "objectID": "posts/[TS] 10.html#계절차분",
    "href": "posts/[TS] 10.html#계절차분",
    "title": "[TS] 10. Seasonal ARIMA 실습",
    "section": "(2) 계절차분",
    "text": "(2) 계절차분\n\nlag12_boxcox_z = diff(boxcox_z, lag=12)\nforecast::tsdisplay(lag12_boxcox_z)\n\n\n\n\n\n계절차분을 통해 결정적 계절추세는 제거 되었음\n결정적 추세는 없는 것으로 보이나, ACF가 조금은 천천히 감소하는 경향이 보이기 때문에 단위근 검정을 통해 차분이 필요한가에 대한 여부 판정"
  },
  {
    "objectID": "posts/[TS] 10.html#평균",
    "href": "posts/[TS] 10.html#평균",
    "title": "[TS] 10. Seasonal ARIMA 실습",
    "section": "평균",
    "text": "평균\n\nt.test(lag12_boxcox_z)\n\n\n    One Sample t-test\n\ndata:  lag12_boxcox_z\nt = 12.508, df = 119, p-value &lt; 2.2e-16\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n 116.3801 160.1566\nsample estimates:\nmean of x \n 138.2684 \n\n\n\n평균 0아님"
  },
  {
    "objectID": "posts/[TS] 10.html#단위근-검정",
    "href": "posts/[TS] 10.html#단위근-검정",
    "title": "[TS] 10. Seasonal ARIMA 실습",
    "section": "(3) 단위근 검정",
    "text": "(3) 단위근 검정\n\n##단위근 검정 : H0 : 단위근이 있다.\nfUnitRoots::adfTest(lag12_boxcox_z, lags = 1, type = \"c\")\n\n\nTitle:\n Augmented Dickey-Fuller Test\n\nTest Results:\n  PARAMETER:\n    Lag Order: 1\n  STATISTIC:\n    Dickey-Fuller: -2.6696\n  P VALUE:\n    0.08535 \n\nDescription:\n Tue Dec  5 20:44:51 2023 by user: \n\n\n\n유의확률이 아주 크지는 않지만, 유의수준 \\(\\alpha=0.05\\)하에서 귀무가설을 기각하지 못하기 때문에 차분을 하기로함, 단위근이 있어!\n\n\ndiff_lag12_boxcox_z = diff(lag12_boxcox_z)\nforecast::tsdisplay(diff_lag12_boxcox_z, lag.max=60)\n\n\n\n\n\n차분한 후의 자료에 대해서는 더이상 차분이 필요하지 않음"
  },
  {
    "objectID": "posts/[TS] 10.html#모형식별",
    "href": "posts/[TS] 10.html#모형식별",
    "title": "[TS] 10. Seasonal ARIMA 실습",
    "section": "(4) 모형식별",
    "text": "(4) 모형식별\n\nforecast::tsdisplay(diff_lag12_boxcox_z, lag.max=60)\n\n\n\n\n\nACF는 1차와 12차에서 절단 형태이고, PACF는 1,2차와 12,13 시차 등에서 유의하게 나왔다.\nACF의 차수가 더 낮으므로 MA(1)과 계절형 MA(1)모형을 적합할 수 있다.\ndiff_lag12_boxcox_z = : \\(ARIMA(0, 0, 1)(0, 0, 1)_{12}\\)\nlag12_boxcox_z = \\(ARIMA(0,1,1)(0,0,1)_{12}\\)\nBoxcox_z = \\(ARIMA(0,1,1)(0,1,1)_{12}\\)\n계절형 AR도 괜찮을 것 같다."
  },
  {
    "objectID": "posts/[TS] 10.html#모형적합",
    "href": "posts/[TS] 10.html#모형적합",
    "title": "[TS] 10. Seasonal ARIMA 실습",
    "section": "(5) 모형적합",
    "text": "(5) 모형적합\n- 상수항 추가 여부 확인\n\nt.test(diff_lag12_boxcox_z)\n\n\n    One Sample t-test\n\ndata:  diff_lag12_boxcox_z\nt = 0.11301, df = 118, p-value = 0.9102\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -16.93470  18.98455\nsample estimates:\nmean of x \n 1.024925 \n\n\n\n상수항 추가 안해두 된당.\n\n- 모형1\n\nfit11 = arima(diff_lag12_boxcox_z, order = c(0,0,1), include.mean=F,\n     seasonal = list(order = c(0,0,1), period=12))\nfit11\n\n\nCall:\narima(x = diff_lag12_boxcox_z, order = c(0, 0, 1), seasonal = list(order = c(0, \n    0, 1), period = 12), include.mean = F)\n\nCoefficients:\n          ma1     sma1\n      -0.5307  -0.6370\ns.e.   0.0702   0.0842\n\nsigma^2 estimated as 4831:  log likelihood = -676.87,  aic = 1359.74\n\n\n- 모형2\n\nfit12 = arima(lag12_boxcox_z, order = c(0,1,1),\n     seasonal = list(order = c(0,0,1), period=12))\nfit12\n\n\nCall:\narima(x = lag12_boxcox_z, order = c(0, 1, 1), seasonal = list(order = c(0, 0, \n    1), period = 12))\n\nCoefficients:\n          ma1     sma1\n      -0.5307  -0.6370\ns.e.   0.0702   0.0842\n\nsigma^2 estimated as 4831:  log likelihood = -676.87,  aic = 1359.74\n\n\n- 모형3\n\nfit1 = arima(boxcox_z, order = c(0,1,1),\n     seasonal = list(order = c(0,1,1), period=12))\nfit1\n\n\nCall:\narima(x = boxcox_z, order = c(0, 1, 1), seasonal = list(order = c(0, 1, 1), \n    period = 12))\n\nCoefficients:\n          ma1     sma1\n      -0.5307  -0.6370\ns.e.   0.0702   0.0842\n\nsigma^2 estimated as 4831:  log likelihood = -676.87,  aic = 1359.74\n\n\n\n위의 3개 모형의 값은 동일하게 나온다.\n\n\nlmtest::coeftest(fit1) #원데이터에 적합하는게 좋다.(forecast하기 위해서)\n\n\nz test of coefficients:\n\n      Estimate Std. Error z value  Pr(&gt;|z|)    \nma1  -0.530740   0.070154 -7.5654 3.868e-14 ***\nsma1 -0.637038   0.084175 -7.5680 3.790e-14 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\n\n\n모든 계수가 유의하다.\n\n\\((1 − B)(1 − B^{12})BoxCox(Z) = (1 − 0.5307B)(1 − 0.6370B^{12})ε_t, ε+t ∼ WN(0, 4831)\\)\n\nMA부분, SMA부분이 있다."
  },
  {
    "objectID": "posts/[TS] 10.html#잔차분석",
    "href": "posts/[TS] 10.html#잔차분석",
    "title": "[TS] 10. Seasonal ARIMA 실습",
    "section": "(6) 잔차분석",
    "text": "(6) 잔차분석\n\nforecast::checkresiduals(fit1)\n\n\n    Ljung-Box test\n\ndata:  Residuals from ARIMA(0,1,1)(0,1,1)[12]\nQ* = 9.1519, df = 8, p-value = 0.3296\n\nModel df: 2.   Total lags used: 10\n\n\n\n\n\n\n\n잔차의 평균은 0이다\n\n\nt.test(resid(fit1))\n\n\n    One Sample t-test\n\ndata:  resid(fit1)\nt = 0.83993, df = 131, p-value = 0.4025\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -6.546096 16.206445\nsample estimates:\nmean of x \n 4.830174 \n\n\n\n등분산성을 만족하고, ACF가 모든 시차에서 유의하지 않으므로 WN라고 할 수 있다.\n\n- 포투맨투검정\n\n#모형 적합도 검정 : H0 : rho1=...=rho_k=0\nBox.test(resid(fit1), lag=1, type = \"Ljung-Box\")\nBox.test(resid(fit1), lag=6, type = \"Ljung-Box\")\nBox.test(resid(fit1), lag=12, type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  resid(fit1)\nX-squared = 1.4198, df = 1, p-value = 0.2334\n\n\n\n    Box-Ljung test\n\ndata:  resid(fit1)\nX-squared = 7.6505, df = 6, p-value = 0.2648\n\n\n\n    Box-Ljung test\n\ndata:  resid(fit1)\nX-squared = 10.729, df = 12, p-value = 0.5523\n\n\n\n모든 시차에 대해 유의확률값이 크기 때문에 WN라고 할 수 있다.\n\n\n# 잔차의 포트맨토 검정 ## H0 : rho1=...=rho_k=0\nportes::LjungBox(fit1, lags=c(6,12,18,24))\n\n\nA matrix: 4 × 4 of type dbl\n\n\n\nlags\nstatistic\ndf\np-value\n\n\n\n\n\n6\n7.650531\n5\n0.1765764\n\n\n\n12\n10.728871\n11\n0.4662493\n\n\n\n18\n15.730829\n17\n0.5429906\n\n\n\n24\n25.724146\n23\n0.3140605"
  },
  {
    "objectID": "posts/[TS] 10.html#과대적합",
    "href": "posts/[TS] 10.html#과대적합",
    "title": "[TS] 10. Seasonal ARIMA 실습",
    "section": "(7) 과대적합",
    "text": "(7) 과대적합\n\nboxcox_z = \\(ARIMA(0,1,1)(0,1,1)_{12}\\)\n\\(ARIMA(1,1,1)(0,1,1)_{12}, ARIMA(0,1,2)(0,1,1)_{12}\\)\n\\(ARIMA(0,1,1)(1,0,1)_{12}\\)\n\n- AR추가\n\nfit2 &lt;- arima(boxcox_z, order = c(1,1,1),\n     seasonal = list(order = c(0,1,1), period=12))\nfit2\n\n\nCall:\narima(x = boxcox_z, order = c(1, 1, 1), seasonal = list(order = c(0, 1, 1), \n    period = 12))\n\nCoefficients:\n          ar1      ma1     sma1\n      -0.3345  -0.2984  -0.6183\ns.e.   0.1354   0.1299   0.0828\n\nsigma^2 estimated as 4658:  log likelihood = -674.51,  aic = 1357.01\n\n\n\nlmtest::coeftest(fit2)\n\n\nz test of coefficients:\n\n      Estimate Std. Error z value  Pr(&gt;|z|)    \nar1  -0.334453   0.135431 -2.4695   0.01353 *  \nma1  -0.298389   0.129851 -2.2979   0.02157 *  \nsma1 -0.618253   0.082802 -7.4666 8.228e-14 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\n\n- MA추가\n\nfit3 &lt;- arima(boxcox_z, order = c(0,1,2),\n     seasonal = list(order = c(0,1,1), period=12))\nfit3\n\n\nCall:\narima(x = boxcox_z, order = c(0, 1, 2), seasonal = list(order = c(0, 1, 1), \n    period = 12))\n\nCoefficients:\n          ma1     ma2     sma1\n      -0.6445  0.2825  -0.6236\ns.e.   0.0871  0.1009   0.0833\n\nsigma^2 estimated as 4569:  log likelihood = -673.44,  aic = 1354.88\n\n\n\nlmtest::coeftest(fit3)\n\n\nz test of coefficients:\n\n      Estimate Std. Error z value  Pr(&gt;|z|)    \nma1  -0.644484   0.087127 -7.3970 1.393e-13 ***\nma2   0.282478   0.100937  2.7985  0.005133 ** \nsma1 -0.623576   0.083259 -7.4896 6.908e-14 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\n\n- 계절형 AR\n\nfit4 &lt;- arima(boxcox_z, order = c(0,1,1),\n     seasonal = list(order = c(1,1,0), period=12))\nfit4\n\n\nCall:\narima(x = boxcox_z, order = c(0, 1, 1), seasonal = list(order = c(1, 1, 0), \n    period = 12))\n\nCoefficients:\n          ma1     sar1\n      -0.5583  -0.5525\ns.e.   0.0670   0.0804\n\nsigma^2 estimated as 5011:  log likelihood = -678.13,  aic = 1362.25\n\n\n\nlmtest::coeftest(fit4)\n\n\nz test of coefficients:\n\n      Estimate Std. Error z value  Pr(&gt;|z|)    \nma1  -0.558307   0.067012 -8.3315 &lt; 2.2e-16 ***\nsar1 -0.552549   0.080366 -6.8754 6.181e-12 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\n\n\nfit1\n\n\nCall:\narima(x = boxcox_z, order = c(0, 1, 1), seasonal = list(order = c(0, 1, 1), \n    period = 12))\n\nCoefficients:\n          ma1     sma1\n      -0.5307  -0.6370\ns.e.   0.0702   0.0842\n\nsigma^2 estimated as 4831:  log likelihood = -676.87,  aic = 1359.74\n\n\n- AIC가 제일 작은 모형 선택\n\n\\(ARIMA(0,1,2)(0,1,1)_{12}\\)모형 적합 결과가 더 좋기 때문에 최종 모형으로 선택\n\n\nforecast::checkresiduals(fit3)\n\n\n    Ljung-Box test\n\ndata:  Residuals from ARIMA(0,1,2)(0,1,1)[12]\nQ* = 3.3401, df = 7, p-value = 0.8519\n\nModel df: 3.   Total lags used: 10\n\n\n\n\n\n\n\n#모형 적합도 검정 : H0 : rho1=...=rho_k=0\nBox.test(resid(fit3), lag=1, type = \"Ljung-Box\")\nBox.test(resid(fit3), lag=6, type = \"Ljung-Box\")\nBox.test(resid(fit3), lag=12, type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  resid(fit3)\nX-squared = 0.00013728, df = 1, p-value = 0.9907\n\n\n\n    Box-Ljung test\n\ndata:  resid(fit3)\nX-squared = 2.3206, df = 6, p-value = 0.888\n\n\n\n    Box-Ljung test\n\ndata:  resid(fit3)\nX-squared = 5.1674, df = 12, p-value = 0.9522\n\n\n\n잔차검정 결과도 이상이 없으므로 fit3을 최종모형으로 선택\n\n\nfit3\n\n\nCall:\narima(x = boxcox_z, order = c(0, 1, 2), seasonal = list(order = c(0, 1, 1), \n    period = 12))\n\nCoefficients:\n          ma1     ma2     sma1\n      -0.6445  0.2825  -0.6236\ns.e.   0.0871  0.1009   0.0833\n\nsigma^2 estimated as 4569:  log likelihood = -673.44,  aic = 1354.88\n\n\n\n\\((1-B)(1-B^{12})Z_t = (1 -0.6445 B + 0.2825 B^2)(1-0.6236 B^{12}) \\epsilon_t\\)\n부호 반대인거 조심!"
  },
  {
    "objectID": "posts/[TS] 10.html#auto.arima",
    "href": "posts/[TS] 10.html#auto.arima",
    "title": "[TS] 10. Seasonal ARIMA 실습",
    "section": "(8) auto.arima",
    "text": "(8) auto.arima\n\nforecast::auto.arima(ts(boxcox_z, frequency=12),\n                     test = \"adf\",\n                     seasonal = TRUE, trace = T)\n\n\n ARIMA(2,1,2)(1,1,1)[12]                    : 1357.774\n ARIMA(0,1,0)(0,1,0)[12]                    : 1432.23\n ARIMA(1,1,0)(1,1,0)[12]                    : 1360.54\n ARIMA(0,1,1)(0,1,1)[12]                    : 1359.953\n ARIMA(2,1,2)(0,1,1)[12]                    : 1358.211\n ARIMA(2,1,2)(1,1,0)[12]                    : 1359.268\n ARIMA(2,1,2)(2,1,1)[12]                    : 1359.649\n ARIMA(2,1,2)(1,1,2)[12]                    : 1358.941\n ARIMA(2,1,2)(0,1,0)[12]                    : 1394.751\n ARIMA(2,1,2)(0,1,2)[12]                    : 1358.288\n ARIMA(2,1,2)(2,1,0)[12]                    : 1359.606\n ARIMA(2,1,2)(2,1,2)[12]                    : 1361.251\n ARIMA(1,1,2)(1,1,1)[12]                    : 1356.533\n ARIMA(1,1,2)(0,1,1)[12]                    : 1357.41\n ARIMA(1,1,2)(1,1,0)[12]                    : 1357.649\n ARIMA(1,1,2)(2,1,1)[12]                    : Inf\n ARIMA(1,1,2)(1,1,2)[12]                    : Inf\n ARIMA(1,1,2)(0,1,0)[12]                    : 1393.906\n ARIMA(1,1,2)(0,1,2)[12]                    : 1357.164\n ARIMA(1,1,2)(2,1,0)[12]                    : Inf\n ARIMA(1,1,2)(2,1,2)[12]                    : 1359.974\n ARIMA(0,1,2)(1,1,1)[12]                    : 1354.324\n ARIMA(0,1,2)(0,1,1)[12]                    : 1355.231\n ARIMA(0,1,2)(1,1,0)[12]                    : 1355.507\n ARIMA(0,1,2)(2,1,1)[12]                    : 1356.055\n ARIMA(0,1,2)(1,1,2)[12]                    : 1355.119\n ARIMA(0,1,2)(0,1,0)[12]                    : 1391.769\n ARIMA(0,1,2)(0,1,2)[12]                    : 1354.951\n ARIMA(0,1,2)(2,1,0)[12]                    : 1355.984\n ARIMA(0,1,2)(2,1,2)[12]                    : Inf\n ARIMA(0,1,1)(1,1,1)[12]                    : 1359.93\n ARIMA(0,1,3)(1,1,1)[12]                    : 1356.525\n ARIMA(1,1,1)(1,1,1)[12]                    : 1356.427\n ARIMA(1,1,3)(1,1,1)[12]                    : 1358.675\n\n Best model: ARIMA(0,1,2)(1,1,1)[12]                    \n\n\n\nSeries: ts(boxcox_z, frequency = 12) \nARIMA(0,1,2)(1,1,1)[12] \n\nCoefficients:\n          ma1     ma2     sar1     sma1\n      -0.6662  0.2996  -0.3012  -0.4028\ns.e.   0.0880  0.0997   0.1645   0.1751\n\nsigma^2 = 4601:  log likelihood = -671.9\nAIC=1353.79   AICc=1354.32   BIC=1367.69\n\n\n\nfit4 &lt;- forecast::auto.arima(ts(boxcox_z, frequency=12),\n                             test = \"adf\",\n                             seasonal = TRUE)\n\n\nlmtest::coeftest(fit4)\n\n\nz test of coefficients:\n\n      Estimate Std. Error z value  Pr(&gt;|z|)    \nma1  -0.666226   0.088010 -7.5699 3.734e-14 ***\nma2   0.299594   0.099683  3.0055  0.002652 ** \nsar1 -0.301227   0.164489 -1.8313  0.067058 .  \nsma1 -0.402808   0.175098 -2.3005  0.021421 *  \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\n\n\n최종선택 모형에 비해 aic나 분산이 조금 작지만 추가된 계수가 유의하지 않으므로 기존 모형 유지"
  },
  {
    "objectID": "posts/[TS] 10.html#예측",
    "href": "posts/[TS] 10.html#예측",
    "title": "[TS] 10. Seasonal ARIMA 실습",
    "section": "(9) 예측",
    "text": "(9) 예측\n\nfore_fit &lt;- forecast::forecast(fit3, 24)\n\n\nfore_fit\n\n    Point Forecast    Lo 80    Hi 80    Lo 95    Hi 95\n133       2780.444 2693.821 2867.067 2647.966 2912.923\n134       2948.470 2856.536 3040.404 2807.869 3089.071\n135       3133.218 3025.951 3240.484 2969.168 3297.267\n136       3219.609 3098.943 3340.275 3035.067 3404.151\n137       3304.710 3171.991 3437.429 3101.734 3507.686\n138       3299.345 3155.579 3443.110 3079.474 3519.215\n139       3256.562 3102.541 3410.584 3021.007 3492.118\n140       3385.280 3221.644 3548.916 3135.020 3635.540\n141       3349.803 3177.087 3522.520 3085.657 3613.950\n142       3514.000 3332.658 3695.342 3236.661 3791.339\n143       3340.552 3150.976 3530.129 3050.621 3630.484\n144       3151.776 2954.309 3349.243 2849.776 3453.776\n145       3024.749 2808.612 3240.886 2694.196 3355.302\n146       3167.091 2940.850 3393.332 2821.085 3513.096\n147       3351.838 3113.152 3590.525 2986.799 3716.878\n148       3438.230 3187.715 3688.744 3055.101 3821.358\n149       3523.330 3261.522 3785.139 3122.929 3923.732\n150       3517.965 3245.330 3790.601 3101.005 3934.925\n151       3475.183 3192.134 3758.231 3042.298 3908.068\n152       3603.901 3310.809 3896.992 3155.656 4052.145\n153       3568.424 3265.622 3871.226 3105.329 4031.519\n154       3732.621 3420.411 4044.831 3255.137 4210.105\n155       3559.173 3237.830 3880.516 3067.721 4050.625\n156       3370.397 3040.173 3700.620 2865.363 3875.430\n\n\n\nplot(fore_fit)\n\n\n\n\n\nastsa::sarima.for(boxcox_z, 24, p=0,d=1,q=2,P=0, D=1, Q=1, S=12)\n\n\n    $pred\n        A Time Series:\n2780.444364702192948.469988349673133.217620766673219.608986275583304.709772121273299.344522066013256.562162041483385.279983789873349.803434575823514.000094578123340.552496563533151.776163964553024.748902383843167.090589365173351.838221782173438.229587291083523.330373136773517.965123081513475.182763056983603.900584805373568.424035591323732.620695593623559.173097579033370.39676498005\n\n    $se\n        A Time Series:\n67.592198621654971.736604887926183.700243464154194.1558337596387103.56114766584112.180664914328120.183575646675127.685872866368134.771185362014141.502164923051147.927188006552154.084448753493168.65253754947176.536749601591186.248055942822195.47749928004204.290398958884212.738528453326220.863749560442228.700481527725236.277431490681243.61883960884250.745395555351257.67482381548\n\n\n\n\n\n\n\n\nBoxCox 역변환을 해야함\n\n\nforecast_z = forecast::InvBoxCox(fore_fit$mean, lambda=forecast::BoxCox.lambda(z))\nforecast_z\n\nA Time Series:\n245634.162066875270964.342935491299958.645281666313921.348143813327924.364184853327034.276934031319971.637075569341407.634183245335443.762145745363399.977817667333895.570293801302936.523527017282791.718952908305402.76421357335784.680882732350387.36379716365015.52063737364086.17223163356709.739667013379085.979444533372864.107784763402007.344466243371248.497707336338900.503978254\n\n\n\nforecast_z_upper95 = forecast::InvBoxCox(fore_fit$upper[,2], lambda=forecast::BoxCox.lambda(z))\nforecast_z_lower95 = forecast::InvBoxCox(fore_fit$lower[,2], lambda=forecast::BoxCox.lambda(z))\n\n\nplot(1:(length(z)+24), c(z, forecast_z_upper95), type='n', xlab='t', ylab='z')\nlines(1:length(z),z)\nlines((length(z)+1) : (length(z)+24), forecast_z, col='red')\nlines((length(z)+1) : (length(z)+24), forecast::InvBoxCox(fore_fit$lower[,2], lambda=forecast::BoxCox.lambda(z)), col='blue')\nlines((length(z)+1) : (length(z)+24), forecast::InvBoxCox(fore_fit$upper[,2], lambda=forecast::BoxCox.lambda(z)), col='blue')"
  },
  {
    "objectID": "posts/[TS] 02_2.html",
    "href": "posts/[TS] 02_2.html",
    "title": "[TS] CH02. 실습2(추세모형)",
    "section": "",
    "text": "해당 자료는 전북대학교 이영미 교수님 2023고급시계열분석 자료임"
  },
  {
    "objectID": "posts/[TS] 02_2.html#강의-영상..",
    "href": "posts/[TS] 02_2.html#강의-영상..",
    "title": "[TS] CH02. 실습2(추세모형)",
    "section": "강의 영상..",
    "text": "강의 영상..\n\nlndep &lt;- log(z)\n\n\nplot(1:length(z), lndep, type='l')\n\n\n\n\n\n등분산이 일정해 보인다.\n\n\ntrend &lt;- 1:length(z)\ntrend    # 추세를 넣기 위해서 trend라는 변수 생성\n\n\n123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960\n\n\n\nreg &lt;- lm(lndep ~ trend)\nsummary(reg)\n\n\nCall:\nlm(formula = lndep ~ trend)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.29916 -0.17726 -0.05602  0.04315  0.85621 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 6.271723   0.073109  85.786  &lt; 2e-16 ***\ntrend       0.012443   0.002084   5.969 1.53e-07 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.2796 on 58 degrees of freedom\nMultiple R-squared:  0.3806,    Adjusted R-squared:  0.3699 \nF-statistic: 35.63 on 1 and 58 DF,  p-value: 1.531e-07\n\n\n\n1차 선형 모형\n\n\nreg &lt;- lm(lndep ~ trend + cycle(dep))   # 주기함수가 cycle이라 했으니, cycle을 넣어주면 될까 하고 넣어보자!\nsummary(reg)\n\n\nCall:\nlm(formula = lndep ~ trend + cycle(dep))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.36677 -0.16421 -0.04285  0.12101  0.57652 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 6.034507   0.077684  77.680  &lt; 2e-16 ***\ntrend       0.010660   0.001789   5.958 1.68e-07 ***\ncycle(dep)  0.044858   0.008976   4.998 5.85e-06 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.2352 on 57 degrees of freedom\nMultiple R-squared:  0.5693,    Adjusted R-squared:  0.5542 \nF-statistic: 37.67 on 2 and 57 DF,  p-value: 3.754e-11\n\n\n여기서 cycle은 1~12라는 수치형으로 넣어진 거라.. 범주형 변수로 바꿔줘야 한다.\n\nreg &lt;- lm(lndep ~ trend + as.factor(cycle(dep)))  \nsummary(reg)\n\n\nCall:\nlm(formula = lndep ~ trend + as.factor(cycle(dep)))\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.038679 -0.018689 -0.001468  0.015185  0.057288 \n\nCoefficients:\n                         Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)             6.0641904  0.0122952 493.215  &lt; 2e-16 ***\ntrend                   0.0106603  0.0001925  55.388  &lt; 2e-16 ***\nas.factor(cycle(dep))2  0.0166091  0.0160024   1.038   0.3046    \nas.factor(cycle(dep))3  0.3169279  0.0160059  19.801  &lt; 2e-16 ***\nas.factor(cycle(dep))4  0.2311551  0.0160117  14.437  &lt; 2e-16 ***\nas.factor(cycle(dep))5  0.1490488  0.0160198   9.304 3.12e-12 ***\nas.factor(cycle(dep))6  0.1555867  0.0160302   9.706 8.32e-13 ***\nas.factor(cycle(dep))7  0.5243161  0.0160429  32.682  &lt; 2e-16 ***\nas.factor(cycle(dep))8  0.1200927  0.0160579   7.479 1.54e-09 ***\nas.factor(cycle(dep))9  0.0359244  0.0160752   2.235   0.0302 *  \nas.factor(cycle(dep))10 0.2692601  0.0160948  16.730  &lt; 2e-16 ***\nas.factor(cycle(dep))11 0.2775212  0.0161166  17.220  &lt; 2e-16 ***\nas.factor(cycle(dep))12 1.0462912  0.0161407  64.823  &lt; 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.0253 on 47 degrees of freedom\nMultiple R-squared:  0.9959,    Adjusted R-squared:  0.9948 \nF-statistic: 949.2 on 12 and 47 DF,  p-value: &lt; 2.2e-16\n\n\n근데 위에 좀 안이쁘니까 밑에 tmp.data라는 함수를 만들자.\n\ntmp.data &lt;- data.frame(\n    dep = z,\n    lndep = log(z),\n    day = seq(ymd(\"1984-01-01\"), by = \"1 month\", length.out = length(z)),\n    s = as.factor(cycle(dep)),\n    t = 1:length(z)\n    )\nhead(tmp.data)\n\n\nA data.frame: 6 × 5\n\n\n\ndep\nlndep\nday\ns\nt\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;date&gt;\n&lt;fct&gt;\n&lt;int&gt;\n\n\n\n\n1\n423\n6.047372\n1984-01-01\n1\n1\n\n\n2\n458\n6.126869\n1984-02-01\n2\n2\n\n\n3\n607\n6.408529\n1984-03-01\n3\n3\n\n\n4\n564\n6.335054\n1984-04-01\n4\n4\n\n\n5\n536\n6.284134\n1984-05-01\n5\n5\n\n\n6\n536\n6.284134\n1984-06-01\n6\n6\n\n\n\n\n\n\n가변수를 넣을 때는 factor로!!\n\n\nreg &lt;- lm(lndep ~ t+s, tmp.data)      \nsummary(reg)\n\n\nCall:\nlm(formula = lndep ~ t + s, data = tmp.data)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.038679 -0.018689 -0.001468  0.015185  0.057288 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 6.0641904  0.0122952 493.215  &lt; 2e-16 ***\nt           0.0106603  0.0001925  55.388  &lt; 2e-16 ***\ns2          0.0166091  0.0160024   1.038   0.3046    \ns3          0.3169279  0.0160059  19.801  &lt; 2e-16 ***\ns4          0.2311551  0.0160117  14.437  &lt; 2e-16 ***\ns5          0.1490488  0.0160198   9.304 3.12e-12 ***\ns6          0.1555867  0.0160302   9.706 8.32e-13 ***\ns7          0.5243161  0.0160429  32.682  &lt; 2e-16 ***\ns8          0.1200927  0.0160579   7.479 1.54e-09 ***\ns9          0.0359244  0.0160752   2.235   0.0302 *  \ns10         0.2692601  0.0160948  16.730  &lt; 2e-16 ***\ns11         0.2775212  0.0161166  17.220  &lt; 2e-16 ***\ns12         1.0462912  0.0161407  64.823  &lt; 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.0253 on 47 degrees of freedom\nMultiple R-squared:  0.9959,    Adjusted R-squared:  0.9948 \nF-statistic: 949.2 on 12 and 47 DF,  p-value: &lt; 2.2e-16\n\n\n\n강의자료에서 있었던 제약조건을 생각하자.\n\nbeta0=0/beta1=0/sum_beta=0\n위의 제약조건에서 아무런 내용이 없으면 beta1=0을 default로 설정함\n\n위의 summary 1월이 기준이므로\n\ns2의 0.0166091 는 1월보다 이만큼 더 팔린다는 뜻이고..\ns3의 0.3169279 는 1월보다 0.3만큼 더 팔린다는 뜻!\n다른 것들은 거의 다 유의한데 s2는 별로 유의하지 않다. -&gt; 왜? 1월과 2월의 시간차가 별로 없기 떄문에.. 1월보다 이만큼 더 팔리긴 하지만 통계적으로 더 유의하진 않아~ 라는 말.\n\nreg2 &lt;- lm(lndep ~ 0+t+s, tmp.data)  # 제약조건에서 beta0=0으로 놓는다는 뜻. 절편을 0으로!      \nsummary(reg2)\n\n\nCall:\nlm(formula = lndep ~ 0 + t + s, data = tmp.data)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.038679 -0.018689 -0.001468  0.015185  0.057288 \n\nCoefficients:\n     Estimate Std. Error t value Pr(&gt;|t|)    \nt   0.0106603  0.0001925   55.39   &lt;2e-16 ***\ns1  6.0641904  0.0122952  493.21   &lt;2e-16 ***\ns2  6.0807995  0.0123718  491.50   &lt;2e-16 ***\ns3  6.3811183  0.0124509  512.50   &lt;2e-16 ***\ns4  6.2953455  0.0125325  502.32   &lt;2e-16 ***\ns5  6.2132392  0.0126164  492.47   &lt;2e-16 ***\ns6  6.2197771  0.0127027  489.64   &lt;2e-16 ***\ns7  6.5885065  0.0127914  515.08   &lt;2e-16 ***\ns8  6.1842831  0.0128823  480.06   &lt;2e-16 ***\ns9  6.1001148  0.0129754  470.13   &lt;2e-16 ***\ns10 6.3334505  0.0130707  484.56   &lt;2e-16 ***\ns11 6.3417116  0.0131681  481.60   &lt;2e-16 ***\ns12 7.1104816  0.0132676  535.93   &lt;2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.0253 on 47 degrees of freedom\nMultiple R-squared:      1, Adjusted R-squared:      1 \nF-statistic: 3.199e+05 on 13 and 47 DF,  p-value: &lt; 2.2e-16\n\n\n\nintersept가 없어짐!\n\ns1이 의미하는 것은 1월 판매량의 평균\ns2가 의미하는 것은 2월 판매량의 평균\n모형의 유의하냐는 0이냐 그걸로 하는거라서 다 유의하다 나옴!\n위에랑 차이는 계수 해석 조심하기.\n\nreg3 &lt;- lm(lndep ~ t+s, tmp.data,\n           contrast = list(s=\"contr.sum\"))\nsummary(reg3)\n\n\nCall:\nlm(formula = lndep ~ t + s, data = tmp.data, contrasts = list(s = \"contr.sum\"))\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.038679 -0.018689 -0.001468  0.015185  0.057288 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  6.3260849  0.0067177 941.703  &lt; 2e-16 ***\nt            0.0106603  0.0001925  55.388  &lt; 2e-16 ***\ns1          -0.2618944  0.0108845 -24.061  &lt; 2e-16 ***\ns2          -0.2452853  0.0108675 -22.571  &lt; 2e-16 ***\ns3           0.0550335  0.0108538   5.070 6.63e-06 ***\ns4          -0.0307393  0.0108436  -2.835  0.00674 ** \ns5          -0.1128456  0.0108368 -10.413 8.53e-14 ***\ns6          -0.1063078  0.0108334  -9.813 5.87e-13 ***\ns7           0.2624217  0.0108334  24.223  &lt; 2e-16 ***\ns8          -0.1418018  0.0108368 -13.085  &lt; 2e-16 ***\ns9          -0.2259700  0.0108436 -20.839  &lt; 2e-16 ***\ns10          0.0073656  0.0108538   0.679  0.50071    \ns11          0.0156268  0.0108675   1.438  0.15708    \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.0253 on 47 degrees of freedom\nMultiple R-squared:  0.9959,    Adjusted R-squared:  0.9948 \nF-statistic: 949.2 on 12 and 47 DF,  p-value: &lt; 2.2e-16\n\n\n\n위의 코드는 제약 조건 중에 sum_beta=0인것을 의미함\n엇? s12가 없다! s12 = -(s1+ … + s11) 로 해석하면 됨\n\n\nhead(data.frame(hat_y1 = fitted(reg),\n                hat_y2 = fitted(reg2),\n                hat_y3 = fitted(reg3)))\n\n\nA data.frame: 6 × 3\n\n\n\nhat_y1\nhat_y2\nhat_y3\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n6.074851\n6.074851\n6.074851\n\n\n2\n6.102120\n6.102120\n6.102120\n\n\n3\n6.413099\n6.413099\n6.413099\n\n\n4\n6.337987\n6.337987\n6.337987\n\n\n5\n6.266541\n6.266541\n6.266541\n\n\n6\n6.283739\n6.283739\n6.283739\n\n\n\n\n\n어떤 제약조건을 써도 fitted의 값은 똑같다! 계수 설명만 다름\n\nplot(lndep ~ day, tmp.data, type='l')\nlines(tmp.data$day, fitted(reg), col='darkorange', lty=2, lwd=2)\n\n\n\n\n\n실제값과 fittied value가 유사하게 가는 걸 확인할 수 있다."
  },
  {
    "objectID": "posts/[TS] 02_2.html#강의-자료",
    "href": "posts/[TS] 02_2.html#강의-자료",
    "title": "[TS] CH02. 실습2(추세모형)",
    "section": "강의 자료",
    "text": "강의 자료\n\ntmp.data &lt;- data.frame(\n day = seq(ymd(\"1984-01-01\"),\n by='1 month', length.out=length(z)),\n z=z\n)\n\n\nhead(tmp.data)\n\n\nA data.frame: 6 × 2\n\n\n\nday\nz\n\n\n\n&lt;date&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n1984-01-01\n423\n\n\n2\n1984-02-01\n458\n\n\n3\n1984-03-01\n607\n\n\n4\n1984-04-01\n564\n\n\n5\n1984-05-01\n536\n\n\n6\n1984-06-01\n536\n\n\n\n\n\n\ntmp.data$lndep &lt;- log(z) #로그변환\ntmp.data$y &lt;- as.factor(as.integer(cycle(dep))) #지시함수로 사용할 주기\ntmp.data$trend &lt;- 1:length(z) #시간 변수 생성\n\n\nhead(tmp.data)\n\n\nA data.frame: 6 × 5\n\n\n\nday\nz\nlndep\ny\ntrend\n\n\n\n&lt;date&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;fct&gt;\n&lt;int&gt;\n\n\n\n\n1\n1984-01-01\n423\n6.047372\n1\n1\n\n\n2\n1984-02-01\n458\n6.126869\n2\n2\n\n\n3\n1984-03-01\n607\n6.408529\n3\n3\n\n\n4\n1984-04-01\n564\n6.335054\n4\n4\n\n\n5\n1984-05-01\n536\n6.284134\n5\n5\n\n\n6\n1984-06-01\n536\n6.284134\n6\n6\n\n\n\n\n\n\np1 &lt;- ggplot(tmp.data, aes(day, z)) +\n geom_line(col='skyblue', lwd=2) +\n geom_point(col='steelblue', cex=1.5)+\n scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y-%m\") +\n ggtitle(\"백화점 월별 매출액의 시계열그림\") +\n theme_bw()+\n theme(axis.text = element_text(size =12),\n       axis.title = element_blank(),\n       title = element_text(size = 15))\n\np2 &lt;- ggplot(tmp.data, aes(day, lndep)) +\n geom_line(col='skyblue', lwd=2) +\n geom_point(col='steelblue', cex=1.5)+\n scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y-%m\") +\n ggtitle(\"로그변환 후 백화점 월별 매출액의 시계열그림\") +\n theme_bw()+\n theme(axis.text = element_text(size =12),\n       axis.title=element_blank(),\n       title = element_text(size = 15))\n\ngrid.arrange(p1,p2,nrow=2)\n\n\n\n\n\npar(mfrow=c(2,1)) \nplot(z~day, tmp.data, type='l')\nplot(log(z)~day, tmp.data, type='l')\n\n\n\n\n- 모형 적합: \\(log(Z_t) = \\beta_{trend}t + \\beta_1 I_{t,1} + \\dots + \\beta_{12} I_{t,12} + \\epsilon_t (\\beta_0=0)\\)\n\nreg &lt;- lm(lndep ~ 0 + trend+y, data=tmp.data ) #beta_0 = 0\nsummary(reg)\n\n\nCall:\nlm(formula = lndep ~ 0 + trend + y, data = tmp.data)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.038679 -0.018689 -0.001468  0.015185  0.057288 \n\nCoefficients:\n       Estimate Std. Error t value Pr(&gt;|t|)    \ntrend 0.0106603  0.0001925   55.39   &lt;2e-16 ***\ny1    6.0641904  0.0122952  493.21   &lt;2e-16 ***\ny2    6.0807995  0.0123718  491.50   &lt;2e-16 ***\ny3    6.3811183  0.0124509  512.50   &lt;2e-16 ***\ny4    6.2953455  0.0125325  502.32   &lt;2e-16 ***\ny5    6.2132392  0.0126164  492.47   &lt;2e-16 ***\ny6    6.2197771  0.0127027  489.64   &lt;2e-16 ***\ny7    6.5885065  0.0127914  515.08   &lt;2e-16 ***\ny8    6.1842831  0.0128823  480.06   &lt;2e-16 ***\ny9    6.1001148  0.0129754  470.13   &lt;2e-16 ***\ny10   6.3334505  0.0130707  484.56   &lt;2e-16 ***\ny11   6.3417116  0.0131681  481.60   &lt;2e-16 ***\ny12   7.1104816  0.0132676  535.93   &lt;2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.0253 on 47 degrees of freedom\nMultiple R-squared:      1, Adjusted R-squared:      1 \nF-statistic: 3.199e+05 on 13 and 47 DF,  p-value: &lt; 2.2e-16\n\n\n- 모형 적합: \\(log(Z_t) = \\beta_0+ \\beta_{trend}t + \\beta_2 I_{t,2} + \\dots + \\beta_{12} I_{t,12} + \\epsilon_t (\\beta_1=0)\\)\n\nreg2 &lt;- lm(lndep ~ trend+y, data=tmp.data ) #beta_1=0\nsummary(reg2)\n\n\nCall:\nlm(formula = lndep ~ trend + y, data = tmp.data)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.038679 -0.018689 -0.001468  0.015185  0.057288 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 6.0641904  0.0122952 493.215  &lt; 2e-16 ***\ntrend       0.0106603  0.0001925  55.388  &lt; 2e-16 ***\ny2          0.0166091  0.0160024   1.038   0.3046    \ny3          0.3169279  0.0160059  19.801  &lt; 2e-16 ***\ny4          0.2311551  0.0160117  14.437  &lt; 2e-16 ***\ny5          0.1490488  0.0160198   9.304 3.12e-12 ***\ny6          0.1555867  0.0160302   9.706 8.32e-13 ***\ny7          0.5243161  0.0160429  32.682  &lt; 2e-16 ***\ny8          0.1200927  0.0160579   7.479 1.54e-09 ***\ny9          0.0359244  0.0160752   2.235   0.0302 *  \ny10         0.2692601  0.0160948  16.730  &lt; 2e-16 ***\ny11         0.2775212  0.0161166  17.220  &lt; 2e-16 ***\ny12         1.0462912  0.0161407  64.823  &lt; 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.0253 on 47 degrees of freedom\nMultiple R-squared:  0.9959,    Adjusted R-squared:  0.9948 \nF-statistic: 949.2 on 12 and 47 DF,  p-value: &lt; 2.2e-16\n\n\n\ncontrasts(tmp.data$y)\n\n\nA matrix: 12 × 11 of type dbl\n\n\n\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n2\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n3\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n4\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n5\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n\n\n6\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n\n\n7\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n\n\n8\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n\n\n9\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n\n\n10\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n\n\n11\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n\n\n12\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n\n\n\n\n\n- 모형 적합: \\(log(Z_t) = \\beta_0+ \\beta_{trend}t + \\beta_1 I_{t,1} + \\dots + \\beta_{11} I_{t,11} + \\epsilon_t (\\sum_{i=1}^{12} \\beta_i=0)\\)\n\nreg3 &lt;- lm(lndep ~ trend+y, data=tmp.data,\n contrasts = list(y = \"contr.sum\")) #sum beta_i = 0\n# b1 + ... +b12 = 0 =&gt; b12 = -(b1+...+b11)\nsummary(reg3)\n\n\nCall:\nlm(formula = lndep ~ trend + y, data = tmp.data, contrasts = list(y = \"contr.sum\"))\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.038679 -0.018689 -0.001468  0.015185  0.057288 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  6.3260849  0.0067177 941.703  &lt; 2e-16 ***\ntrend        0.0106603  0.0001925  55.388  &lt; 2e-16 ***\ny1          -0.2618944  0.0108845 -24.061  &lt; 2e-16 ***\ny2          -0.2452853  0.0108675 -22.571  &lt; 2e-16 ***\ny3           0.0550335  0.0108538   5.070 6.63e-06 ***\ny4          -0.0307393  0.0108436  -2.835  0.00674 ** \ny5          -0.1128456  0.0108368 -10.413 8.53e-14 ***\ny6          -0.1063078  0.0108334  -9.813 5.87e-13 ***\ny7           0.2624217  0.0108334  24.223  &lt; 2e-16 ***\ny8          -0.1418018  0.0108368 -13.085  &lt; 2e-16 ***\ny9          -0.2259700  0.0108436 -20.839  &lt; 2e-16 ***\ny10          0.0073656  0.0108538   0.679  0.50071    \ny11          0.0156268  0.0108675   1.438  0.15708    \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.0253 on 47 degrees of freedom\nMultiple R-squared:  0.9959,    Adjusted R-squared:  0.9948 \nF-statistic: 949.2 on 12 and 47 DF,  p-value: &lt; 2.2e-16\n\n\n\nhead(data.frame(hat_y1 = fitted(reg),\n hat_y2 = fitted(reg2),\n hat_y3 = fitted(reg3)))\n\n\nA data.frame: 6 × 3\n\n\n\nhat_y1\nhat_y2\nhat_y3\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n6.074851\n6.074851\n6.074851\n\n\n2\n6.102120\n6.102120\n6.102120\n\n\n3\n6.413099\n6.413099\n6.413099\n\n\n4\n6.337987\n6.337987\n6.337987\n\n\n5\n6.266541\n6.266541\n6.266541\n\n\n6\n6.283739\n6.283739\n6.283739\n\n\n\n\n\n\nplot(lndep~day, tmp.data,\n main = 'observation vs. fitted value',\n xlab=\"\", ylab=\"\",\n type='l',\n col='skyblue',\n lwd=2, cex.axis=2, cex.main=2) +\n points(lndep~day, tmp.data, col=\"steelblue\", cex=2, pch=16) +\n lines(tmp.data$day, fitted(reg), col='red', lty=2, lwd=2)"
  },
  {
    "objectID": "posts/[TS] 02_2.html#잔차-분석",
    "href": "posts/[TS] 02_2.html#잔차-분석",
    "title": "[TS] CH02. 실습2(추세모형)",
    "section": "잔차 분석",
    "text": "잔차 분석\n\nplot(tmp.data$day, resid(reg),\n pch=16, cex=2, xaxt='n', type='b',\n xlab=\"\", ylab=\"\", main=\"잔차의 시계열 그림\", cex.main=2)\nabline(h=0, lty=2, lwd=2)"
  },
  {
    "objectID": "posts/[TS] 02_2.html#독립성-검정-dw-test",
    "href": "posts/[TS] 02_2.html#독립성-검정-dw-test",
    "title": "[TS] CH02. 실습2(추세모형)",
    "section": "독립성 검정 : dW test",
    "text": "독립성 검정 : dW test\n\ndwtest(reg, , alternative=\"two.sided\")\n\n\n    Durbin-Watson test\n\ndata:  reg\nDW = 0.82642, p-value = 4.781e-06\nalternative hypothesis: true autocorrelation is not 0\n\n\n유의확률도 작고 기각할수 있고 양의 상관관계..\n\ndwtest(reg)\n\n\n    Durbin-Watson test\n\ndata:  reg\nDW = 0.82642, p-value = 2.39e-06\nalternative hypothesis: true autocorrelation is greater than 0"
  },
  {
    "objectID": "posts/[TS] 02_2.html#정규분포-검정-shapiro-wilk-test",
    "href": "posts/[TS] 02_2.html#정규분포-검정-shapiro-wilk-test",
    "title": "[TS] CH02. 실습2(추세모형)",
    "section": "정규분포 검정 (shapiro-wilk test)",
    "text": "정규분포 검정 (shapiro-wilk test)\n- 가설\n\\(H_0\\): 정규분포를 따른다. VS \\(H_1\\): 정규분포를 따르지 않는다.\n\nhist(resid(reg))\n\n\n\n\n\nshapiro.test(resid(reg)) #H_0 : 정규분포를 따른다.\n\n\n    Shapiro-Wilk normality test\n\ndata:  resid(reg)\nW = 0.97114, p-value = 0.1659\n\n\n정규분포를 따른다고 보자."
  },
  {
    "objectID": "posts/[TS] 02_2.html#등분산성검정-breuschpagan-test",
    "href": "posts/[TS] 02_2.html#등분산성검정-breuschpagan-test",
    "title": "[TS] CH02. 실습2(추세모형)",
    "section": "등분산성검정 (Breusch–Pagan test)",
    "text": "등분산성검정 (Breusch–Pagan test)\n- 가설\n\\(H_0\\): 등분산 VS \\(H_1\\): 이분산\n\nbptest(reg)\n\n\n    studentized Breusch-Pagan test\n\ndata:  reg\nBP = 8.1109, df = 12, p-value = 0.7764\n\n\n등분산성도 괜찮아 보인다."
  },
  {
    "objectID": "posts/[TS] 02_2.html#적립값에-대한-mse-구하기",
    "href": "posts/[TS] 02_2.html#적립값에-대한-mse-구하기",
    "title": "[TS] CH02. 실습2(추세모형)",
    "section": "적립값에 대한 MSE 구하기",
    "text": "적립값에 대한 MSE 구하기\n\\[MSE=\\frac{1}{n} \\sum_{t=1}^n (Z_t - \\hat{Z_t})^2\\]\n오차항 제곱합에 대한 평균. 실제값과 평균값에 대하 차이를 n으로 나눈값\n위에서 그림그릴때는 log값으로 했던 거니까, 실제로 실제 10년후? 20년후?를 생각할 때는 exp을 취해서 비교해주는게 원래 맞음\nMSE! 그래서 밑에서 exp값 취해줌\n\nmse1 = sum((tmp.data$dep - exp(fitted(reg)))^2)/60\n\n\nmse1\n\n353.669083494937\n\n\n\nhat_z = exp(fitted(reg))\nhead(hat_z)\n\n1434.7845800028582446.8040317547143609.7805671252184565.6562966764595526.6523278736366535.788096351339\n\n\n\nmse_reg_indicator &lt;- sum((z- hat_z)^2)/length(z)\nmse_reg_indicator\n\n353.669083494948"
  },
  {
    "objectID": "posts/[TS] 02_2.html#백화점-매출액---삼각함수-이용",
    "href": "posts/[TS] 02_2.html#백화점-매출액---삼각함수-이용",
    "title": "[TS] CH02. 실습2(추세모형)",
    "section": "백화점 매출액 - 삼각함수 이용",
    "text": "백화점 매출액 - 삼각함수 이용\n- 데이터 생성\n\ntmp.data_2 &lt;- data.frame(\n lndep = tmp.data$lndep,\n trend = tmp.data$trend)\n\n\nhead(tmp.data_2)\n\n\nA data.frame: 6 × 2\n\n\n\nlndep\ntrend\n\n\n\n&lt;dbl&gt;\n&lt;int&gt;\n\n\n\n\n1\n6.047372\n1\n\n\n2\n6.126869\n2\n\n\n3\n6.408529\n3\n\n\n4\n6.335054\n4\n\n\n5\n6.284134\n5\n\n\n6\n6.284134\n6\n\n\n\n\n\n\ndt1 &lt;- Reduce(cbind.data.frame, lapply(as.list(1:5), function(i) sin(2*pi*i/12*tmp.data_2$trend)))\nhead(dt1)\n\n\nA data.frame: 6 × 5\n\n\n\ninit\nx[[i]]\nx[[i]]\nx[[i]]\nx[[i]]\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n5.000000e-01\n8.660254e-01\n1.000000e+00\n8.660254e-01\n5.000000e-01\n\n\n2\n8.660254e-01\n8.660254e-01\n1.224647e-16\n-8.660254e-01\n-8.660254e-01\n\n\n3\n1.000000e+00\n1.224647e-16\n-1.000000e+00\n-2.449294e-16\n1.000000e+00\n\n\n4\n8.660254e-01\n-8.660254e-01\n-2.449294e-16\n8.660254e-01\n-8.660254e-01\n\n\n5\n5.000000e-01\n-8.660254e-01\n1.000000e+00\n-8.660254e-01\n5.000000e-01\n\n\n6\n1.224647e-16\n-2.449294e-16\n3.673940e-16\n-4.898587e-16\n6.123234e-16\n\n\n\n\n\n위 dataframe에서 init:사인 주기가 12인것. x[[i]]: 사인 주기가 6인거.. 주기 4 주기 3 주기 2.5? 인거까지 데이터 프레임이 들어감..\n\nnames(dt1) &lt;- paste(\"sin\", c(12,6,4,3,2.4), sep=\"_\")\nhead(dt1)\n\n\nA data.frame: 6 × 5\n\n\n\nsin_12\nsin_6\nsin_4\nsin_3\nsin_2.4\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n5.000000e-01\n8.660254e-01\n1.000000e+00\n8.660254e-01\n5.000000e-01\n\n\n2\n8.660254e-01\n8.660254e-01\n1.224647e-16\n-8.660254e-01\n-8.660254e-01\n\n\n3\n1.000000e+00\n1.224647e-16\n-1.000000e+00\n-2.449294e-16\n1.000000e+00\n\n\n4\n8.660254e-01\n-8.660254e-01\n-2.449294e-16\n8.660254e-01\n-8.660254e-01\n\n\n5\n5.000000e-01\n-8.660254e-01\n1.000000e+00\n-8.660254e-01\n5.000000e-01\n\n\n6\n1.224647e-16\n-2.449294e-16\n3.673940e-16\n-4.898587e-16\n6.123234e-16\n\n\n\n\n\n\nplot(tmp.data$trend, dt1$sin_12, type='l')\n\n\n\n\n\ndt2 &lt;- Reduce(cbind.data.frame, lapply(as.list(1:5), function(i) cos(2*pi*i/12*tmp.data_2$trend)))\nnames(dt2) &lt;- paste(\"cos\", c(12,6,4,3,2.4), sep=\"_\")\n\n\ntmp.data_3 &lt;- cbind.data.frame(tmp.data_2, dt1, dt2)\nhead(tmp.data_3)\n\n\nA data.frame: 6 × 12\n\n\n\nlndep\ntrend\nsin_12\nsin_6\nsin_4\nsin_3\nsin_2.4\ncos_12\ncos_6\ncos_4\ncos_3\ncos_2.4\n\n\n\n&lt;dbl&gt;\n&lt;int&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n6.047372\n1\n5.000000e-01\n8.660254e-01\n1.000000e+00\n8.660254e-01\n5.000000e-01\n8.660254e-01\n0.5\n6.123234e-17\n-0.5\n-8.660254e-01\n\n\n2\n6.126869\n2\n8.660254e-01\n8.660254e-01\n1.224647e-16\n-8.660254e-01\n-8.660254e-01\n5.000000e-01\n-0.5\n-1.000000e+00\n-0.5\n5.000000e-01\n\n\n3\n6.408529\n3\n1.000000e+00\n1.224647e-16\n-1.000000e+00\n-2.449294e-16\n1.000000e+00\n6.123234e-17\n-1.0\n-1.836970e-16\n1.0\n3.061617e-16\n\n\n4\n6.335054\n4\n8.660254e-01\n-8.660254e-01\n-2.449294e-16\n8.660254e-01\n-8.660254e-01\n-5.000000e-01\n-0.5\n1.000000e+00\n-0.5\n-5.000000e-01\n\n\n5\n6.284134\n5\n5.000000e-01\n-8.660254e-01\n1.000000e+00\n-8.660254e-01\n5.000000e-01\n-8.660254e-01\n0.5\n3.061617e-16\n-0.5\n8.660254e-01\n\n\n6\n6.284134\n6\n1.224647e-16\n-2.449294e-16\n3.673940e-16\n-4.898587e-16\n6.123234e-16\n-1.000000e+00\n1.0\n-1.000000e+00\n1.0\n-1.000000e+00\n\n\n\n\n\n- 모형 적합\n\\[Z_t = \\beta_0 + \\beta_1 t + \\sum_{i=1}^5  \\{ \\beta_{1,i} sin \\left( \\frac{2 \\pi ti}{12} \\right) + \\beta_{2,i} cos \\left( \\frac{2\\pi ti}{12} \\right) \\}\\]\n\nreg_sin &lt;- lm(lndep ~., data=tmp.data_3)\nsummary(reg_sin)\n\n\nCall:\nlm(formula = lndep ~ ., data = tmp.data_3)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.08232 -0.04855  0.00972  0.04645  0.08527 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  6.3237250  0.0148062 427.100  &lt; 2e-16 ***\ntrend        0.0107376  0.0004242  25.315  &lt; 2e-16 ***\nsin_12      -0.0277129  0.0103066  -2.689 0.009829 ** \nsin_6       -0.0382551  0.0102107  -3.747 0.000481 ***\nsin_4       -0.1555546  0.0101931 -15.261  &lt; 2e-16 ***\nsin_3        0.0666506  0.0101872   6.543 3.70e-08 ***\nsin_2.4      0.0128922  0.0101849   1.266 0.211691    \ncos_12       0.0857900  0.0101931   8.416 5.21e-11 ***\ncos_6        0.1675743  0.0101931  16.440  &lt; 2e-16 ***\ncos_4        0.1592698  0.0101931  15.625  &lt; 2e-16 ***\ncos_3        0.1267107  0.0101931  12.431  &lt; 2e-16 ***\ncos_2.4      0.2000603  0.0101931  19.627  &lt; 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.05578 on 48 degrees of freedom\nMultiple R-squared:  0.9796,    Adjusted R-squared:  0.9749 \nF-statistic: 209.5 on 11 and 48 DF,  p-value: &lt; 2.2e-16\n\n\n\nplot(lndep~tmp.data$day, tmp.data_3,\n     main = 'observation vs. fitted value',\n     xlab=\"\", ylab=\"\",\n     type='l',\n     col='skyblue',\n     lwd=2, cex.axis=2, cex.main=2) +\n points(lndep~day, tmp.data, col=\"steelblue\", cex=2, pch=16) +\n lines(tmp.data$day, fitted(reg_sin), col='red', lty=2, lwd=2)"
  },
  {
    "objectID": "posts/[TS] 02_2.html#잔차분석",
    "href": "posts/[TS] 02_2.html#잔차분석",
    "title": "[TS] CH02. 실습2(추세모형)",
    "section": "잔차분석",
    "text": "잔차분석\n\nplot(tmp.data$day, resid(reg_sin),\n pch=16, cex=2, xaxt='n', type='b',\n xlab=\"\", ylab=\"\", main=\"잔차의 시계열 그림\", cex.main=2)\nabline(h=0, lty=2, lwd=2)\n\n\n\n\n\n음의 상관관계ㅡ"
  },
  {
    "objectID": "posts/[TS] 02_2.html#독립성검정-dw-test",
    "href": "posts/[TS] 02_2.html#독립성검정-dw-test",
    "title": "[TS] CH02. 실습2(추세모형)",
    "section": "독립성검정 : DW test",
    "text": "독립성검정 : DW test\n\n# DW tets\ndwtest(reg_sin, alternative = \"two.side\")\n\n\n    Durbin-Watson test\n\ndata:  reg_sin\nDW = 3.2703, p-value = 1.269e-06\nalternative hypothesis: true autocorrelation is not 0\n\n\n\ndwtest(reg_sin, alternative = \"less\")\n\n\n    Durbin-Watson test\n\ndata:  reg_sin\nDW = 3.2703, p-value = 6.346e-07\nalternative hypothesis: true autocorrelation is less than 0\n\n\n\nmse_reg_indicator &lt;- sum((z- hat_z)^2)/length(z)\nmse_reg_indicator\n\n353.669083494948\n\n\n\nmse_reg_sin &lt;- sum((z- exp(fitted(reg_sin)))^2)/length(z)\nmse_reg_sin\n\n1928.97637547109"
  },
  {
    "objectID": "posts/[TS] 02_2.html#예측",
    "href": "posts/[TS] 02_2.html#예측",
    "title": "[TS] CH02. 실습2(추세모형)",
    "section": "예측",
    "text": "예측\n\nnew_data &lt;- data.frame(\n     trend = 61:72,\n     y = as.factor(1:12)\n     )\nnew_data\n\n\nA data.frame: 12 × 2\n\n\ntrend\ny\n\n\n&lt;int&gt;\n&lt;fct&gt;\n\n\n\n\n61\n1\n\n\n62\n2\n\n\n63\n3\n\n\n64\n4\n\n\n65\n5\n\n\n66\n6\n\n\n67\n7\n\n\n68\n8\n\n\n69\n9\n\n\n70\n10\n\n\n71\n11\n\n\n72\n12\n\n\n\n\n\n\npredict(reg, newdata = new_data)\n\n16.714467245681126.7417366464149937.0527157220639646.9776031997019456.9061571670636566.9233552959119777.3027450158732286.9091818612991296.83567387691014107.07966982631314117.09859120927279127.87802148673723\n\n\n\nexp(predict(reg, newdata = new_data))\n\n1824.2445300719922847.03045169060231155.9938418097741072.345087383925998.40316438238361015.722332407471484.3689566024781001.427600369599930.455151751132101187.57634730933111210.26086864202122638.64679410606\n\n\n\npredict_result &lt;- as.data.frame(predict(reg, newdata = new_data, interval = \"predict\"))\n\n예측 오차\n\npredict_result$fitted_dep &lt;- exp(predict_result$fit)\npredict_result$fitted_dep_l &lt;- exp(predict_result$lwr)\npredict_result$fitted_dep_u &lt;- exp(predict_result$upr)\npredict_result\n\n\nA data.frame: 12 × 6\n\n\n\nfit\nlwr\nupr\nfitted_dep\nfitted_dep_l\nfitted_dep_u\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n6.714467\n6.656996\n6.771939\n824.2445\n778.2095\n873.0027\n\n\n2\n6.741737\n6.684265\n6.799208\n847.0305\n799.7228\n897.1365\n\n\n3\n7.052716\n6.995244\n7.110187\n1155.9938\n1091.4303\n1224.3767\n\n\n4\n6.977603\n6.920132\n7.035075\n1072.3451\n1012.4534\n1135.7797\n\n\n5\n6.906157\n6.848686\n6.963629\n998.4032\n942.6412\n1057.4637\n\n\n6\n6.923355\n6.865884\n6.980827\n1015.7223\n958.9931\n1075.8074\n\n\n7\n7.302745\n7.245274\n7.360216\n1484.3690\n1401.4653\n1572.1768\n\n\n8\n6.909182\n6.851710\n6.966653\n1001.4276\n945.4967\n1060.6671\n\n\n9\n6.835674\n6.778202\n6.893145\n930.4552\n878.4882\n985.4962\n\n\n10\n7.079670\n7.022198\n7.137141\n1187.5763\n1121.2489\n1257.8274\n\n\n11\n7.098591\n7.041120\n7.156063\n1210.2609\n1142.6664\n1281.8539\n\n\n12\n7.878021\n7.820550\n7.935493\n2638.6468\n2491.2754\n2794.7360\n\n\n\n\n\n점추정/상한/하한. 왼쪽 3개는 로그값이니까 exp취해준 오른쪽 값 3개를 봐야함!\n\nplot(z~tmp.data$trend, tmp.data,\n     main = 'observation vs. fitted value',\n     xlab=\"\", ylab=\"\",\n     xlim=c(1,72),\n     ylim=c(400,3000),\n     type='l',\n     lwd=2)\nlines(61:72, predict_result$fitted_dep, col='darkorange', lwd=2)\nlines(61:72, predict_result$fitted_dep_l, col='steelblue', lwd=2, lty=2)\nlines(61:72, predict_result$fitted_dep_u, col='steelblue', lwd=2, lty=2)"
  },
  {
    "objectID": "posts/[TS] 08.html",
    "href": "posts/[TS] 08.html",
    "title": "[TS] CH08. Fit ARIMA 실습",
    "section": "",
    "text": "options(repr.plot.width = 12, repr.plot.height = 6)"
  },
  {
    "objectID": "posts/[TS] 08.html#분해법",
    "href": "posts/[TS] 08.html#분해법",
    "title": "[TS] CH08. Fit ARIMA 실습",
    "section": "분해법",
    "text": "분해법\n\n################################\n## 회귀모형\nt &lt;- 1:length(z)\nfit1 &lt;- lm(z~t)\nsummary(fit1)\n## hat Tt = 186.35 + 4.07t\n## Zt = Tt + It = b0 + b1t + et\n\n\nCall:\nlm(formula = z ~ t)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-62.372 -17.080   0.326  16.135  63.929 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 186.34978    5.00807   37.21   &lt;2e-16 ***\nt             4.07496    0.07976   51.09   &lt;2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 25.84 on 106 degrees of freedom\nMultiple R-squared:  0.961, Adjusted R-squared:  0.9606 \nF-statistic:  2610 on 1 and 106 DF,  p-value: &lt; 2.2e-16\n\n\n\n모형이 다 유의하다\n\n\net &lt;- z - fitted(fit1) #추세 제거\nforecast::tsdisplay(et, main = \"추세를 제거한 여성근로자 수의 시계열 그림과 SACF/SPACF\")\n\n\n\n\n\n0을 중심으로 대칭인것처럼 보이지만.. 확률적 추세가 있어 보이기도 한다..\n\n\n##H0 : rho1 = ... = rho6 = 0\nBox.test(et, lag=6, type = \"Ljung-Box\")\n##H0 : rho1 = ... = rho12 = 0\nBox.test(et, lag=12, type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  et\nX-squared = 259.33, df = 6, p-value &lt; 2.2e-16\n\n\n\n    Box-Ljung test\n\ndata:  et\nX-squared = 291.08, df = 12, p-value &lt; 2.2e-16\n\n\n\npvalur가 작으니까 오차항이 WN은 아니다.\n\n\n#H0 : phi=1\nfUnitRoots::adfTest(et, lags = 0, type = \"nc\")\nfUnitRoots::adfTest(et, lags = 1, type = \"nc\")\nfUnitRoots::adfTest(et, lags = 2, type = \"nc\")\n\n\nTitle:\n Augmented Dickey-Fuller Test\n\nTest Results:\n  PARAMETER:\n    Lag Order: 0\n  STATISTIC:\n    Dickey-Fuller: -2.1707\n  P VALUE:\n    0.03095 \n\nDescription:\n Tue Nov 28 23:08:43 2023 by user: \n\n\n\nTitle:\n Augmented Dickey-Fuller Test\n\nTest Results:\n  PARAMETER:\n    Lag Order: 1\n  STATISTIC:\n    Dickey-Fuller: -2.5412\n  P VALUE:\n    0.01241 \n\nDescription:\n Tue Nov 28 23:08:43 2023 by user: \n\n\n\nTitle:\n Augmented Dickey-Fuller Test\n\nTest Results:\n  PARAMETER:\n    Lag Order: 2\n  STATISTIC:\n    Dickey-Fuller: -2.4091\n  P VALUE:\n    0.01793 \n\nDescription:\n Tue Nov 28 23:08:43 2023 by user: \n\n\n\nH0기각할 수 있다. 차분이 필요하지 않다.\n\n- \\(e_t ∼ AR(1)\\)\n\nt.test(et)\n\n\n    One Sample t-test\n\ndata:  et\nt = -1.8089e-15, df = 107, p-value = 1\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -4.906433  4.906433\nsample estimates:\n    mean of x \n-4.477064e-15 \n\n\n\n###### lm (1차추세 모형)\n###### et ~ AR(1)\nfit_et &lt;- arima(et, order=c(1,0,0),\n                 include.mean = F) ## et\nsummary(fit_et)\n\n\nCall:\narima(x = et, order = c(1, 0, 0), include.mean = F)\n\nCoefficients:\n         ar1\n      0.9077\ns.e.  0.0402\n\nsigma^2 estimated as 122.3:  log likelihood = -413.68,  aic = 831.37\n\nTraining set error measures:\n                    ME     RMSE      MAE       MPE    MAPE      MASE      ACF1\nTraining set 0.2034053 11.06091 8.125101 -113.0911 259.426 0.9717878 0.1427947\n\n\n\n파이:0.9077 &lt;- 절대값이 1보다 작으므로 정상 시계열이라고 생각할 수 있다.\n1에 가까운 값이니까. 파이^K으로 감소하니까.. 천천히 감소하는 것처럼 보임(acf그래프에서)\n\n\nlmtest::coeftest(fit_et)\n\n\nz test of coefficients:\n\n    Estimate Std. Error z value  Pr(&gt;|z|)    \nar1 0.907703   0.040184  22.588 &lt; 2.2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\n\n\n유의확률이 작게 나와서 정규분포라 하기는 어렵다.. (이상점 떄문에 꼬리)\n\n- 결정적 추세를 분해법을 사용하여 제거한 후 불규칙 성분에 대해 모형 적합 결과\n\\(Z_t = β_0 + β_1 ∗ t + e_t : \\hat Z_t = 186.35 + 4.07t\\)\n\\(e_t = ϕe_{t−1} + u_t, e_t ∼ AR(1) (μ = 0, \\hat ϕ = 0.91)\\)\n\\(u_t ∼ WN(0, σ^2)\\)\n\n#hat_zt = hat_Tt + hat_et\nhat_zt = fitted(fit) + fitted(fit_et)\nts.plot(z, hat_zt, col=1:2, lty=1:2, lwd=2)\nlegend(\"topleft\", c(\"z\",\"hat_z\"), col=1:2, lty=1:2, lwd=2)\n\n\n\n\n\n#### ut에 대한 잔차검정\nut &lt;- resid(fit_et)\nforecast::tsdisplay(ut)\n\n\n\n\n\nwn이다\n\n\n## 정규성검정\ntseries::jarque.bera.test(ut) ##JB test H0: normal\n\n\n    Jarque Bera Test\n\ndata:  ut\nX-squared = 56.855, df = 2, p-value = 4.509e-13\n\n\n\n정규분포 아니다. (오차 작은거 하나 있어서)\n\n\npar(mfrow=c(1,2))\nhist(ut)\nqqnorm(ut, pch=16)\nqqline(ut)\n\n\n\n\n\n# 잔차의 포트맨토 검정 ## H0 : rho1=...=rho_k=0\nportes::LjungBox(fit_et, lags=c(6,12,18,24))\n\n\nA matrix: 4 × 4 of type dbl\n\n\n\nlags\nstatistic\ndf\np-value\n\n\n\n\n\n6\n3.677312\n5\n0.5967438\n\n\n\n12\n6.277097\n11\n0.8542505\n\n\n\n18\n7.217262\n17\n0.9805570\n\n\n\n24\n13.987201\n23\n0.9272372\n\n\n\n\n\n\n모든 차수에서 rho=0이다. WN이다.\n\n\n## 잔차 검정\nastsa::sarima(et, p=1, d=0, q=0)\n\ninitial  value 3.242671 \niter   2 value 2.404146\niter   3 value 2.403718\niter   4 value 2.403704\niter   5 value 2.403697\niter   6 value 2.403671\niter   7 value 2.403663\niter   8 value 2.403662\niter   9 value 2.403646\niter  10 value 2.403646\niter  10 value 2.403646\niter  10 value 2.403646\nfinal  value 2.403646 \nconverged\ninitial  value 2.411035 \niter   2 value 2.410970\niter   3 value 2.410428\niter   4 value 2.410411\niter   5 value 2.410401\niter   6 value 2.410390\niter   7 value 2.410390\niter   8 value 2.410389\niter   8 value 2.410389\niter   8 value 2.410389\nfinal  value 2.410389 \nconverged\n\n\n$fit\n\nCall:\narima(x = xdata, order = c(p, d, q), seasonal = list(order = c(P, D, Q), period = S), \n    xreg = xmean, include.mean = FALSE, transform.pars = trans, fixed = fixed, \n    optim.control = list(trace = trc, REPORT = 1, reltol = tol))\n\nCoefficients:\n         ar1    xmean\n      0.9078   5.0964\ns.e.  0.0400  10.8053\n\nsigma^2 estimated as 122.1:  log likelihood = -413.57,  aic = 833.13\n\n$degrees_of_freedom\n[1] 106\n\n$ttable\n      Estimate      SE t.value p.value\nar1     0.9078  0.0400 22.6947  0.0000\nxmean   5.0964 10.8053  0.4717  0.6381\n\n$AIC\n[1] 7.714211\n\n$AICc\n[1] 7.71527\n\n$BIC\n[1] 7.788715"
  },
  {
    "objectID": "posts/[TS] 08.html#결정적-추세가-아니라-확률적-추세라고-생각하고-차분을-진행하여-추세-성분-제거한-후-적합하기",
    "href": "posts/[TS] 08.html#결정적-추세가-아니라-확률적-추세라고-생각하고-차분을-진행하여-추세-성분-제거한-후-적합하기",
    "title": "[TS] CH08. Fit ARIMA 실습",
    "section": "결정적 추세가 아니라 확률적 추세라고 생각하고 차분을 진행하여 추세 성분 제거한 후 적합하기",
    "text": "결정적 추세가 아니라 확률적 추세라고 생각하고 차분을 진행하여 추세 성분 제거한 후 적합하기\n\n## 차분\ndiff_z = diff(z)\nforecast::tsdisplay(diff_z)\n\n\n\n\n\n차분한 데이터가 WN이다.\n\n\nBox.test(diff(z), lag=6, type = \"Ljung-Box\")\nBox.test(diff(z), lag=12, type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  diff(z)\nX-squared = 4.5688, df = 6, p-value = 0.6002\n\n\n\n    Box-Ljung test\n\ndata:  diff(z)\nX-squared = 7.895, df = 12, p-value = 0.7933\n\n\n\nt.test(diff(z))\n\n\n    One Sample t-test\n\ndata:  diff(z)\nt = 3.8382, df = 106, p-value = 0.0002111\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n 2.037736 6.392171\nsample estimates:\nmean of x \n 4.214953 \n\n\n\n0은 좀 아닌거 같다..?\n\n\n# Zt ~ radomwalk, ARIMA(0,1,0) with drift\n## 모형 ARIMA(0,1,0)\nfit &lt;- arima(z,order=c(0,1,0))\nsummary(fit)\n\n\nCall:\narima(x = z, order = c(0, 1, 0))\n\n\nsigma^2 estimated as 145.6:  log likelihood = -418.3,  aic = 838.6\n\nTraining set error measures:\n                   ME     RMSE      MAE      MPE     MAPE      MASE       ACF1\nTraining set 4.177926 12.01043 9.085333 0.990671 2.414276 0.9909589 0.09736789\n\n\n\\(Z_t = Z_{t−1} + ε_t\\): random walk\n\\(Z_t = δ + Z_{t−1} + ε_t\\): random walk with drift\n\\((1 − B)Z_t = δ + ϵ_t\\) : 모형에 차분한 데이터를 넣어줌.\n\nfit2 &lt;- arima(diff_z, order=c(0,0,0))   #알아서 mean을 적합해줌\nsummary(fit2)\n\n\nCall:\narima(x = diff_z, order = c(0, 0, 0))\n\nCoefficients:\n      intercept\n          4.215\ns.e.      1.093\n\nsigma^2 estimated as 127.8:  log likelihood = -411.34,  aic = 826.68\n\nTraining set error measures:\n                       ME     RMSE      MAE  MPE MAPE      MASE       ACF1\nTraining set 2.091723e-15 11.30629 8.354441 -Inf  Inf 0.7330884 0.09829173\n\n\n- 차분을 이용하여 적합한 최종 모형\n\\(Z_t = δ + Z_{t−1} + ε_t\\): random walk with drift\n\\(ε_t ∼ WN(0, σ^2)\\)\n\\(\\hat δ = 4.215, \\hat σ^2 = 127.8\\)\n\nAIC가 더 작아졌다. drift가 있는 모형이 더 좋다\n\n\n### 잔차검정\nresid = resid(fit2)\nforecast::tsdisplay(resid)\n\n\n\n\n\n## 정규성검정\ntseries::jarque.bera.test(resid) ##JB test H0: normal\n\n\n    Jarque Bera Test\n\ndata:  resid\nX-squared = 40.633, df = 2, p-value = 1.502e-09\n\n\n\npar(mfrow=c(1,2))\nhist(resid)\nqqnorm(resid)\nqqline(resid)\n\n\n\n\n\n# 잔차의 포트맨토 검정 ## H0 : rho1=...=rho_k=0\nportes::LjungBox(fit_et, lags=c(6,12,18,24))\n\n\nA matrix: 4 × 4 of type dbl\n\n\n\nlags\nstatistic\ndf\np-value\n\n\n\n\n\n6\n3.677312\n5\n0.5967438\n\n\n\n12\n6.277097\n11\n0.8542505\n\n\n\n18\n7.217262\n17\n0.9805570\n\n\n\n24\n13.987201\n23\n0.9272372\n\n\n\n\n\n\n## 잔차 검정\nastsa::sarima(z, p=0, d=1, q=0)\n\ninitial  value 2.425360 \niter   1 value 2.425360\nfinal  value 2.425360 \nconverged\ninitial  value 2.425360 \niter   1 value 2.425360\nfinal  value 2.425360 \nconverged\n\n\n$fit\n\nCall:\narima(x = xdata, order = c(p, d, q), seasonal = list(order = c(P, D, Q), period = S), \n    xreg = constant, transform.pars = trans, fixed = fixed, optim.control = list(trace = trc, \n        REPORT = 1, reltol = tol))\n\nCoefficients:\n      constant\n         4.215\ns.e.     1.093\n\nsigma^2 estimated as 127.8:  log likelihood = -411.34,  aic = 826.68\n\n$degrees_of_freedom\n[1] 106\n\n$ttable\n         Estimate    SE t.value p.value\nconstant    4.215 1.093  3.8562   2e-04\n\n$AIC\n[1] 7.725979\n\n$AICc\n[1] 7.726336\n\n$BIC\n[1] 7.775939\n\n\n\n\n\n\nastsa::sarima.for(z, n.ahead=12, p=0, d=1, q=0)\n\n\n    $pred\n        A Time Series:\n671.21495327103675.429906542061679.644859813091683.859813084122688.074766355152692.289719626183696.504672897213700.719626168244704.934579439274709.149532710305713.364485981335717.579439252366\n\n    $se\n        A Time Series:\n11.30629469650315.989515299981619.583076859689822.61258939300625.281643515026127.69465288796829.913644016555531.979030599963133.91888408950935.753643138031737.498737277485739.1661537193795"
  },
  {
    "objectID": "posts/[TS] 09.html",
    "href": "posts/[TS] 09.html",
    "title": "[TS] 09. Forecast 실습",
    "section": "",
    "text": "options(repr.plot.width = 12, repr.plot.height = 6)\n\n\nEX 8.7 모의 실험 데이터\n\ngetwd()\n\n'/home/coco/Dropbox/Scribbling/posts'\n\n\n\nz &lt;- scan(\"eg8_7.txt\")\nforecast::tsdisplay(z)\n\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n\n\n\n\n\n\n\n평균이 20정도로 움직이는 정상 시계열로 보인다. —&gt; AR(1)모형\n\n\nforecast::ggtsdisplay(z,\n        smooth=T)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nsmooth=T를 쓰면 추세가 있는지 확인하는 파란 선이 생긴다.\n\n\nfit &lt;- arima(z, order=c(1,0,0), method='ML')\nfit\n\n\nCall:\narima(x = z, order = c(1, 0, 0), method = \"ML\")\n\nCoefficients:\n          ar1  intercept\n      -0.6715    19.8312\ns.e.   0.0728     0.1776\n\nsigma^2 estimated as 8.744:  log likelihood = -250.61,  aic = 507.22\n\n\n\nmean(z)\n\n19.832691\n\n\n\nintercept는 delta가 아니라 mu이다.\n\n\\(\\hat Z_n(l) = \\hat μ + \\hat ϕ^l(Z_n − \\hat μ)\\)\n\nlength(z)\n\n100\n\n\n- 예측하는 함수\n\n모형을 기준으로 25개를 예측할거야!\n\n\nforecast_fit &lt;- forecast::forecast(fit, 25) #MMSE : zn(l) = mu + phi^l*(zn-mu), l=1,...,25\nforecast_fit\n\n    Point Forecast    Lo 80    Hi 80    Lo 95    Hi 95\n101       20.82225 17.03269 24.61181 15.02662 26.61788\n102       19.16558 14.60082 23.73034 12.18439 26.14678\n103       20.27811 15.40393 25.15229 12.82369 27.73253\n104       19.53100 14.52353 24.53847 11.87273 27.18926\n105       20.03272 14.96628 25.09915 12.28427 27.78116\n106       19.69579 14.60299 24.78859 11.90702 27.48456\n107       19.92205 14.81740 25.02670 12.11517 27.72893\n108       19.77011 14.66013 24.88009 11.95507 27.58515\n109       19.87214 14.75976 24.98453 12.05343 27.69086\n110       19.80362 14.69015 24.91709 11.98325 27.62399\n111       19.84964 14.73568 24.96359 12.02852 27.67076\n112       19.81874 14.70456 24.93291 11.99728 27.64019\n113       19.83949 14.72521 24.95376 12.01788 27.66110\n114       19.82555 14.71123 24.93987 12.00387 27.64723\n115       19.83491 14.72057 24.94925 12.01320 27.65662\n116       19.82863 14.71428 24.94297 12.00690 27.65035\n117       19.83285 14.71849 24.94720 12.01112 27.65457\n118       19.83001 14.71566 24.94437 12.00828 27.65174\n119       19.83191 14.71756 24.94627 12.01018 27.65365\n120       19.83064 14.71628 24.94499 12.00890 27.65237\n121       19.83150 14.71714 24.94585 12.00976 27.65323\n122       19.83092 14.71656 24.94527 12.00919 27.65265\n123       19.83131 14.71695 24.94566 12.00957 27.65304\n124       19.83105 14.71669 24.94540 12.00931 27.65278\n125       19.83122 14.71686 24.94558 12.00949 27.65295\n\n\n- 직접 계산\n\ncoef(fit)\n\nar1-0.671544059932036intercept19.8311503070686\n\n\n\nhat_phi &lt;- coef(fit)[1]\nhat_mu &lt;- coef(fit)[2]\n\n\nhat_mu + hat_phi * (z[100] - hat_mu) # l= 1 z_100_(1)\nhat_mu + hat_phi^2 * (z[100] - hat_mu) # l= 2 z_100_(2)\n\nintercept: 20.8222488141294\n\n\nintercept: 19.1655839918444\n\n\n\n100번째를 기준으로 그 다음값을 구하고 싶어.\n\n\nl &lt;- 1:10\nsapply(l, function(x) hat_mu + hat_phi^x * (z[100] - hat_mu))\n\nintercept20.8222488141294intercept19.1655839918444intercept20.2781074125482intercept19.5309989178393intercept20.0327151895859intercept19.6957906075232intercept19.9220503092525intercept19.7701069505542intercept19.8721436105341intercept19.8036214976293\n\n\n\nplot(forecast_fit)\n\n\n\n\n\n점점 평균값으로 수렴한다.\nAR process의 정보가 점점 사라지는 것..\n\n\nggplot2::autoplot(forecast_fit)\n\n\n\n\n\nsarima_fit &lt;- astsa::sarima.for(z,25,1,0,0)  # z함수, 25개 볼거야, p, d, q\n\n\n\n\n\nsarima_fit$pred\nsarima_fit$se\n\nA Time Series:\n20.822248348976219.165583955951220.278107009891819.530998814194220.03271484974219.695790450069619.922050013351619.770106758347419.872143341492819.803621285020419.84963686177219.818735376720519.839487083985819.825551399221619.834909824885719.828625230164119.832845612120719.83001143988719.831914711281119.830636580772219.831494901662719.830918501407819.831305579547819.831045639540519.831220200696\n\n\nA Time Series:\n2.957007119599373.56190055669173.803344041828323.907349985366853.953358572422633.973932856363233.983176499899493.987338107391223.989213452778223.990058891462093.990440101492643.99061200438463.990689525243033.990724484437373.990740249932623.990747359699093.9907505659963.990752011943243.990752664023873.990752958093523.99075309071053.990753150516963.990753177487963.990753189651113.99075319513634\n\n\n\nhead(sarima_fit$pred + qnorm(0.975)*sarima_fit$se) ##95% 신뢰구간 상한\nhead(sarima_fit$pred - qnorm(0.975)*sarima_fit$se) ##95% 신뢰구간 하한\n\nA Time Series:\n26.617875805419526.146780763580127.732524352690327.189264060506327.78115526966327.4845557255219\n\n\nA Time Series:\n15.026620892532912.184387148322312.823689667093311.872733567882112.284274429820911.9070251746172\n\n\n\n\nEX 9.5 IMA(1,1) = ARIMA(0,1,1)\n\n차분을 했더니 MA(1)모형\n\n\nz &lt;- scan(\"eg9_5.txt\")\nforecast::ggtsdisplay(z, smooth=T)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nACF가 천천히 감소한다. (확률적 추세가 있어보임)\n\n\n##단위근 검정 : H0 : 단위근이 있다.\nfUnitRoots::adfTest(z, lags = 0, type = \"c\")\nfUnitRoots::adfTest(z, lags = 1, type = \"c\")\nfUnitRoots::adfTest(z, lags = 2, type = \"c\")\n\n\nTitle:\n Augmented Dickey-Fuller Test\n\nTest Results:\n  PARAMETER:\n    Lag Order: 0\n  STATISTIC:\n    Dickey-Fuller: -1.43\n  P VALUE:\n    0.5246 \n\nDescription:\n Tue Dec  5 20:19:59 2023 by user: \n\n\n\nTitle:\n Augmented Dickey-Fuller Test\n\nTest Results:\n  PARAMETER:\n    Lag Order: 1\n  STATISTIC:\n    Dickey-Fuller: -2.3543\n  P VALUE:\n    0.1803 \n\nDescription:\n Tue Dec  5 20:19:59 2023 by user: \n\n\n\nTitle:\n Augmented Dickey-Fuller Test\n\nTest Results:\n  PARAMETER:\n    Lag Order: 2\n  STATISTIC:\n    Dickey-Fuller: -1.7307\n  P VALUE:\n    0.4126 \n\nDescription:\n Tue Dec  5 20:19:59 2023 by user: \n\n\n\n평균이 있으니 ‘C’ 옵션을 사용하자.\n모든 차수에 대해서 p-value &lt; 0.05이므로 차분이 필요하다.\n\n\nlag_z &lt;- diff(z)\nforecast::tsdisplay(lag_z)\n\n\n\n\n\n0을 중심으로 움직인다.\nPACF가 SIN함수를 그리며 지수적으로 감소함\nACF가 1차에만 유효하고 나머지는 유효하지 않음 -&gt; MA(1)모형\n\n\n## mean : H0 : mu = 0\nt.test(lag_z)\n\n\n    One Sample t-test\n\ndata:  lag_z\nt = -0.02617, df = 298, p-value = 0.9791\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.4480209  0.4362617\nsample estimates:\n   mean of x \n-0.005879599 \n\n\n\n유의확률이 크게 나와서 평균이 0이 맞아!\n\n- 차분한 모형(평균 F)\n\nfit1 &lt;- arima(lag_z, order=c(0,0,1), include.mean = F)\nfit1\n\n\nCall:\narima(x = lag_z, order = c(0, 0, 1), include.mean = F)\n\nCoefficients:\n         ma1\n      0.7605\ns.e.  0.0342\n\nsigma^2 estimated as 9.479:  log likelihood = -760.93,  aic = 1525.86\n\n\n- 원래 모형(평균 있음)\n\nfit &lt;- arima(z, order=c(0,1,1))\nfit\n\n\nCall:\narima(x = z, order = c(0, 1, 1))\n\nCoefficients:\n         ma1\n      0.7605\ns.e.  0.0342\n\nsigma^2 estimated as 9.479:  log likelihood = -760.93,  aic = 1525.86\n\n\n\n두 가지 방법이 모두 동일하게 나온다.\n\n\\(Z_t = ε_t + 0.7605ε_t, \\hat θ = −0.7605\\)\n\n부호가 반대!!!\nMA모형 평균이 없당\n\n- 잔차분석\n\nforecast::checkresiduals(fit)\n\n\n    Ljung-Box test\n\ndata:  Residuals from ARIMA(0,1,1)\nQ* = 7.1117, df = 9, p-value = 0.6255\n\nModel df: 1.   Total lags used: 10\n\n\n\n\n\n\n\n정규분포\n10개시차까지 모든 cov가 0\nWN이다\n\n\nresid = resid(fit)\nforecast::tsdisplay(resid)\n\n\n\n\n\n# 잔차의 포트맨토 검정 ## H0 : rho1=...=rho_k=0\nportes::LjungBox(fit, lags=c(6,12,18,24))\n\n\nA matrix: 4 × 4 of type dbl\n\n\n\nlags\nstatistic\ndf\np-value\n\n\n\n\n\n6\n4.520231\n5\n0.4771812\n\n\n\n12\n7.964175\n11\n0.7165093\n\n\n\n18\n10.346863\n17\n0.8884381\n\n\n\n24\n12.926680\n23\n0.9535620\n\n\n\n\n\n\n## 정규성검정\ntseries::jarque.bera.test(resid) ##JB test H0: normal\n\n\n    Jarque Bera Test\n\ndata:  resid\nX-squared = 1.1606, df = 2, p-value = 0.5597\n\n\n\npar(mfrow=c(1,2))\nhist(resid)\n\nqqnorm(resid, pch=16)\nqqline(resid)\n\n\n\n\n\n## 잔차 검정\nastsa::sarima(z, p=0, d=1, q=1)\n\ninitial  value 1.355425 \niter   2 value 1.182804\niter   3 value 1.144176\niter   4 value 1.129179\niter   5 value 1.127095\niter   6 value 1.125914\niter   7 value 1.125753\niter   8 value 1.125727\niter   9 value 1.125726\niter  10 value 1.125726\niter  11 value 1.125726\niter  11 value 1.125726\nfinal  value 1.125726 \nconverged\ninitial  value 1.125981 \niter   2 value 1.125979\niter   3 value 1.125977\niter   4 value 1.125975\niter   5 value 1.125974\niter   6 value 1.125974\niter   6 value 1.125974\nfinal  value 1.125974 \nconverged\n\n\n$fit\n\nCall:\narima(x = xdata, order = c(p, d, q), seasonal = list(order = c(P, D, Q), period = S), \n    xreg = constant, transform.pars = trans, fixed = fixed, optim.control = list(trace = trc, \n        REPORT = 1, reltol = tol))\n\nCoefficients:\n         ma1  constant\n      0.7605   -0.0146\ns.e.  0.0342    0.3130\n\nsigma^2 estimated as 9.479:  log likelihood = -760.93,  aic = 1527.86\n\n$degrees_of_freedom\n[1] 297\n\n$ttable\n         Estimate     SE t.value p.value\nma1        0.7605 0.0342 22.2124  0.0000\nconstant  -0.0146 0.3130 -0.0468  0.9627\n\n$AIC\n[1] 5.109891\n\n$AICc\n[1] 5.110027\n\n$BIC\n[1] 5.14702\n\n\n\n\n\n\\((1-B)\\hat Z_n (l) = \\hat \\mu - \\hat \\theta \\hat \\epsilon_n: l=1\\)\n\\(\\hat \\mu: l \\geq 2\\)\n- 원데이터를예측하는 거니까 원데이터 넣어주기(차분데이터X)\n\nfore_fit &lt;- forecast::forecast(fit, 25)\nfore_fit\n\n    Point Forecast     Lo 80    Hi 80     Lo 95    Hi 95\n301       129.0191 125.07348 132.9647 122.98480 135.0534\n302       129.0191 121.03051 137.0077 116.80160 141.2366\n303       129.0191 118.43291 139.6053 112.82893 145.2093\n304       129.0191 116.35746 141.6807 109.65480 148.3834\n305       129.0191 114.57726 143.4609 106.93221 151.1060\n306       129.0191 112.99361 145.0446 104.51022 153.5280\n307       129.0191 111.55296 146.4852 102.30694 155.7313\n308       129.0191 110.22240 147.8158 100.27203 157.7662\n309       129.0191 108.98000 149.0582  98.37194 159.6663\n310       129.0191 107.81025 150.2279  96.58297 161.4552\n311       129.0191 106.70173 151.3365  94.88763 163.1506\n312       129.0191 105.64572 152.3925  93.27261 164.7656\n313       129.0191 104.63541 153.4028  91.72746 166.3107\n314       129.0191 103.66532 154.3729  90.24384 167.7944\n315       129.0191 102.73101 155.3072  88.81493 169.2233\n316       129.0191 101.82878 156.2094  87.43509 170.6031\n317       129.0191 100.95554 157.0827  86.09959 171.9386\n318       129.0191 100.10867 157.9295  84.80441 173.2338\n319       129.0191  99.28591 158.7523  83.54611 174.4921\n320       129.0191  98.48531 159.5529  82.32170 175.7165\n321       129.0191  97.70517 160.3330  81.12858 176.9096\n322       129.0191  96.94400 161.0942  79.96448 178.0737\n323       129.0191  96.20049 161.8377  78.82736 179.2108\n324       129.0191  95.47344 162.5648  77.71544 180.3228\n325       129.0191  94.76183 163.2764  76.62712 181.4111\n\n\n\nplot(fore_fit)\n\n\n\n\n\n평균으로 거의 예측이 됨.\n\n\nastsa::sarima.for(z, 25, 0,1,1)\n\n\n    $pred\n        A Time Series:\n129.010634626429128.995997383896128.981360141362128.966722898829128.952085656296128.937448413762128.922811171229128.908173928696128.893536686162128.878899443629128.864262201096128.849624958562128.834987716029128.820350473496128.805713230962128.791075988429128.776438745896128.761801503362128.747164260829128.732527018296128.717889775762128.703252533229128.688615290696128.673978048162128.659340805629\n\n    $se\n        A Time Series:\n3.078767983209466.233577059663398.260517757567489.8800214720117711.269139051042912.504885669851813.629043850556514.667293783950715.636757260028216.549527131412817.414520347620718.238535840412819.026898335418419.783870473966320.512927670008521.216947760206421.89834566636622.559171385225523.201182820112923.825900925602624.43465214773825.028601563916525.608779098379726.176100503587926.7313843307499\n\n\n\n\n\n\n\n\nastsa::sarima.for(lag_z, 25, 0,0,1)\n\n\n    $pred\n        A Time Series:\n-4.29136464101854-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003\n\n    $se\n        A Time Series:\n3.078768231977913.867966127892833.867966127892833.867966127892833.867966127892833.867966127892833.867966127892833.867966127892833.867966127892833.867966127892833.867966127892833.867966127892833.867966127892833.867966127892833.867966127892833.867966127892833.867966127892833.867966127892833.867966127892833.867966127892833.867966127892833.867966127892833.867966127892833.867966127892833.86796612789283\n\n\n\n\n\n\n\n\nfore_diff_z &lt;- astsa::sarima.for(lag_z, 25, 0,0,1, plot=F)$pred\nfore_diff_z\n\nA Time Series:\n-4.29136464101854-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003-0.014636625581003\n\n\n\nfore_diff_z_ &lt;- forecast::forecast(fit1, 25)\nfore_diff_z_$mean  # 차분한 값에 대한 예측\n\nA Time Series:\n-4.28290139590614000000000000000000000000\n\n\n\nfore_z &lt;- astsa::sarima.for(z, 25, 0,1,1, plot=F)$pred\nfore_z\n\nA Time Series:\n129.010634626429128.995997383896128.981360141362128.966722898829128.952085656296128.937448413762128.922811171229128.908173928696128.893536686162128.878899443629128.864262201096128.849624958562128.834987716029128.820350473496128.805713230962128.791075988429128.776438745896128.761801503362128.747164260829128.732527018296128.717889775762128.703252533229128.688615290696128.673978048162128.659340805629\n\n\n\nfore_z_ &lt;- forecast::forecast(fit,25)\nfore_z_$mean\n\nA Time Series:\n129.01909823039129.01909823039129.01909823039129.01909823039129.01909823039129.01909823039129.01909823039129.01909823039129.01909823039129.01909823039129.01909823039129.01909823039129.01909823039129.01909823039129.01909823039129.01909823039129.01909823039129.01909823039129.01909823039129.01909823039129.01909823039129.01909823039129.01909823039129.01909823039129.01909823039\n\n\n- 차분한 값에.. 원래데이터의 예측값을 알고 싶다면?\n\\(\\widehat{▽Z_t} = \\hat Z_t − \\hat Z_{t−1}\\)\n\\(\\hat Z_t = \\widehat{▽Z_t} + \\hat Z_{t−1}\\)\n\\(\\hat Z_{300}(1) = \\widehat{▽Z_{300}(1)} + Z_{300}\\)\n\nz_300_1 &lt;- as.numeric(fore_diff_z[1]) + z[300]\nz_300_1\n\n129.010635358981\n\n\n\\(\\hat Z_{300}(2) = \\widehat{▽Z_{300}(2)} + \\hat Z_{300}(1)\\)\n\nz_300_2 &lt;- fore_diff_z[2] + z_300_1\nz_300_2\n\n128.9959987334"
  },
  {
    "objectID": "posts/[TS] HW02.html",
    "href": "posts/[TS] HW02.html",
    "title": "[TS] HW02",
    "section": "",
    "text": "해당 자료는 전북대학교 이영미 교수님 2023고급시계열분석 자료임\ngetwd()\nsetwd(\"/home/coco/Dropbox/Scribbling/posts\")"
  },
  {
    "objectID": "posts/[TS] HW02.html#section-1",
    "href": "posts/[TS] HW02.html#section-1",
    "title": "[TS] HW02",
    "section": "(1)",
    "text": "(1)\n‘female.txt’ : 월별 전문기술행정직에 종사하는 여성근로자 수 (단위:명)\n\nfemale &lt;- scan(\"female.txt\")\n\n\nfema &lt;- ts(female, start=c(1981,1), frequency=12)\n\n\nplot(fema)\n\n\n\n\n\n시도표를 확인해보니 추세성분과 불규칙성분으로 이루어져 있다. —&gt; 이중지수평활을 사용한다.\n\n- 1모수 이중지수 평활\n\nw &lt;- c(seq(0.1, 0.8, 0.1), seq(0.81, 0.99, 0.01))\n\n\ndf &lt;- data.frame(alpha = numeric(length(w)), beta = numeric(length(w)), sse = numeric(length(w)))\nfor (i in 1:length(w)) {\n  alpha &lt;- w[i]\n  beta &lt;- w[i]\n  fit &lt;- HoltWinters(fema, alpha = alpha, beta = beta, gamma = FALSE)\n  sse &lt;- fit$SSE\n  df[i, ] &lt;- c(alpha, beta, sse)\n}\n\n\ndf\n\n\nA data.frame: 27 × 3\n\n\nalpha\nbeta\nsse\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n0.10\n0.10\n47737.16\n\n\n0.20\n0.20\n39413.25\n\n\n0.30\n0.30\n32655.02\n\n\n0.40\n0.40\n28136.56\n\n\n0.50\n0.50\n23964.31\n\n\n0.60\n0.60\n21390.42\n\n\n0.70\n0.70\n20179.01\n\n\n0.80\n0.80\n19991.82\n\n\n0.81\n0.81\n20034.76\n\n\n0.82\n0.82\n20090.85\n\n\n0.83\n0.83\n20160.82\n\n\n0.84\n0.84\n20245.43\n\n\n0.85\n0.85\n20345.55\n\n\n0.86\n0.86\n20462.10\n\n\n0.87\n0.87\n20596.12\n\n\n0.88\n0.88\n20748.74\n\n\n0.89\n0.89\n20921.19\n\n\n0.90\n0.90\n21114.85\n\n\n0.91\n0.91\n21331.22\n\n\n0.92\n0.92\n21571.99\n\n\n0.93\n0.93\n21839.02\n\n\n0.94\n0.94\n22134.40\n\n\n0.95\n0.95\n22460.49\n\n\n0.96\n0.96\n22819.94\n\n\n0.97\n0.97\n23215.75\n\n\n0.98\n0.98\n23651.34\n\n\n0.99\n0.99\n24130.60\n\n\n\n\n\n1모수 이중지수일때는 \\(\\alpha=\\beta=0.8\\)일 때, SSE값이 19991.82 값을 가진다.\n- 이중지수평활 추정\n\nfit_fema &lt;- HoltWinters(fema, gamma=FALSE)\n\n\nfit_fema\n\nHolt-Winters exponential smoothing with trend and without seasonal component.\n\nCall:\nHoltWinters(x = fema, gamma = FALSE)\n\nSmoothing parameters:\n alpha: 1\n beta : 0.01666631\n gamma: FALSE\n\nCoefficients:\n        [,1]\na 667.000000\nb   5.145043\n\n\n\npredict(fit_fema, n.ahead=12, prediction.interval = T, level=0.95) \n\n\nA Time Series: 12 × 3\n\n\n\nfit\nupr\nlwr\n\n\n\n\nJan 1990\n672.1450\n694.8066\n649.4835\n\n\nFeb 1990\n677.2901\n709.6065\n644.9736\n\n\nMar 1990\n682.4351\n722.3438\n642.5264\n\n\nApr 1990\n687.5802\n734.0440\n641.1163\n\n\nMay 1990\n692.7252\n745.1007\n640.3498\n\n\nJun 1990\n697.8703\n755.7139\n640.0266\n\n\nJul 1990\n703.0153\n766.0016\n640.0290\n\n\nAug 1990\n708.1603\n776.0399\n640.2807\n\n\nSep 1990\n713.3054\n785.8813\n640.7295\n\n\nOct 1990\n718.4504\n795.5635\n641.3374\n\n\nNov 1990\n723.5955\n805.1148\n642.0761\n\n\nDec 1990\n728.7405\n814.5572\n642.9238\n\n\n\n\n\n\nfit_fema$SSE\n\n14153.8104898823\n\n\n\n- 단순지수평활법 적합\n\nfit_fema2 &lt;- HoltWinters(fema, beta=FALSE, gamma=FALSE)\nfit_fema2\nfit_fema2$SSE\n\nHolt-Winters exponential smoothing without trend and without seasonal component.\n\nCall:\nHoltWinters(x = fema, beta = FALSE, gamma = FALSE)\n\nSmoothing parameters:\n alpha: 0.9999225\n beta : FALSE\n gamma: FALSE\n\nCoefficients:\n      [,1]\na 666.9998\n\n\n15579.4993710227\n\n\n\n- 계절지수평활법 적합\n\nfit_fema3 &lt;- HoltWinters(fema, seasonal=\"additive\")\nfit_fema3\nfit_fema3$SSE\n\nHolt-Winters exponential smoothing with trend and additive seasonal component.\n\nCall:\nHoltWinters(x = fema, seasonal = \"additive\")\n\nSmoothing parameters:\n alpha: 0.5689925\n beta : 0.01533418\n gamma: 1\n\nCoefficients:\n          [,1]\na   677.319852\nb     4.462732\ns1  -10.805353\ns2  -10.907550\ns3   13.687188\ns4   21.650246\ns5   29.187883\ns6   39.477663\ns7   33.205948\ns8   19.062994\ns9    5.235871\ns10  -3.290505\ns11 -11.437139\ns12 -10.319852\n\n\n25835.5416290603"
  },
  {
    "objectID": "posts/[TS] HW02.html#section-2",
    "href": "posts/[TS] HW02.html#section-2",
    "title": "[TS] HW02",
    "section": "(2)",
    "text": "(2)\n‘export.txt’ ; 월별수출액(단위:억$)\n\nexport &lt;- scan(\"export.txt\")\n\n\nexpo &lt;- ts(export, start=c(1981,1), frequency=12)\n\n\nplot.ts(expo)\n\n\n\n\n\n추세성분, 계절성분(주기12), 불규칙성분으로 구성되어 있다. –&gt; 계절지수 평활을 이용하자!\n\n- 가법모형\n\nfit_expo_a &lt;- HoltWinters(expo, seasonal=\"additive\") #default는 additive\nfit_expo_a\n\nHolt-Winters exponential smoothing with trend and additive seasonal component.\n\nCall:\nHoltWinters(x = expo, seasonal = \"additive\")\n\nSmoothing parameters:\n alpha: 0.3304767\n beta : 0.04369053\n gamma: 0.6102758\n\nCoefficients:\n           [,1]\na    66.9300146\nb     0.3670945\ns1   -0.9590061\ns2   -2.3460160\ns3   -1.4388022\ns4    4.0020957\ns5   -2.8546787\ns6   -3.1036803\ns7    0.4486017\ns8    3.3118493\ns9    1.6302355\ns10   8.0731659\ns11 -11.5480012\ns12  -8.8892298\n\n\n\nfit_expo_m &lt;- HoltWinters(expo, seasonal=\"multiplicative\")\nfit_expo_m\n\nHolt-Winters exponential smoothing with trend and multiplicative seasonal component.\n\nCall:\nHoltWinters(x = expo, seasonal = \"multiplicative\")\n\nSmoothing parameters:\n alpha: 0.4285887\n beta : 0.02606259\n gamma: 0.4083356\n\nCoefficients:\n          [,1]\na   68.7136998\nb    0.5141142\ns1   0.9879869\ns2   0.9620299\ns3   0.9996946\ns4   1.0834386\ns5   0.9897148\ns6   0.9744549\ns7   1.0319339\ns8   1.0425559\ns9   1.0357445\ns10  1.1286956\ns11  0.8073858\ns12  0.8400441\n\n\n\nfit_expo_a$SSE\n\n1135.42182593918\n\n\n\nfit_expo_m$SSE\n\n1048.2628205778\n\n\n승법 모형의 SSE가 더 작으니 이 모형을 선택하자.\n- 이중지수\n\nfit_expo2&lt;- HoltWinters(expo, gamma=FALSE )\nfit_expo2$SSE\n\n3338.93312288425\n\n\n\nfit_expo3&lt;- HoltWinters(expo, beta=FALSE, gamma=FALSE )\nfit_expo3$SSE\n\n3311.57259808501\n\n\n\nhw1_6\n\nz &lt;- scan(\"export.txt\")\nn &lt;- length(z)\nn\n\n86\n\n\n\nz_ts &lt;- ts(z, frequency=12)\ncycle(z_ts)\n\n\nA Time Series: 8 × 12\n\n\n\nJan\nFeb\nMar\nApr\nMay\nJun\nJul\nAug\nSep\nOct\nNov\nDec\n\n\n\n\n1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n3\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n4\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n5\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n6\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n7\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n8\n1\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nseasonal_I &lt;- as.factor(cycle(z_ts))\nt &lt;- 1:n\nm2 &lt;- lm(z~t+seasonal_I)\n\n\nsummary(m2)\n\n\nCall:\nlm(formula = z ~ t + seasonal_I)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-10.8562  -2.2938   0.1567   2.6730   9.3951 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  21.98000    1.73500  12.669  &lt; 2e-16 ***\nt             0.43721    0.01893  23.097  &lt; 2e-16 ***\nseasonal_I2   1.71779    2.16697   0.793 0.430512    \nseasonal_I3   9.21741    2.24422   4.107 0.000103 ***\nseasonal_I4   7.37163    2.24366   3.286 0.001566 ** \nseasonal_I5   9.30299    2.24326   4.147 8.98e-05 ***\nseasonal_I6  12.96578    2.24302   5.780 1.72e-07 ***\nseasonal_I7   9.16286    2.24294   4.085 0.000112 ***\nseasonal_I8   7.73422    2.24302   3.448 0.000941 ***\nseasonal_I9  11.07272    2.24326   4.936 4.88e-06 ***\nseasonal_I10 10.68409    2.24366   4.762 9.47e-06 ***\nseasonal_I11 12.37545    2.24422   5.514 5.03e-07 ***\nseasonal_I12 18.57967    2.24494   8.276 4.26e-12 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 4.334 on 73 degrees of freedom\nMultiple R-squared:  0.9011,    Adjusted R-squared:  0.8848 \nF-statistic:  55.4 on 12 and 73 DF,  p-value: &lt; 2.2e-16\n\n\n\nSSE &lt;- sum(m2$residuals^2)\nSSE\n\n1371.05731181319\n\n\n\n과제 1에서 적합한 선형모델보다 평활법(계절지수, 가법_승법_)으로 적합한 모델의 SSE가 너 낮게 나왔다."
  },
  {
    "objectID": "posts/[TS] HW02.html#교수님은-계절성분이-없고-추세만-있어-모형을-적합하였음",
    "href": "posts/[TS] HW02.html#교수님은-계절성분이-없고-추세만-있어-모형을-적합하였음",
    "title": "[TS] HW02",
    "section": "(1) 교수님은 계절성분이 없고 추세만 있어 모형을 적합하였음",
    "text": "(1) 교수님은 계절성분이 없고 추세만 있어 모형을 적합하였음\n적절한 추세 모형을 적합시킨 후 잔차분석을 하여라.\n계절추세모형 \\[Z_t = \\beta_0 + \\beta_1 + \\sum_{i=1}^l 2\\delta_i \\times I_{tl} + \\epsilon_t$, 단 $\\delta_1=0\\]\n\ncycle(data1_)\n\n\nA Time Series: 9 × 12\n\n\n\nJan\nFeb\nMar\nApr\nMay\nJun\nJul\nAug\nSep\nOct\nNov\nDec\n\n\n\n\n1981\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n1982\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n1983\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n1984\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n1985\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n1986\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n1987\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n1988\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n1989\n1\n2\n3\n4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nseasonal_I &lt;- as.factor(cycle(data1_))\n#t &lt;- 1:n\nm2 &lt;- lm(y~ 0+ t +seasonal_I)\n\n\nsummary(m2)\n\n\nCall:\nlm(formula = y ~ 0 + t + seasonal_I)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.4526 -0.8739 -0.1227  0.8747  3.7703 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \nt             0.09971    0.00507  19.667  &lt; 2e-16 ***\nseasonal_I1   1.24446    0.54646   2.277  0.02522 *  \nseasonal_I2   0.21542    0.54878   0.393  0.69562    \nseasonal_I3   0.72572    0.55115   1.317  0.19138    \nseasonal_I4   0.15582    0.55354   0.282  0.77899    \nseasonal_I5   0.82223    0.56859   1.446  0.15175    \nseasonal_I6   1.36889    0.57074   2.398  0.01860 *  \nseasonal_I7   0.11609    0.57292   0.203  0.83990    \nseasonal_I8   1.70838    0.57513   2.970  0.00384 ** \nseasonal_I9   0.63848    0.57739   1.106  0.27185    \nseasonal_I10  0.51670    0.57967   0.891  0.37519    \nseasonal_I11  1.50257    0.58200   2.582  0.01150 *  \nseasonal_I12  0.86957    0.58436   1.488  0.14035    \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 1.46 on 87 degrees of freedom\nMultiple R-squared:  0.9584,    Adjusted R-squared:  0.9522 \nF-statistic: 154.2 on 13 and 87 DF,  p-value: &lt; 2.2e-16\n\n\n\n적합모형\n\n\\(\\hat Z_t = 0.09971 t +1.24446 I_{t1} \\dots +0.86957 I_{t12}\\)\n- 잔차검정\n\nresid_m &lt;- resid(m2)\nplot(resid_m, pch=16, type='l')\nabline(h=0, lty=2)\n\n\n\n\n\nt.test(resid_m)\n\n\n    One Sample t-test\n\ndata:  resid_m\nt = 4.1891e-18, df = 99, p-value = 1\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.2716042  0.2716042\nsample estimates:\n   mean of x \n5.734074e-19 \n\n\n\nbptest(m2)\n\n\n    studentized Breusch-Pagan test\n\ndata:  m2\nBP = 11.4, df = 12, p-value = 0.495\n\n\n\nhist(resid_m)\n\n\n\n\n\nshapiro.test(resid_m)\n\n\n    Shapiro-Wilk normality test\n\ndata:  resid_m\nW = 0.99218, p-value = 0.8338\n\n\n\ndwtest(m2, alternative = \"two.sided\") \n\n\n    Durbin-Watson test\n\ndata:  m2\nDW = 2.1153, p-value = 0.5919\nalternative hypothesis: true autocorrelation is not 0"
  },
  {
    "objectID": "posts/[TS] HW02.html#section-4",
    "href": "posts/[TS] HW02.html#section-4",
    "title": "[TS] HW02",
    "section": "(2)",
    "text": "(2)\n(1)에서 적합한 추세모형에서 1∼ 10 시차 후의 예측값을 구하여라.\n\nnew_dt &lt;- data.frame( t = n + (1:10),\n seasonal_I = as.factor(c(5:12,1,2)))\nnew_dt\n\n\nA data.frame: 10 × 2\n\n\nt\nseasonal_I\n\n\n&lt;int&gt;\n&lt;fct&gt;\n\n\n\n\n101\n5\n\n\n102\n6\n\n\n103\n7\n\n\n104\n8\n\n\n105\n9\n\n\n106\n10\n\n\n107\n11\n\n\n108\n12\n\n\n109\n1\n\n\n110\n2\n\n\n\n\n\n\npredict(m2, new_dt)\n\n110.8932810379944211.539654967107310.386568516118412.0785772090589511.108388789967611.0863188261925712.1718992420353811.6386155761184912.1132169540061011.1838957059557\n\n\n\na &lt;- predict(m2, new_dt)"
  },
  {
    "objectID": "posts/[TS] HW02.html#section-5",
    "href": "posts/[TS] HW02.html#section-5",
    "title": "[TS] HW02",
    "section": "(3)",
    "text": "(3)\n적절한 평활법을 적용한 후 잔차분석을 하여라.\n\n시도표에서 등분산으로 보이니 가법모형 적용\n\n\nfit_data_a &lt;- HoltWinters(data1_, seasonal=\"additive\")\nfit_data_a\n\nHolt-Winters exponential smoothing with trend and additive seasonal component.\n\nCall:\nHoltWinters(x = data1_, seasonal = \"additive\")\n\nSmoothing parameters:\n alpha: 0.1075626\n beta : 0.03407311\n gamma: 0.2315828\n\nCoefficients:\n           [,1]\na   11.19913122\nb    0.10780161\ns1  -0.07016081\ns2   0.66130312\ns3  -0.85496062\ns4   0.47657925\ns5  -0.88090464\ns6  -0.76891779\ns7   0.57746908\ns8  -0.22134249\ns9   0.45302226\ns10 -1.33334803\ns11 -0.44879394\ns12 -0.72310382\n\n\n\nls(fit_data_a)\n\n\n'alpha''beta''call''coefficients''fitted''gamma''seasonal''SSE''x'\n\n\n\nfit_data_a$SSE\n\n241.40429231834\n\n\n\nf_resid_m &lt;- resid(fit_data_a)\nplot(f_resid_m, pch=16, type='l')\nabline(h=0, lty=2)\n\n\n\n\n\nt.test(f_resid_m)\n\n\n    One Sample t-test\n\ndata:  f_resid_m\nt = -0.97545, df = 87, p-value = 0.332\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.5232992  0.1787545\nsample estimates:\n mean of x \n-0.1722723 \n\n\n\nhist(f_resid_m)\n\n\n\n\n\n\nshapiro.test(f_resid_m)\n\n\n    Shapiro-Wilk normality test\n\ndata:  f_resid_m\nW = 0.99387, p-value = 0.9586"
  },
  {
    "objectID": "posts/[TS] HW02.html#section-6",
    "href": "posts/[TS] HW02.html#section-6",
    "title": "[TS] HW02",
    "section": "(4)",
    "text": "(4)\n(3)의 결과를 이용하여 1∼10시차 후의 예측값을 구하여라.\n\npredict(fit_data_a, n.ahead=10, prediction.interval = T, level=0.95)\n\n\nA Time Series: 10 × 3\n\n\n\nfit\nupr\nlwr\n\n\n\n\nMay 1989\n11.23677\n14.48390\n7.989648\n\n\nJun 1989\n12.07604\n15.34319\n8.808889\n\n\nJul 1989\n10.66758\n13.95596\n7.379195\n\n\nAug 1989\n12.10692\n15.41775\n8.796079\n\n\nSep 1989\n10.85723\n14.19177\n7.522695\n\n\nOct 1989\n11.07702\n14.43652\n7.717522\n\n\nNov 1989\n12.53121\n15.91695\n9.145475\n\n\nDec 1989\n11.84020\n15.25346\n8.426943\n\n\nJan 1990\n12.62237\n16.06444\n9.180291\n\n\nFeb 1990\n10.94380\n14.41600\n7.471600\n\n\n\n\n\n\nprediction_result &lt;- predict(fit_data_a, n.ahead=10, prediction.interval = T, level=0.95)\n\n\nb &lt;- prediction_result[1:10]"
  },
  {
    "objectID": "posts/[TS] HW02.html#section-7",
    "href": "posts/[TS] HW02.html#section-7",
    "title": "[TS] HW02",
    "section": "(5)",
    "text": "(5)\n실제 1, 2, . . . , 10 시차 후의 관측값이 ’data1 new.csv’일 때, (2), (4)의 결과를 이용하여 어느 모형이 더 적합했는지에 대해 비교하여라.\n\ndata1new &lt;- read.csv(\"data1_new.csv\")\n\n\nsum((data1new$z - a)^2)\n\n38.302781319433\n\n\n\nsum((data1new$z - b)^2)\n\n35.5553155409459\n\n\n(4)의 모형이 더 적합했다."
  },
  {
    "objectID": "posts/[TS] HW02.html#section-9",
    "href": "posts/[TS] HW02.html#section-9",
    "title": "[TS] HW02",
    "section": "(1)",
    "text": "(1)\n추세분석을 이용한 분해법에 의한 각 성분의 시계열 그림을 그려라.\n- 추세성분 추정: \\(Z_t = \\beta_0 + \\beta_1t + \\epsilon_t\\) 적합\n\nfit0 &lt;- lm(export  ~ t)\nsummary(fit0)\n\n\nCall:\nlm(formula = export ~ t)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-15.1230  -4.0245  -0.6699   4.1819  17.3619 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 30.62075    1.37454   22.28   &lt;2e-16 ***\nt            0.44520    0.02744   16.22   &lt;2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 6.318 on 84 degrees of freedom\nMultiple R-squared:  0.758, Adjusted R-squared:  0.7552 \nF-statistic: 263.2 on 1 and 84 DF,  p-value: &lt; 2.2e-16\n\n\n\\(\\hat T_t = 30.621 + 0.445 t\\)\n\nhat_Tt &lt;- fitted(fit0)\nts.plot(export, hat_Tt,\n     col=1:2,\n     lty=1:2,\n     lwd=2:3,\n     ylab=\"export\", xlab=\"time\",\n     main=\"시계열과 분해법에 의한 추세성분\")\nlegend(\"topleft\", lty=1:2, col=1:2, lwd=2:3, c(\"z\", \"추세성분\"))\n\n\n\n\n- 계절성분\n\n## 원시계열에서 추세성분 조정\nadjtrend_ = export-hat_Tt\nplot.ts(adjtrend_, lwd=2)\n\n\n\n\n\ny = factor(cycle(adjtrend_))\nfit1 &lt;- lm(adjtrend_ ~ 0+y)  # 제약조건 beta0=0\nsummary(fit1)\n\n\nCall:\nlm(formula = adjtrend_ ~ 0 + y)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-10.5684  -2.4909   0.0174   2.5296   9.4910 \n\nCoefficients:\n    Estimate Std. Error t value Pr(&gt;|t|)    \ny1   -8.9845     1.5237  -5.897 1.03e-07 ***\ny2   -7.2747     1.5237  -4.774 8.87e-06 ***\ny3    0.2649     1.6289   0.163   0.8713    \ny4   -1.5889     1.6289  -0.975   0.3325    \ny5    0.3345     1.6289   0.205   0.8379    \ny6    3.9893     1.6289   2.449   0.0167 *  \ny7    0.1784     1.6289   0.110   0.9131    \ny8   -1.2583     1.6289  -0.772   0.4423    \ny9    2.0722     1.6289   1.272   0.2073    \ny10   1.6756     1.6289   1.029   0.3070    \ny11   3.3590     1.6289   2.062   0.0427 *  \ny12   9.5552     1.6289   5.866 1.17e-07 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 4.31 on 74 degrees of freedom\nMultiple R-squared:  0.5901,    Adjusted R-squared:  0.5236 \nF-statistic: 8.878 on 12 and 74 DF,  p-value: 3.121e-10\n\n\n\\(\\hat S_t = -8.9845 I_1 + \\dots +9.5552I_{12}\\)\n\nhat_St &lt;- fitted(fit1)\nts.plot(hat_St, main=\"추정된 계절성분\")\n\n\n\n\n- 불규칙성분\n\nhat_It &lt;- export - hat_Tt - hat_St\nts.plot(hat_It); abline(h=0)\n\n\n\n\n- 추정\n\npred_a &lt;- hat_Tt + hat_St\n\nts.plot(export, pred_a, col=1:2, lty=1:2, lwd=2:3,ylab=\"export\", xlab=\"time\")\n\n\n\n\n\nsum((export-pred_a)^2)\n\n1374.40699758301"
  },
  {
    "objectID": "posts/[TS] HW02.html#section-10",
    "href": "posts/[TS] HW02.html#section-10",
    "title": "[TS] HW02",
    "section": "(2)",
    "text": "(2)\n추정된 불규칙성분의 분석을 통해 적용된 분해법이 적절했는지 논하여라.\n\nt.test(hat_It) #H0 : mu=E(It)=0\n\n\n    One Sample t-test\n\ndata:  hat_It\nt = 8.2505e-16, df = 85, p-value = 1\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.8621323  0.8621323\nsample estimates:\n   mean of x \n3.577489e-16 \n\n\n\n평균이 0이다.\n\n\nhist(hat_It)\n\n\n\n\n\ndwtest(lm(hat_It~ t),\n alternative = 'two.sided')\n\n\n    Durbin-Watson test\n\ndata:  lm(hat_It ~ t)\nDW = 0.79194, p-value = 1.672e-10\nalternative hypothesis: true autocorrelation is not 0\n\n\n양의 상관관계가 있어보인다.\n\nbptest(lm(hat_It ~ t, data = export))\n\n\n    studentized Breusch-Pagan test\n\ndata:  lm(hat_It ~ t, data = export)\nBP = 4.276, df = 1, p-value = 0.03865"
  },
  {
    "objectID": "posts/[TS] HW02.html#section-11",
    "href": "posts/[TS] HW02.html#section-11",
    "title": "[TS] HW02",
    "section": "(3)",
    "text": "(3)\n이동평균을 이용한 분해법에 의한 각 성분의 시계열 그림을 그려라\n\n이동평균분해법\n\nz &lt;- scan(\"export.txt\")\nt &lt;- 1:length(z)\nexport &lt;- ts(z, start=c(1981,1), frequency=12)\n#plot.ts(export, lwd=2, main=\"TS plot for export data\")\nplot.ts(export)\nlines(ma(export,3), col='blue', lwd=2)\nlines(ma(export,12), col='red', lwd=2)\nlegend('topleft', lty=c(1,1,1), col=c('black', 'blue', 'red'),\n     lwd=c(1,1,2),\n     c('원시계열', \"CSMA(m=3)\", \"CSMA(m=12)\"),\n     bty='n')\n\n\n\n\n\ntrend = ma(export, 12)\nplot.ts(trend, lwd=2)\n\n\n\n\n\nadj_trend &lt;-export - trend\nplot.ts(adj_trend, lwd=2)\n\n\n\n\n\nseasonal &lt;- tapply(adj_trend, cycle(adj_trend), function(y) mean(y,na.rm=T))\nseasonal\n\n1-8.573472222222222-7.6545138888888930.418888888888894-1.699652777777785-0.17437500000000163.798194444444457-0.08499999999999838-1.490773809523891.85138888888889100.540972222222225113.35631944444444129.97465277777778\n\n\n\nsummary(lm(adj_trend~0+as.factor(cycle(adj_trend))))\n\n\nCall:\nlm(formula = adj_trend ~ 0 + as.factor(cycle(adj_trend)))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-8.3226 -1.4141  0.3492  1.8005  4.9008 \n\nCoefficients:\n                              Estimate Std. Error t value Pr(&gt;|t|)    \nas.factor(cycle(adj_trend))1   -8.5735     1.1268  -7.608 1.89e-10 ***\nas.factor(cycle(adj_trend))2   -7.6545     1.1268  -6.793 4.90e-09 ***\nas.factor(cycle(adj_trend))3    0.4189     1.1268   0.372  0.71135    \nas.factor(cycle(adj_trend))4   -1.6997     1.1268  -1.508  0.13654    \nas.factor(cycle(adj_trend))5   -0.1744     1.1268  -0.155  0.87752    \nas.factor(cycle(adj_trend))6    3.7982     1.1268   3.371  0.00129 ** \nas.factor(cycle(adj_trend))7   -0.0850     1.0432  -0.081  0.93533    \nas.factor(cycle(adj_trend))8   -1.4908     1.0432  -1.429  0.15803    \nas.factor(cycle(adj_trend))9    1.8514     1.1268   1.643  0.10544    \nas.factor(cycle(adj_trend))10   0.5410     1.1268   0.480  0.63286    \nas.factor(cycle(adj_trend))11   3.3563     1.1268   2.979  0.00413 ** \nas.factor(cycle(adj_trend))12   9.9747     1.1268   8.852 1.33e-12 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 2.76 on 62 degrees of freedom\n  (12 observations deleted due to missingness)\nMultiple R-squared:  0.7721,    Adjusted R-squared:  0.728 \nF-statistic:  17.5 on 12 and 62 DF,  p-value: 1.335e-15\n\n\n\nmean(seasonal)\n\n0.021885747354499\n\n\n\nseasonal &lt;- seasonal - mean(seasonal) #평균을 0으로 수정\nseasonal\n\n1-8.595357969576722-7.6763996362433930.3970031415343914-1.721538525132285-0.196260747354563.776308697089957-0.1068857473544978-1.512659556878391.82950314153439100.519086474867726113.33443369708995129.95276703042328\n\n\n\nSt = rep(seasonal, 7)\nplot.ts(St)\n\n\n\n\n\nirregular &lt;- export - trend - St\nplot.ts(irregular)\nabline(h=0, lty=2)\n\nWarning message in `-.default`(export - trend, St):\n“longer object length is not a multiple of shorter object length”\n\n\n\n\n\n\n\ndecompose 함수 이용\n\ndec_fit &lt;- decompose(export, 'additive')\ndec_fit\n\n$x\n       Jan   Feb   Mar   Apr   May   Jun   Jul   Aug   Sep   Oct   Nov   Dec\n1981 20.40 23.01 25.73 25.55 29.96 31.94 29.18 29.48 31.83 32.93 32.18 34.95\n1982 28.98 29.32 36.53 36.73 40.29 42.41 42.24 34.79 44.41 40.42 44.24 52.45\n1983 39.59 41.21 47.92 46.26 47.73 50.52 52.03 53.10 53.93 52.56 58.10 64.01\n1984 44.01 43.37 53.30 47.84 49.50 54.27 52.33 52.68 54.75 53.04 56.55 62.14\n1985 39.61 46.80 52.71 49.50 52.15 56.89 54.90 53.21 61.12 52.85 60.20 70.23\n1986 46.39 48.65 57.26 58.39 61.46 66.60 55.40 57.63 56.80 66.37 66.77 76.97\n1987 53.92 51.44 64.29 63.61 63.37 70.53 63.52 61.77 66.25 71.26 66.29 70.07\n1988 53.34 59.68                                                            \n\n$seasonal\n            Jan        Feb        Mar        Apr        May        Jun\n1981 -8.5953580 -7.6763996  0.3970031 -1.7215385 -0.1962607  3.7763087\n1982 -8.5953580 -7.6763996  0.3970031 -1.7215385 -0.1962607  3.7763087\n1983 -8.5953580 -7.6763996  0.3970031 -1.7215385 -0.1962607  3.7763087\n1984 -8.5953580 -7.6763996  0.3970031 -1.7215385 -0.1962607  3.7763087\n1985 -8.5953580 -7.6763996  0.3970031 -1.7215385 -0.1962607  3.7763087\n1986 -8.5953580 -7.6763996  0.3970031 -1.7215385 -0.1962607  3.7763087\n1987 -8.5953580 -7.6763996  0.3970031 -1.7215385 -0.1962607  3.7763087\n1988 -8.5953580 -7.6763996                                            \n            Jul        Aug        Sep        Oct        Nov        Dec\n1981 -0.1068857 -1.5126596  1.8295031  0.5190865  3.3344337  9.9527670\n1982 -0.1068857 -1.5126596  1.8295031  0.5190865  3.3344337  9.9527670\n1983 -0.1068857 -1.5126596  1.8295031  0.5190865  3.3344337  9.9527670\n1984 -0.1068857 -1.5126596  1.8295031  0.5190865  3.3344337  9.9527670\n1985 -0.1068857 -1.5126596  1.8295031  0.5190865  3.3344337  9.9527670\n1986 -0.1068857 -1.5126596  1.8295031  0.5190865  3.3344337  9.9527670\n1987 -0.1068857 -1.5126596  1.8295031  0.5190865  3.3344337  9.9527670\n1988                                                                  \n\n$trend\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug\n1981       NA       NA       NA       NA       NA       NA 29.28583 29.90625\n1982 34.27833 35.04375 35.78917 36.62542 37.44000 38.67167 39.84292 40.78042\n1983 44.72292 45.89375 47.05333 47.95583 49.03917 50.09833 50.76417 51.03833\n1984 52.18083 52.17583 52.19250 52.24667 52.20208 52.05958 51.79833 51.75792\n1985 52.53625 52.66542 52.95292 53.21042 53.35458 53.84375 54.46333 54.82292\n1986 57.62583 57.83083 57.83500 58.21833 59.05542 59.61000 60.20458 60.63458\n1987 62.59667 63.10750 63.67375 64.27125 64.45500 64.14750 63.83583 64.15500\n1988       NA       NA                                                      \n          Sep      Oct      Nov      Dec\n1981 30.61917 31.53500 32.43125 33.29792\n1982 41.75042 42.62208 43.32917 43.97708\n1983 51.35250 51.64250 51.78208 52.01208\n1984 51.87625 51.92083 52.10042 52.32000\n1985 55.08958 55.64958 56.40792 57.20042\n1986 61.04375 61.55417 61.85125 62.09458\n1987       NA       NA       NA       NA\n1988                                    \n\n$random\n              Jan          Feb          Mar          Apr          May\n1981           NA           NA           NA           NA           NA\n1982  3.297024636  1.952649636  0.343830192  1.826121858  3.046260747\n1983  3.462441303  2.992649636  0.469663525  0.025705192 -1.112905919\n1984  0.424524636 -1.129433697  0.710496858 -2.685128142 -2.505822586\n1985 -4.330892030  1.810982970 -0.639919808 -1.988878142 -1.008322586\n1986 -2.640475364 -1.504433697 -0.972003142  1.893205192  2.600844081\n1987 -0.081308697 -3.991100364  0.219246858  1.060288525 -0.888739253\n1988           NA           NA                                       \n              Jun          Jul          Aug          Sep          Oct\n1981           NA  0.001052414  1.086409557 -0.618669808  0.875913525\n1982 -0.037975364  2.503969081 -4.477757110  0.830080192 -2.721169808\n1983 -3.354642030  1.372719081  3.574326224  0.747996858  0.398413525\n1984 -1.565892030  0.638552414  2.434742890  1.044246858  0.600080192\n1985 -0.730058697  0.543552414 -0.100257110  4.200913525 -3.318669808\n1986  3.213691303 -4.697697586 -1.491923776 -6.073253142  4.296746858\n1987  2.606191303 -0.208947586 -0.872340443           NA           NA\n1988                                                                 \n              Nov          Dec\n1981 -3.585683697 -8.300683697\n1982 -2.423600364 -1.479850364\n1983  2.983482970  2.045149636\n1984  1.115149636 -0.132767030\n1985  0.457649636  3.076816303\n1986  1.584316303  4.922649636\n1987           NA           NA\n1988                          \n\n$figure\n [1] -8.5953580 -7.6763996  0.3970031 -1.7215385 -0.1962607  3.7763087\n [7] -0.1068857 -1.5126596  1.8295031  0.5190865  3.3344337  9.9527670\n\n$type\n[1] \"additive\"\n\nattr(,\"class\")\n[1] \"decomposed.ts\"\n\n\n\nplot(dec_fit)\n\n\n\n\n\ndec_fit2 &lt;- decompose(export, type = \"multiplicative\")\nplot(dec_fit2)\n\n\n\n\n\n## 가법모형 vs. 승법모형\npred_dec &lt;-dec_fit$trend+dec_fit$seasonal\npred_dec2 &lt;-dec_fit2$trend*dec_fit2$seasonal\n\nts.plot(pred_dec, pred_dec2, col=1:2, lty=1:2, ylab=\"food\", xlab=\"time\")\nlegend(\"topleft\", lty=1:2, col=1:2, c(\"가법모형\", \"승법모형\"))\n\n\n\n\n\n\nstl함수 이용\n\nstl_fit1 &lt;- stl(export, s.window=12)\nstl_fit1\n\n Call:\n stl(x = export, s.window = 12)\n\nComponents\n            seasonal    trend    remainder\nJan 1981 -8.03824134 26.81776  1.620485206\nFeb 1981 -6.63002814 27.30969  2.330333480\nMar 1981 -0.13110622 27.80163 -1.940526967\nApr 1981 -2.16782904 28.29357 -0.575742678\nMay 1981 -0.02387280 28.83742  1.146455416\nJun 1981  3.12006392 29.38126 -0.561326978\nJul 1981  0.19259616 29.92511 -0.937704893\nAug 1981 -1.39615399 30.52457  0.351588714\nSep 1981  2.08889246 31.12402 -1.382914272\nOct 1981  0.78594126 31.72348  0.420580381\nNov 1981  3.14306515 32.53144 -3.494505630\nDec 1981  9.25329283 33.33940 -7.642695428\nJan 1982 -8.18853645 34.14736  3.021171726\nFeb 1982 -6.74205914 35.02084  1.041217119\nMar 1982 -0.11359668 35.89432  0.749277352\nApr 1982 -2.14642909 36.76780  2.108632461\nMay 1982 -0.04765717 37.74653  2.591125433\nJun 1982  3.22089766 38.72527  0.463835494\nJul 1982  0.10549237 39.70400  2.430505678\nAug 1982 -1.41993463 40.61875 -4.408810621\nSep 1982  2.04045104 41.53349  0.836060406\nOct 1982  0.89651488 42.44823 -2.924746731\nNov 1982  3.20038177 43.30548 -2.265858677\nDec 1982  9.40282354 44.16272 -1.115545502\nJan 1983 -8.33955445 45.01997  2.909587433\nFeb 1983 -6.85397510 46.00456  2.059414793\nMar 1983 -0.09513416 46.98915  1.025980554\nApr 1983 -2.12310901 47.97375  0.409362112\nMay 1983 -0.06855425 48.79308 -0.994521923\nJun 1983  3.32542520 49.61241 -2.417830650\nJul 1983  0.02288888 50.43173  1.575376391\nAug 1983 -1.43898388 50.82162  3.717366595\nSep 1983  1.99697212 51.21150  0.721528047\nOct 1983  1.01133498 51.60138 -0.052717360\nNov 1983  3.26122886 51.76546  3.073314934\nDec 1983  9.55393181 51.92953  2.526538154\nJan 1984 -8.63020919 52.09360  0.546605321\nFeb 1984 -7.05228753 52.10779 -1.685505543\nMar 1984 -0.02362451 52.12198  1.201642230\nApr 1984 -2.05361665 52.13617 -2.242554829\nMay 1984 -0.12808589 52.06895 -2.440860110\nJun 1984  3.51447214 52.00172 -1.246192660\nJul 1984 -0.10905922 51.93450  0.504564171\nAug 1984 -1.46691120 51.96370  2.183207296\nSep 1984  1.91927553 51.99291  0.837811709\nOct 1984  1.27127927 52.02212 -0.253400890\nNov 1984  3.36913024 52.18801  0.992858614\nDec 1984  9.78170407 52.35390  0.004395256\nJan 1985 -8.94600253 52.51979 -3.963787671\nFeb 1985 -7.27425538 52.75254  1.321719247\nMar 1985  0.02571289 52.98528 -0.300994963\nApr 1985 -2.00432115 53.21803 -1.713706857\nMay 1985 -0.20583899 53.58938 -1.233544814\nJun 1985  3.68735310 53.96074 -0.758092699\nJul 1985 -0.25511780 54.33210  0.823022411\nAug 1985 -1.50687743 54.83525 -0.118367709\nSep 1985  1.83161162 55.33839  3.949993500\nOct 1985  1.52356468 55.84154 -4.515109315\nNov 1985  3.47168119 56.34545  0.382869321\nDec 1985 10.00699125 56.84935  3.373654404\nJan 1986 -9.17170413 57.35326 -1.791555078\nFeb 1986 -7.34995073 57.74972 -1.749772497\nMar 1986  0.01792431 58.14619 -0.904111549\nApr 1986 -2.00925233 58.54265  1.856601080\nMay 1986 -0.25578936 59.05157  2.664216221\nJun 1986  3.77379354 59.56050  3.265711445\nJul 1986 -0.35038247 60.06942 -4.319034430\nAug 1986 -1.52477949 60.53012 -1.375341107\nSep 1986  1.78721730 60.99082 -5.978041605\nOct 1986  1.64995719 61.45153  3.268514805\nNov 1986  3.51677071 61.86477  1.388457561\nDec 1986 10.11358765 62.27802  4.578396895\nJan 1987 -9.37155076 62.69126  0.600291580\nFeb 1987 -7.40218241 63.09442 -4.252233068\nMar 1987  0.03120809 63.49757  0.761220146\nApr 1987 -1.99625213 63.90073  1.705524066\nMay 1987 -0.29094930 63.96479 -0.303838557\nJun 1987  3.87191769 64.02885  2.629234647\nJul 1987 -0.43707012 64.09291 -0.135837345\nAug 1987 -1.53661763 64.17446 -0.867840726\nSep 1987  1.74637383 64.25601  0.247616920\nOct 1987  1.77824626 64.33756  5.144193599\nNov 1987  3.56210251 64.39946 -1.671565286\nDec 1987 10.21967043 64.46137 -4.611035849\nJan 1988 -9.50110743 64.52327 -1.682160623\nFeb 1988 -7.47541608 64.56485  2.590568880\n\n\n\nplot(stl_fit1)\n\n\n\n\n\npred_stl &lt;- stl_fit1$time.series[,1]+stl_fit1$time.series[,2]"
  },
  {
    "objectID": "posts/[TS] HW02.html#section-12",
    "href": "posts/[TS] HW02.html#section-12",
    "title": "[TS] HW02",
    "section": "(4)",
    "text": "(4)\n추정된 불규칙성분의 분석을 통해 적용된 분해법이 적절했는지 논하여라.\n\nt.test(irregular)\n\n\n    One Sample t-test\n\ndata:  irregular\nt = 0.074013, df = 73, p-value = 0.9412\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.5674456  0.6112171\nsample estimates:\n mean of x \n0.02188575 \n\n\n\ndwtest(lm(irregular~1))\n\n\n    Durbin-Watson test\n\ndata:  lm(irregular ~ 1)\nDW = 1.9469, p-value = 0.4094\nalternative hypothesis: true autocorrelation is greater than 0\n\n\n\ndwtest(lm(irregular~t))\n\n\n    Durbin-Watson test\n\ndata:  lm(irregular ~ t)\nDW = 1.9477, p-value = 0.3643\nalternative hypothesis: true autocorrelation is greater than 0\n\n\n\n추정\n\nfit_ &lt;- trend + St\nts.plot(export, fit_, lty=1:2, col=1:2, lwd=2:3)\n\nWarning message in `+.default`(trend, St):\n“longer object length is not a multiple of shorter object length”"
  },
  {
    "objectID": "posts/[TS] HW02.html#section-13",
    "href": "posts/[TS] HW02.html#section-13",
    "title": "[TS] HW02",
    "section": "(5)",
    "text": "(5)\n각 분해법에 의한 결과를 1-시착 후 예측오차의 제곱합 (SSE) 기준하에서 2번의 결과와 예측 력을 비교하여라.\n- decompose\n\nsum((export-pred_dec)^2, na.rm=T) #SSE - 가법\nsum((export-pred_dec2)^2, na.rm=T) #SSE - 승법\n\n472.381499188028\n\n\n353.176184412717\n\n\n- stl\n\nsum((export-pred_stl)^2) \n\n506.70574427387"
  },
  {
    "objectID": "posts/[TS] HW02.html#section-15",
    "href": "posts/[TS] HW02.html#section-15",
    "title": "[TS] HW02",
    "section": "(1)",
    "text": "(1)\n왜 log 변환이 필요한지에 대해 간단히 설명하여라.\n시도표를 확인하면 시간에 따라 분산이 커지는 것을 볼수 있다. 이는 모델의 결과가 잘못된 값이 나올 수 있다."
  },
  {
    "objectID": "posts/[TS] HW02.html#section-16",
    "href": "posts/[TS] HW02.html#section-16",
    "title": "[TS] HW02",
    "section": "(2)",
    "text": "(2)\n적절한 추세 모형을 적합시킨 후 잔차분석을 하여라.\n\nz5_ts &lt;- ts(z5, frequency=12)\ncycle(z5_ts)\n\n\nA Time Series: 12 × 12\n\n\n\nJan\nFeb\nMar\nApr\nMay\nJun\nJul\nAug\nSep\nOct\nNov\nDec\n\n\n\n\n1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n3\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n4\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n5\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n6\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n7\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n8\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n9\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n11\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n12\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n\n\n\nseasonal_I &lt;- as.factor(cycle(z5_ts))\nt &lt;- 1:length(z5)\nm3 &lt;- lm(log(z5)~t+seasonal_I)\n\n\nsummary(m3)\n\n\nCall:\nlm(formula = log(z5) ~ t + seasonal_I)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.159814 -0.044426  0.000623  0.045572  0.151846 \n\nCoefficients:\n               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   4.7246982  0.0198289 238.274  &lt; 2e-16 ***\nt             0.0100999  0.0001252  80.666  &lt; 2e-16 ***\nseasonal_I2  -0.0220859  0.0254094  -0.869  0.38633    \nseasonal_I3   0.1095029  0.0254104   4.309 3.19e-05 ***\nseasonal_I4   0.0768102  0.0254119   3.023  0.00302 ** \nseasonal_I5   0.0762636  0.0254141   3.001  0.00322 ** \nseasonal_I6   0.1990500  0.0254168   7.831 1.45e-12 ***\nseasonal_I7   0.3049668  0.0254202  11.997  &lt; 2e-16 ***\nseasonal_I8   0.2976260  0.0254242  11.706  &lt; 2e-16 ***\nseasonal_I9   0.1461189  0.0254289   5.746 6.08e-08 ***\nseasonal_I10  0.0110851  0.0254341   0.436  0.66367    \nseasonal_I11 -0.1341418  0.0254399  -5.273 5.39e-07 ***\nseasonal_I12 -0.0214153  0.0254464  -0.842  0.40156    \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.06224 on 131 degrees of freedom\nMultiple R-squared:  0.982, Adjusted R-squared:  0.9803 \nF-statistic: 594.1 on 12 and 131 DF,  p-value: &lt; 2.2e-16\n\n\n\n적합된 모형: \\(\\hat Z_t = 4.72 + 0.01t - 0.022I_{t2} + \\dots - 0.021 I_{t12}\\)\n\n\ntmp.data &lt;- data.frame(\n day = seq(ymd(\"1984-01-01\"),\n by='1 month', length.out=length(z5)),\n z=z5\n)\n\n\n\npar(mfrow=c(2,1)) \nplot(z~day, tmp.data, type='l')\nlines(tmp.data$day, exp(fitted(m3)), col='red', lty=2, lwd=2)    # m3에 exp함수 처리\nplot(log(z)~day, tmp.data, type='l')\nlines(tmp.data$day, fitted(m3), col='red', lty=2, lwd=2)\n\n\n\n\n\nresid_m3 &lt;- resid(m3)\nplot(resid_m3, pch=16, type='l')\nabline(h=0, lty=2)\n\n\n\n\n\nt.test(resid_m3)\n\n\n    One Sample t-test\n\ndata:  resid_m3\nt = 1.4082e-16, df = 143, p-value = 1\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.009812747  0.009812747\nsample estimates:\n   mean of x \n6.990845e-19 \n\n\n\nhist(resid_m3)\n\n\n\n\n\nlmtest::bptest(m3)\n\n\n    studentized Breusch-Pagan test\n\ndata:  m3\nBP = 5.9163, df = 12, p-value = 0.9202\n\n\n\nlmtest::dwtest(m3, alternative=\"two.sided\")\n\n\n    Durbin-Watson test\n\ndata:  m3\nDW = 0.40831, p-value &lt; 2.2e-16\nalternative hypothesis: true autocorrelation is not 0\n\n\n\nsum((summary(m3)$residual)^2)\n\n0.507459833285849"
  },
  {
    "objectID": "posts/[TS] HW02.html#section-17",
    "href": "posts/[TS] HW02.html#section-17",
    "title": "[TS] HW02",
    "section": "(3)",
    "text": "(3)\n적절한 평활법을 적용한 후 잔차분석을 하여라.\n\n가법모형\n\nfit_hw_l &lt;- HoltWinters(usapass_l, seasonal=\"additive\")\n\n\nfit_hw_l\n\nHolt-Winters exponential smoothing with trend and additive seasonal component.\n\nCall:\nHoltWinters(x = usapass_l, seasonal = \"additive\")\n\nSmoothing parameters:\n alpha: 0.3447498\n beta : 0.003585913\n gamma: 0.879488\n\nCoefficients:\n            [,1]\na    6.165298459\nb    0.008744433\ns1  -0.073696849\ns2  -0.142822821\ns3  -0.039964334\ns4   0.015968620\ns5   0.033673237\ns6   0.157016140\ns7   0.300626468\ns8   0.285698068\ns9   0.098491289\ns10 -0.021898771\ns11 -0.190036243\ns12 -0.096734648\n\n\n\n\npar(mfrow=c(2,1)) \nplot(z~day, tmp.data, type='l')\nlines(tmp.data$day, exp(fitted(m3)), col='red', lty=2, lwd=2)    # m3에 exp함수 처리\nplot(log(z)~day, tmp.data, type='l')\nlines(tmp.data$day, fitted(m3), col='red', lty=2, lwd=2)\n\n\n\n\n\nfit6= hw(usapass_l,\n alpha = fit_hw_l$alpha,\n beta = fit_hw_l$beta,\n gamma = fit_hw_l$gamma,\n seasonal=\"additive\",\n initial=\"simple\",\n h=12)\nfit6$model\n\nHolt-Winters' additive method \n\nCall:\n hw(y = usapass_l, h = 12, seasonal = \"additive\", initial = \"simple\",  \n\n Call:\n     alpha = fit_hw_l$alpha, beta = fit_hw_l$beta, gamma = fit_hw_l$gamma) \n\n  Smoothing parameters:\n    alpha = 0.3447 \n    beta  = 0.0036 \n    gamma = 0.8795 \n\n  Initial states:\n    l = 4.8362 \n    b = 0.0079 \n    s = -0.0655 -0.1918 -0.0571 0.0765 0.161 0.161\n           0.0691 -0.0404 0.0236 0.0466 -0.0655 -0.1177\n\n  sigma:  0.0425\n\n\n- 원데이터와 비교그림 넣어주기 위해서 exp취해줌\n\nplot(usapass)\nlines(exp(fit6$fitted), lwd=3, col='red', lty=2)\n\n\n\n\n\nts.plot(fit6$residual, ylab=\"residual\",\n main=\"가법모형의 잔차 그림\"); abline(h=0)\n\n\n\n\n\nt.test(fit6$residual)\n\n\n    One Sample t-test\n\ndata:  fit6$residual\nt = 0.72402, df = 143, p-value = 0.4702\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.004441394  0.009575433\nsample estimates:\n  mean of x \n0.002567019 \n\n\n\ndwtest(lm(fit6$residual~1), alternative = 'two.sided')\n\n\n    Durbin-Watson test\n\ndata:  lm(fit6$residual ~ 1)\nDW = 1.5421, p-value = 0.005659\nalternative hypothesis: true autocorrelation is not 0\n\n\n\n\n승법모형(원데이터로 진행해봄)\n\nfit_hw_m &lt;- HoltWinters(usapass, seasonal=\"multiplicative\")\n\n\nplot(fit_hw_m)\n\n\n\n\n\nfit7= hw(usapass,\n alpha = fit_hw_m$alpha,\n beta = fit_hw_m$beta,\n gamma = fit_hw_m$gamma,\n seasonal=\"multiplicative\",\n initial=\"simple\",\n h=12)\nfit7$model\n\nHolt-Winters' multiplicative method \n\nCall:\n hw(y = usapass, h = 12, seasonal = \"multiplicative\", initial = \"simple\",  \n\n Call:\n     alpha = fit_hw_m$alpha, beta = fit_hw_m$beta, gamma = fit_hw_m$gamma) \n\n  Smoothing parameters:\n    alpha = 0.3205 \n    beta  = 0.0239 \n    gamma = 1 \n\n  Initial states:\n    l = 126.6667 \n    b = 1.0833 \n    s = 0.9316 0.8211 0.9395 1.0737 1.1684 1.1684\n           1.0658 0.9553 1.0184 1.0421 0.9316 0.8842\n\n  sigma:  0.0465\n\n\n\nts.plot(fit7$residual, ylab=\"residual\",\n main=\"승법모형의 잔차 그림\"); abline(h=0)\n\n\n\n\n\nt.test(fit7$residual)\n\n\n    One Sample t-test\n\ndata:  fit7$residual\nt = 1.0873, df = 143, p-value = 0.2787\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.9675137  3.3332414\nsample estimates:\nmean of x \n 1.182864 \n\n\n\ndwtest(lm(fit7$residual~1), alternative = 'two.sided')\n\n\n    Durbin-Watson test\n\ndata:  lm(fit7$residual ~ 1)\nDW = 1.4311, p-value = 0.0005873\nalternative hypothesis: true autocorrelation is not 0"
  },
  {
    "objectID": "posts/[TS] HW02.html#section-18",
    "href": "posts/[TS] HW02.html#section-18",
    "title": "[TS] HW02",
    "section": "(4)",
    "text": "(4)\n적절한 분해법에 의해 각 성분을 분해해여 시계열 그림을 그려라.\n\ndecopose분해법\n\ndec_f_a_l &lt;- decompose(usapass_l, 'additive')\n\n\nplot(dec_f_a_l) # 로그변환 후 분해법\n\n\n\n\n\n# ## 승법모형 비교용\n# dec_f_m &lt;- decompose(usapass, type = \"multiplicative\")\n# plot(dec_f_m)\n\n\npred_dec_ &lt;- dec_f_a_l$trend + dec_f_a_l$seasonal\n\n\n## 가법모형 vs. 승법모형\npred_dec_ &lt;-dec_f_a_l$trend+dec_f_a_l$seasonal\npred_dec2_ &lt;-dec_f_m$trend*dec_f_m$seasonal\n\nts.plot(exp(pred_dec_), pred_dec2_, col=1:2, lty=1:2, ylab=\"usapass\", xlab=\"time\")\nlegend(\"topleft\", lty=1:2, col=1:2, c(\"가법모형\", \"승법모형\"))\n\n\n\n\n\nsum((usapass_l-pred_dec_)^2, na.rm=T) \n\n0.161507492507272\n\n\n\n\nstl(비교용)\n\nstl_fit11 &lt;- stl(usapass_l, s.window=12)\n\n\nplot(stl_fit11)\n\n\n\n\n\n## stl vs. decompose\npred_stl &lt;- stl_fit11$time.series[,1]+stl_fit11$time.series[,2]\n\nts.plot(pred_stl, pred_dec_, col=1:2, lty=1:2, lwd=2:3, ylab=\"food\", xlab=\"time\",\n     main=\"stl vs. decomse\")\nlegend(\"topleft\", lty=1:2, col=1:2, c(\"stl\", \"decomse\"))\n\n\n\n\n\n### SSE : 1-시차 후 예측 오차 제곱합\nsum((usapass_l-pred_stl)^2) #144\nsum((usapass_l-pred_dec_)^2, na.rm=T) #144-12=132\n\n0.101745211385709\n\n\n0.161507492507272\n\n\n\n\n추세를 이용한 분해법(가법)\n\nfit45 &lt;- lm(usapass_l ~ t)\nsummary(fit45)\n\n\nCall:\nlm(formula = usapass_l ~ t)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.30875 -0.10481 -0.01736  0.09677  0.36311 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 4.8131072  0.0237011  203.07   &lt;2e-16 ***\nt           0.0100802  0.0002836   35.54   &lt;2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.1415 on 142 degrees of freedom\nMultiple R-squared:  0.899, Adjusted R-squared:  0.8982 \nF-statistic:  1263 on 1 and 142 DF,  p-value: &lt; 2.2e-16\n\n\n\n\\(\\hat T_t = 4.8131072 + 0.0100802t\\)\n\n\nhat_Tt_l &lt;- fitted(fit45)\n\nts.plot(usapass_l, hat_Tt_l,\n     col=1:2,\n     lty=1:2,\n     lwd=2:3,\n     ylab=\"usapass_l\", xlab=\"time\",\n     main=\"log변환한 시계열과 분해법에 의한 추세성분\")\nlegend(\"topleft\", lty=1:2, col=1:2, lwd=2:3, c(\"ln(z)\", \"추세성분\"))\n\n\n\n\n\n## 원시계열에서 추세성분 조정\nadjtrend_l = usapass_l-hat_Tt_l\nplot.ts(adjtrend_l, lwd=2)\n\n\n\n\n\n## 지시함수를 이용한 계절성분 추정\ny = factor(cycle(adjtrend_l)) #범주형 변수로 변환\n\nfit456 &lt;- lm(adjtrend_l ~ 0+y)\nsummary(fit456)\n\n\nCall:\nlm(formula = adjtrend_l ~ 0 + y)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.158515 -0.044012  0.001096  0.045041  0.152437 \n\nCoefficients:\n    Estimate Std. Error t value Pr(&gt;|t|)    \ny1  -0.08709    0.01790  -4.865 3.20e-06 ***\ny2  -0.10916    0.01790  -6.098 1.11e-08 ***\ny3   0.02245    0.01790   1.254  0.21195    \ny4  -0.01022    0.01790  -0.571  0.56899    \ny5  -0.01075    0.01790  -0.600  0.54926    \ny6   0.11206    0.01790   6.260 5.00e-09 ***\ny7   0.21799    0.01790  12.178  &lt; 2e-16 ***\ny8   0.21067    0.01790  11.769  &lt; 2e-16 ***\ny9   0.05919    0.01790   3.306  0.00122 ** \ny10 -0.07583    0.01790  -4.236 4.24e-05 ***\ny11 -0.22103    0.01790 -12.348  &lt; 2e-16 ***\ny12 -0.10829    0.01790  -6.049 1.40e-08 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.06201 on 132 degrees of freedom\nMultiple R-squared:  0.8214,    Adjusted R-squared:  0.8052 \nF-statistic: 50.59 on 12 and 132 DF,  p-value: &lt; 2.2e-16\n\n\n\\(\\hat S_t = -0.08709I_1 + \\dots - 0.10829I_{12}\\)\n\nhat_St_l &lt;- fitted(fit456)\nts.plot(hat_St_l, main=\"추정된 계절성분\")\n\n\n\n\n\nhat_It_l &lt;- usapass_l - hat_Tt_l - hat_St_l\nts.plot(hat_It_l); abline(h=0)\n\n\n\n\n- 추정\n\npred_a_l &lt;- hat_Tt_l + hat_St_l\n\n\nts.plot(usapass, exp(pred_a_l), col=1:2, lty=1:2, lwd=2:3,ylab=\"usapass\", xlab=\"time\",\n     main=\"시계열과 분해법에 의한 추정값\")\nlegend(\"topleft\", lty=1:2, col=1:2, c(\"Z\", \"추정값\"))\n\n\n\n\n\n\n추세를 이용한 분해법(승법)\n\n## 추세성분 추정\nfit5 &lt;- lm(usapass ~ t ) \nsummary(fit5)\n\n\nCall:\nlm(formula = usapass ~ t)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-95.238 -31.381  -6.677  24.113 163.347 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 87.41968    7.91971   11.04   &lt;2e-16 ***\nt            2.67074    0.09477   28.18   &lt;2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 47.27 on 142 degrees of freedom\nMultiple R-squared:  0.8483,    Adjusted R-squared:  0.8473 \nF-statistic: 794.3 on 1 and 142 DF,  p-value: &lt; 2.2e-16\n\n\n\n\\(\\hat T_t = 87.41968 + 2.67074t\\)\n\n\nts.plot(usapass, fitted(fit5) , col=1:2, lty=1:2, lwd=2:3, ylab=\"usapass\", xlab=\"time\",\n main=\"원시계열과 분해법에 의한 추세성분\")\nlegend(\"topleft\", lty=1:2, col=1:2, c(\"원시계열\", \"추세성분\"))\n\n\n\n\n\nfit5_ &lt;- lm(usapass ~ t + I(t^2)) \nsummary(fit5_)\n\n\nCall:\nlm(formula = usapass ~ t + I(t^2))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-101.286  -27.201   -7.821   20.791  145.107 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 1.113e+02  1.172e+01   9.494  &lt; 2e-16 ***\nt           1.689e+00  3.733e-01   4.525 1.27e-05 ***\nI(t^2)      6.770e-03  2.494e-03   2.715  0.00746 ** \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 46.25 on 141 degrees of freedom\nMultiple R-squared:  0.8559,    Adjusted R-squared:  0.8538 \nF-statistic: 418.6 on 2 and 141 DF,  p-value: &lt; 2.2e-16\n\n\n\nts.plot(usapass, fitted(fit5), fitted(fit5_), col=1:3, lty=1:2, lwd=2:3, ylab=\"usapass\",\n main=\"원시계열과 분해법에 의한 추세성분\")\nlegend(\"topleft\", lty=1:2, col=1:3, c(\"원시계열\", \"추세성분\", \"2차 추세성분\"))\n\n\n\n\n\n## 원시계열에서 추세성분 조정\ntrend_5 = fitted(fit5)  # 1차 추세모형\nadjtrend_5 = usapass/trend_5\nplot.ts(adjtrend_5)\n\n\n\n\n\n## 원시계열에서 2차 추세성분 조정\ntrend_5_ = fitted(fit5_)  # 2차 추세모형\nadjtrend_5_ = usapass/trend_5_\nplot.ts(adjtrend_5_)\nabline(h=1, lty=2)\n\n\n\n\n\n## 지시함수를 이용한 계절성분 추정\ny = factor(cycle(adjtrend_5_)) \nfit55 &lt;- lm(adjtrend_5_ ~ 0+y)\nsummary(fit55)\n\n\nCall:\nlm(formula = adjtrend_5_ ~ 0 + y)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.115502 -0.040795  0.001315  0.026514  0.177535 \n\nCoefficients:\n    Estimate Std. Error t value Pr(&gt;|t|)    \ny1   0.91079    0.01538   59.22   &lt;2e-16 ***\ny2   0.89219    0.01538   58.01   &lt;2e-16 ***\ny3   1.01655    0.01538   66.10   &lt;2e-16 ***\ny4   0.98286    0.01538   63.91   &lt;2e-16 ***\ny5   0.98163    0.01538   63.83   &lt;2e-16 ***\ny6   1.10939    0.01538   72.13   &lt;2e-16 ***\ny7   1.23340    0.01538   80.20   &lt;2e-16 ***\ny8   1.22448    0.01538   79.62   &lt;2e-16 ***\ny9   1.05099    0.01538   68.34   &lt;2e-16 ***\ny10  0.91823    0.01538   59.70   &lt;2e-16 ***\ny11  0.79424    0.01538   51.64   &lt;2e-16 ***\ny12  0.88904    0.01538   57.81   &lt;2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.05328 on 132 degrees of freedom\nMultiple R-squared:  0.9974,    Adjusted R-squared:  0.9972 \nF-statistic:  4301 on 12 and 132 DF,  p-value: &lt; 2.2e-16\n\n\n\\(\\hat S_t = 0.91079I_1 + \\dots + 0.88904I_{12}\\)\n\nseasonal &lt;- fitted(fit55)\nts.plot(seasonal, main=\"추정된 계절성분\")\n\n\n\n\n\nts.plot(adjtrend_5_, seasonal, col=1:2, lty=1:2, lwd=2:3, main=\"추세조정된 시계열\")\n\n\n\n\n\nirregular5 &lt;- usapass/trend_5/seasonal\n\nts.plot(irregular5); abline(h=1, lty=2)\n\n\n\n\n\nt.test(irregular5, mu=1)\n\n\n    One Sample t-test\n\ndata:  irregular5\nt = 1.2411, df = 143, p-value = 0.2166\nalternative hypothesis: true mean is not equal to 1\n95 percent confidence interval:\n 0.994507 1.024030\nsample estimates:\nmean of x \n 1.009268 \n\n\n\ndwtest(lm(irregular5~ 1), alternative = 'two.sided')\n\n\n    Durbin-Watson test\n\ndata:  lm(irregular5 ~ 1)\nDW = 0.19413, p-value &lt; 2.2e-16\nalternative hypothesis: true autocorrelation is not 0\n\n\n\npred_m5 &lt;- trend_5 * seasonal\n\nts.plot(usapass, pred_m5, col=1:2, lty=1:2, lwd=2:3, ylab=\"food\", xlab=\"time\",\n main=\"원시계열과 분해법에 의한 추정값\")\nlegend(\"topleft\", lty=1:2, col=1:2, c(\"원시계열\", \"추정값\"))"
  },
  {
    "objectID": "posts/[TS] HW02.html#틀림-ㅠㅠ",
    "href": "posts/[TS] HW02.html#틀림-ㅠㅠ",
    "title": "[TS] HW02",
    "section": "(5) 틀림 ㅠㅠ",
    "text": "(5) 틀림 ㅠㅠ\n각 분석방법에 의한 결과를 1-시착 후 예측오차의 제곱합 (SSE) 기준하에서 비교하여라.\n- 추세모형\n\nsum((m3$residuals)^2)\n\n0.507459833285849\n\n\n- 평활법\n\nexp(fit_hw_l$SSE)\n\n1.24913252727246\n\n\n- decompose\n\nsum((usapass_l-pred_dec_)^2, na.rm=T) #SSE - 가법\n\n0.161507492507272\n\n\n- stl\n\nsum((usapass_l-pred_stl)^2,na.rm=T)\n\n0.101745211385709\n\n\n- 추세를 이용한 분해법(가법)\n\nsum((usapass_l-pred_a_l)^2)\n\n0.507555612028427"
  },
  {
    "objectID": "posts/[TS] HW02_A.html",
    "href": "posts/[TS] HW02_A.html",
    "title": "[TS] HW02_Answer",
    "section": "",
    "text": "해당 자료는 전북대학교 이영미 교수님 2023고급시계열분석 자료임\n############## package\nlibrary(forecast) #ses\nlibrary(data.table)\nlibrary(ggplot2)\nlibrary(lmtest) #dwtest\nlibrary(TTR) #SMA\nlibrary(lubridate)\nlibrary(gridExtra)\n\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n\nLoading required package: zoo\n\n\nAttaching package: ‘zoo’\n\n\nThe following objects are masked from ‘package:base’:\n\n    as.Date, as.Date.numeric\n\n\n\nAttaching package: ‘lubridate’\n\n\nThe following objects are masked from ‘package:data.table’:\n\n    hour, isoweek, mday, minute, month, quarter, second, wday, week,\n    yday, year\n\n\nThe following objects are masked from ‘package:base’:\n\n    date, intersect, setdiff, union"
  },
  {
    "objectID": "posts/[TS] HW02_A.html#section-2",
    "href": "posts/[TS] HW02_A.html#section-2",
    "title": "[TS] HW02_Answer",
    "section": "(1)",
    "text": "(1)\n\nz &lt;- scan(\"female.txt\")\n\n\nplot.ts(z)\n\n\n\n\n\n추세가 있기 때문에 이중지수평활법을 사용한다.\n\n\nfemale_smoothing &lt;- HoltWinters(z, gamma = FALSE)\nfemale_smoothing\n\nHolt-Winters exponential smoothing with trend and without seasonal component.\n\nCall:\nHoltWinters(x = z, gamma = FALSE)\n\nSmoothing parameters:\n alpha: 1\n beta : 0.01666631\n gamma: FALSE\n\nCoefficients:\n        [,1]\na 667.000000\nb   5.145043\n\n\n\nplot(female_smoothing, lwd=2)\nlegend(\"topleft\", legend=c(\"z\",expression(alpha == 1~\",\"~beta==0.02)), lty=1, lwd=2)\n\n\n\n\n- 예측오차 분석\n\nhead(female_smoothing$fitted)\n\n\nA Time Series: 6 × 3\n\n\n\nxhat\nlevel\ntrend\n\n\n\n\n3\n230.0000\n223\n7.000000\n\n\n4\n235.9833\n229\n6.983334\n\n\n5\n241.9669\n235\n6.966945\n\n\n6\n233.7175\n227\n6.717501\n\n\n7\n242.7555\n236\n6.755542\n\n\n8\n238.5763\n232\n6.576287\n\n\n\n\n\n\nHoltWinters 함수를 사용하는 경우, 이중지수 평활값이 3번째부터 구해진다. 따라서 예측오차 역시 원데이터의 3번째 값부터 구할 수 있다.\n\n\nresid_female &lt;- z[-(1:2)] - female_smoothing$fitted[,1] #또는\nresid_female &lt;- resid(female_smoothing) #같은 방법임\n\n\nplot.ts(resid_female)\nabline(h=0, lty=2)\n\n\n\n\n\n예측오차의 경우 0을 중심으로 대칭이고, 이분산성은 없어 보인다.\n\n\nt.test(resid_female)\n\n\n    One Sample t-test\n\ndata:  resid_female\nt = -0.93497, df = 105, p-value = 0.3519\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -3.276746  1.176749\nsample estimates:\nmean of x \n-1.049998 \n\n\n\nt-test 결과 예측오차의 평균은 0이라고 할 수 있다.\n\n\nlmtest::dwtest(lm(resid_female~1), alternative=\"two.sided\")\n\n\n    Durbin-Watson test\n\ndata:  lm(resid_female ~ 1)\nDW = 1.7861, p-value = 0.2662\nalternative hypothesis: true autocorrelation is not 0\n\n\n\nDW test 결과 예측오차들 간의 자기 상관은 없는 것으로 보인다.\n따라서 예측오차는 분석 결과 평활 결과는 적합하다고 할 수 있다."
  },
  {
    "objectID": "posts/[TS] HW02_A.html#section-3",
    "href": "posts/[TS] HW02_A.html#section-3",
    "title": "[TS] HW02_Answer",
    "section": "(2)",
    "text": "(2)\n\nz &lt;- scan(\"export.txt\")\nplot.ts(z)\n\n\n\n\n\n지난 과제에 언급한대로 이 시계열에는 이분산성은 없다고 할 수 있다.\n추세와 계절성분이 있으므로 계절주기가 12, 가법형 계절평활법을 사용하는 것이 적합하다.\n계절평활을 하기 위해서는 데이터를 ts 객체로 변환해야 한다\n\n\nz_ts &lt;- ts(z, frequency=12)\n\n\nexport_smoothing &lt;- HoltWinters(z_ts)\nexport_smoothing\n\nHolt-Winters exponential smoothing with trend and additive seasonal component.\n\nCall:\nHoltWinters(x = z_ts)\n\nSmoothing parameters:\n alpha: 0.3304767\n beta : 0.04369053\n gamma: 0.6102758\n\nCoefficients:\n           [,1]\na    66.9300146\nb     0.3670945\ns1   -0.9590061\ns2   -2.3460160\ns3   -1.4388022\ns4    4.0020957\ns5   -2.8546787\ns6   -3.1036803\ns7    0.4486017\ns8    3.3118493\ns9    1.6302355\ns10   8.0731659\ns11 -11.5480012\ns12  -8.8892298\n\n\n\nplot(export_smoothing, lwd=2, lty=1:2)\nlegend(\"topleft\", legend=c(\"z\", \"HoltWinters\"), col=1:2, lty=1:2, lwd=2)\n\n\n\n\n- 예측오차분석\n\nresid_export &lt;- resid(export_smoothing)\nplot.ts(resid_export)\nabline(h=0, lty=2)\n\n\n\n\n\n예측오차의 경우 0을 중심으로 대칭이고, 이분산성은 없어 보인다\n\n\nt.test(resid_export)\n\n\n    One Sample t-test\n\ndata:  resid_export\nt = -0.99304, df = 73, p-value = 0.324\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -1.359825  0.455374\nsample estimates:\n mean of x \n-0.4522256 \n\n\n\nt-test 결과 예측오차의 평균은 0이라고 할 수 있다.\n\n\nlmtest::dwtest(lm(resid_export~1), alternative=\"two.sided\")\n\n\n    Durbin-Watson test\n\ndata:  lm(resid_export ~ 1)\nDW = 1.8163, p-value = 0.4267\nalternative hypothesis: true autocorrelation is not 0\n\n\n\nDW test 결과 예측오차들 간의 자기 상관은 없는 것으로 보인다.\n따라서 예측오차는 분석 결과 평활 결과는 적합하다고 할 수 있다.\n2장에서 계절추세 모형을 적합한 경우에는 예측오차 간에 자기 상관이 있다는 결과 를 얻었었는데, 평활을 이용한 결과 자기상관이 제거되었다.\n\n- 계절추세모형\n\nseasonal_I &lt;- as.factor(cycle(z_ts))\nt &lt;- 1:length(z)\nm2 &lt;- lm(z~t+seasonal_I)\nm3 &lt;- lm(z~t+I(t^2)+seasonal_I)\n\n\nplot(export_smoothing, lwd=2, lty=1:2)\nlines(ts(fitted(m2), frequency=12), col='blue', lty=2, lwd=2)\nlines(ts(fitted(m3), frequency=12), col='green', lty=2, lwd=2)\nlegend(\"topleft\", legend=c(\"z\", \"HoltWinters\", \"seasonal trend (1)\", \"seasonal trend (2)\"))\n\n\n\n\n- SSE 비교하기\n\nhead(export_smoothing$fitted) ## 평활값은 12시차 이후값부터 생성됨\n\n\nA Time Series: 6 × 4\n\n\n\nxhat\nlevel\ntrend\nseason\n\n\n\n\nJan 2\n23.77825\n28.21682\n0.8502812\n-5.2888542\n\n\nFeb 2\n25.99728\n30.78616\n0.9253878\n-5.7142708\n\n\nMar 2\n34.53331\n32.80963\n0.9733636\n0.7503125\n\n\nApr 2\n35.55911\n34.44285\n1.0021933\n0.1140625\n\n\nMay 2\n39.71058\n35.83200\n1.0190994\n2.8594792\n\n\nJun 2\n41.81786\n37.04258\n1.0274655\n3.7478125\n\n\n\n\n\n\nsse_smoothing &lt;- sum((z[-(1:12)]-export_smoothing$fitted[,1])^2) #또는\nsse_smoothing &lt;- export_smoothing$SSE\n\n\nsse_m2 &lt;- sum(resid(m2)^2)\nsse_m3 &lt;- sum(resid(m3)^2)\n\n\npaste0(\"SSE_smomthing = \",sse_smoothing)\npaste0(\"SSE_m2 = \", sse_m2)\npaste0(\"SSE_m3 = \", sse_m3)\n\n'SSE_smomthing = 1135.42182593918'\n\n\n'SSE_m2 = 1371.05731181319'\n\n\n'SSE_m3 = 934.603221419272'\n\n\n\n모형을 1시차 예측오차에 대한 제곱합으로 비교하면 2차추세모형을 적합한 m3의 SSE값이 가장 작고, 1차선형추세를 사용한 모형의 SSE가 가장 크다.\n\n\nmse_smoothing &lt;- mean((z[-(1:12)]-export_smoothing$fitted[,1])^2)\nmse_m2 &lt;- mean(resid(m2)^2)\nmse_m3 &lt;- mean(resid(m3)^2)\npaste0(\"MSE_smomthing = \",mse_smoothing)\npaste0(\"MSE_m2 = \", mse_m2)\npaste0(\"MSE_m3 = \", mse_m3)\n\n'MSE_smomthing = 15.3435381883673'\n\n\n'MSE_m2 = 15.9425268815487'\n\n\n'MSE_m3 = 10.8674793188287'\n\n\n\nMSE로 비교하여도 결과는 같다."
  },
  {
    "objectID": "posts/[TS] HW02_A.html#section-5",
    "href": "posts/[TS] HW02_A.html#section-5",
    "title": "[TS] HW02_Answer",
    "section": "(1)",
    "text": "(1)\n\ndt &lt;- read.csv('data1.csv')\nhead(dt)\n\n\nA data.frame: 6 × 3\n\n\n\nX\nt\nz\n\n\n\n&lt;int&gt;\n&lt;int&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n1\n1\n-1.5346871\n\n\n2\n2\n2\n2.6850469\n\n\n3\n3\n3\n-0.4288189\n\n\n4\n4\n4\n1.3724199\n\n\n5\n5\n5\n-0.9800884\n\n\n6\n6\n6\n2.4156505\n\n\n\n\n\n\nplot.ts(dt$z)\n\n\n\n\n\n추세가 있음, 계절성분은 없음\n선형추세 모형 적합\n\n\nm_trend &lt;- lm(z~t, dt)\nsummary(m_trend)\n\n\nCall:\nlm(formula = z ~ t, data = dt)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.0803 -1.0287  0.0169  0.8426  4.3288 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 0.818932   0.296301   2.764  0.00682 ** \nt           0.099619   0.005094  19.557  &lt; 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 1.47 on 98 degrees of freedom\nMultiple R-squared:  0.796, Adjusted R-squared:  0.7939 \nF-statistic: 382.5 on 1 and 98 DF,  p-value: &lt; 2.2e-16\n\n\n\n모형 적합이 잘 되었음.\n\\(\\hat Z = 0.82 + 0.10t\\)\n\n\nplot.ts(dt$z)\nabline(m_trend, col='red')\nlegend(\"topleft\", c(\"z\", \"trend\"), lty=1, col=1:2)\n\n\n\n\n- 잔차분석\n\nresid_m &lt;- resid(m_trend)\nplot.ts(resid_m)\nabline(h=0, lty=2)\n\n\n\n\n\n잔차의 경우 0을 중심으로 대칭이고, 이분산성은 없어 보인다.\n\n\nt.test(resid_m)\n\n\n    One Sample t-test\n\ndata:  resid_m\nt = -5.2362e-16, df = 99, p-value = 1\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.2902834  0.2902834\nsample estimates:\n    mean of x \n-7.660376e-17 \n\n\n\nt-test 결과 예측오차의 평균은 0이라고 할 수 있다\n\n\nlmtest::dwtest(m_trend)\n\n\n    Durbin-Watson test\n\ndata:  m_trend\nDW = 2.2164, p-value = 0.8389\nalternative hypothesis: true autocorrelation is greater than 0\n\n\n\nDW test 결과 잔차들 간의 자기 상관은 없는 것으로 보인다.\n따라서 잔차 분석 결과 추세모형 결과는 적절하다고 할 수 있다."
  },
  {
    "objectID": "posts/[TS] HW02_A.html#section-6",
    "href": "posts/[TS] HW02_A.html#section-6",
    "title": "[TS] HW02_Answer",
    "section": "(2)",
    "text": "(2)\n\nnew_dt &lt;- data.frame(t=100+(1:10))\npred_trend &lt;- predict(m_trend, new_dt)\npred_trend\n\n110.8804416292757210.9800605357706311.0796794422655411.1792983487603511.2789172552552611.3785361617501711.4781550682449811.5777739747398911.67739288123471011.7770117877295"
  },
  {
    "objectID": "posts/[TS] HW02_A.html#section-7",
    "href": "posts/[TS] HW02_A.html#section-7",
    "title": "[TS] HW02_Answer",
    "section": "(3)",
    "text": "(3)\n\n추세만 있으므로 이중지수평활 적용\n\n\nm_smoothing &lt;- HoltWinters(dt$z, gamma=FALSE)\nm_smoothing\n\nHolt-Winters exponential smoothing with trend and without seasonal component.\n\nCall:\nHoltWinters(x = dt$z, gamma = FALSE)\n\nSmoothing parameters:\n alpha: 0.496601\n beta : 0.396225\n gamma: FALSE\n\nCoefficients:\n        [,1]\na  9.7266353\nb -0.3150449\n\n\n\nplot(m_smoothing, lwd=2)\nlegend(\"topleft\", legend=c(\"z\",\"smoothing\"), lty=1, lwd=2, col=1:2)\n\n\n\n\n- 예측오차 분석\n\nresid_smoothing &lt;- dt$z[-(1:2)] - m_smoothing$fitted[,1] #또는\nresid_smoothing &lt;- resid(m_smoothing) #같은 방법임\n\n\nplot.ts(resid_smoothing)\nabline(h=0, lty=2)\n\n\n\n\n\n예측오차의 경우 0을 중심으로 대칭이고, 이분산성은 없어 보인다.\n\n\nt.test(resid_smoothing)\n\n\n    One Sample t-test\n\ndata:  resid_smoothing\nt = -1.0711, df = 97, p-value = 0.2868\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.6709125  0.2005740\nsample estimates:\n mean of x \n-0.2351693 \n\n\n\nt-test 결과 예측오차의 평균은 0이라고 할 수 있다.\n\n\nlmtest::dwtest(lm(resid_smoothing~1), alternative=\"two.sided\")\n\n\n    Durbin-Watson test\n\ndata:  lm(resid_smoothing ~ 1)\nDW = 1.9664, p-value = 0.8675\nalternative hypothesis: true autocorrelation is not 0\n\n\n\nDW test 결과 예측오차들 간의 자기 상관은 없는 것으로 보인다.\n따라서 예측오차는 분석 결과 평활 결과는 적절하다고 할 수 있다."
  },
  {
    "objectID": "posts/[TS] HW02_A.html#section-8",
    "href": "posts/[TS] HW02_A.html#section-8",
    "title": "[TS] HW02_Answer",
    "section": "(4)",
    "text": "(4)\n\npred_smoothing &lt;- predict(m_smoothing, n.ahead=10, prediction.interval = T, level=0.95)\npred_smoothing\n\n\nA Time Series: 10 × 3\n\n\n\nfit\nupr\nlwr\n\n\n\n\n101\n9.411590\n13.67142\n5.1517644\n\n\n102\n9.096545\n14.28017\n3.9129175\n\n\n103\n8.781500\n15.20395\n2.3590541\n\n\n104\n8.466456\n16.38382\n0.5490889\n\n\n105\n8.151411\n17.77356\n-1.4707380\n\n\n106\n7.836366\n19.34098\n-3.6682458\n\n\n107\n7.521321\n21.06388\n-6.0212357\n\n\n108\n7.206276\n22.92649\n-8.5139377\n\n\n109\n6.891231\n24.91716\n-11.1346959\n\n\n110\n6.576186\n27.02692\n-13.8745530\n\n\n\n\n\n\nforecast::holt(dt$z, alpha = m_smoothing$alpha, beta=m_smoothing$beta, h=10)#, initial)\n\n    Point Forecast       Lo 80    Hi 80      Lo 95    Hi 95\n101       8.862685   6.0523463 11.67302   4.564643 13.16073\n102       8.360702   4.5932352 12.12817   2.598859 14.12254\n103       7.858719   2.6320999 13.08534  -0.134705 15.85214\n104       7.356735   0.3034311 14.41004  -3.430363 18.14383\n105       6.854752  -2.3086731 16.01818  -7.159497 20.86900\n106       6.352769  -5.1561498 17.86169 -11.248603 23.95414\n107       5.850786  -8.2094249 19.91100 -15.652451 27.35402\n108       5.348803 -11.4485541 22.14616 -20.340538 31.03814\n109       4.846819 -14.8590196 24.55266 -25.290661 34.98430\n110       4.344836 -18.4296256 27.11930 -30.485697 39.17537\n\n\n\n잘려서 뒤에가 뭐라고 써있는지를 모르겠음. initial값에 뭘 지정하는 것 같은데 똑같은 값이 안나온다"
  },
  {
    "objectID": "posts/[TS] HW02_A.html#section-9",
    "href": "posts/[TS] HW02_A.html#section-9",
    "title": "[TS] HW02_Answer",
    "section": "(5)",
    "text": "(5)\n\nreal_new_dt &lt;- read.csv(\"data1_new.csv\")\nreal_new_dt\n\n\nA data.frame: 10 × 3\n\n\nX\nt\nz\n\n\n&lt;int&gt;\n&lt;int&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n101\n11.577471\n\n\n2\n102\n13.171004\n\n\n3\n103\n12.730258\n\n\n4\n104\n12.242375\n\n\n5\n105\n10.877077\n\n\n6\n106\n13.297355\n\n\n7\n107\n14.632224\n\n\n8\n108\n15.049088\n\n\n9\n109\n9.671734\n\n\n10\n110\n12.216420\n\n\n\n\n\n\nmin(dt$z)\n\n-1.53468707477591\n\n\n\nplot(dt$t,dt$z, xlim=c(1,110), ylim=c(-2, 15), type='l')\nlines(101:110, pred_trend, col=2)\nlines(101:110, pred_smoothing, col=3)\n\nERROR: Error in xy.coords(x, y): 'x' and 'y' lengths differ\n\n\n\n\n\n\nMSE, MAPE, MAE 값을 이용하여 비교할 수 있다.\n\\(MSE = \\dfrac{1}{m} \\sum_{i=1}^n \\hat e_{n-1+t}(1)^2\\)\n\\(MAPE = \\dfrac{100}{n} \\sum_{i=1}^n \\left| \\dfrac{\\hat e_{n-1+t}(1)}{Z_{n+t}} \\right|\\)\n\\(MAE = \\dfrac{1}{m} \\sum_{i=1}^m \\left| \\hat e_{n-1+t}(1) \\right|\\)\n\n\ne_trend &lt;- real_new_dt$z - pred_trend\ne_smoothing &lt;- real_new_dt$z - pred_smoothing\n\n\n(MSE_trend = mean(e_trend^2))\n(MSE_smoothing = mean(e_smoothing^2))\n(MAPE_trend = 100 * sum(abs(e_trend/ real_new_dt$z)) / 10)\n(MAPE_smoothing = 100 * sum(abs(e_smoothing/ real_new_dt$z)) / 10)\n(MAE_trend = mean(abs(e_trend)))\n(MAE_smoothing = mean(abs(e_smoothing)))\n\n3.91978903404576\n\n\n127.173436899506\n\n\n13.1385437579375\n\n\n218.735568237967\n\n\n1.69927387507187\n\n\n9.02750167882282\n\n\n\n교수님 풀이랑 smoothing 의 값이 좀 다르다.\n\n\n어떤 값을 보나 1차선형 추세 모형이 예측을 더 잘했다고 할 수 있다.\n추세가 전체적으로 변하지 않는 경우에는 평활법보다는 선형추세 모형이 더 적합하 다고 할 수 있다."
  },
  {
    "objectID": "posts/[TS] HW02_A.html#section-11",
    "href": "posts/[TS] HW02_A.html#section-11",
    "title": "[TS] HW02_Answer",
    "section": "(1)",
    "text": "(1)\n\n위에서 2차선형추세 모형이 더 적절했다고 했으므로, 2차 추세 모형을 적합한다.\n\n\nz_ts &lt;- ts(z, frequency=12)\nseasonal_I &lt;- as.factor(cycle(z_ts))\nt &lt;- 1:length(z)\n\n\ndec1_trend &lt;- fitted(lm(z~t+I(t^2))) ## 추세성분\n\n\nadjtrend = z-dec1_trend\ndec1_seasonal &lt;- fitted(lm(adjtrend ~ 0+seasonal_I)) ## 계절성분\n\n\ndec1_irr = z-dec1_trend-dec1_seasonal ## 불규칙 성분\n\n\npar(mfrow=c(3,1))\nplot.ts(dec1_trend)\nplot.ts(dec1_seasonal)\nplot.ts(dec1_irr)\nabline(h=0, lty=2)\npar9mfrow=c(1,1)"
  },
  {
    "objectID": "posts/[TS] HW02_A.html#section-12",
    "href": "posts/[TS] HW02_A.html#section-12",
    "title": "[TS] HW02_Answer",
    "section": "(2)",
    "text": "(2)\n\nplot.ts(dec1_irr)\nabline(h=0, lty=2)\n\n\n\n\n\n예측오차의 경우 0을 중심으로 대칭이고, 이분산성은 보이지 않는다.\n\n\nt.test(dec1_irr)\n\n\n    One Sample t-test\n\ndata:  dec1_irr\nt = 2.2831e-16, df = 85, p-value = 1\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.7179805  0.7179805\nsample estimates:\n   mean of x \n8.244475e-17 \n\n\n\nt-test 결과 예측오차의 평균은 0이라고 할 수 있다.\n\n\nlmtest::dwtest(lm(dec1_irr~1), alternative=\"two.sided\")\n\n\n    Durbin-Watson test\n\ndata:  lm(dec1_irr ~ 1)\nDW = 1.1429, p-value = 2.78e-05\nalternative hypothesis: true autocorrelation is not 0\n\n\n\nDW test 결과 예측오차들 간의 자기 상관은 있는 것으로 보인다.\n오차들간의 상관관계가 있는 것을 제외하고는 적절하다고 볼 수 있다."
  },
  {
    "objectID": "posts/[TS] HW02_A.html#section-13",
    "href": "posts/[TS] HW02_A.html#section-13",
    "title": "[TS] HW02_Answer",
    "section": "(3)",
    "text": "(3)\n\n이분산성을 보이지 않기 때문에 가법 모형을 사용\ndecompose 함수 사용\n\n\ndec_fit &lt;- decompose(z_ts, 'additive')\nplot(dec_fit)"
  },
  {
    "objectID": "posts/[TS] HW02_A.html#section-14",
    "href": "posts/[TS] HW02_A.html#section-14",
    "title": "[TS] HW02_Answer",
    "section": "(4)",
    "text": "(4)\n\ndec2_irr &lt;- dec_fit$random\nplot.ts(dec2_irr)\nabline(h=0, lty=2)\n\n\n\n\n예측오차의 경우 0을 중심으로 대칭이고, 이분산성은 없어 보인다.\n\nt.test(dec2_irr)\n\n\n    One Sample t-test\n\ndata:  dec2_irr\nt = 0.074013, df = 73, p-value = 0.9412\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.5674456  0.6112171\nsample estimates:\n mean of x \n0.02188575 \n\n\n\nt-test 결과 예측오차의 평균은 0이라고 할 수 있다\n\n\nlmtest::dwtest(lm(dec2_irr~1), alternative=\"two.sided\")\n\n\n    Durbin-Watson test\n\ndata:  lm(dec2_irr ~ 1)\nDW = 1.9469, p-value = 0.8188\nalternative hypothesis: true autocorrelation is not 0\n\n\n\nDW test 결과 예측오차들 간의 자기 상관은 없는 것으로 보인다.\n따라서 예측오차는 분석 결과 평활 결과는 적절하다고 할 수 있다.\n추세를 이용한 분해법에서 예측 오차는 상관관계가 있었지만, 평활법을 사용하면서 예측오차들의 상관관계를 제거할 수 있었다."
  },
  {
    "objectID": "posts/[TS] HW02_A.html#section-15",
    "href": "posts/[TS] HW02_A.html#section-15",
    "title": "[TS] HW02_Answer",
    "section": "(5)",
    "text": "(5)\n\nsse_1 = sum(dec1_irr^2)\nsse_2 = sum(dec2_irr^2, na.rm=T)\npaste0(\"SSE_1 = \", sse_1)\npaste0(\"SSE_2 = \", sse_2)\n\n'SSE_1 = 953.219486362055'\n\n\n'SSE_2 = 472.381499188028'\n\n\n\nSSE 값을 비교하였을 때, 평활에 의한 분해법의 값이 더 작다.\n\n\nmse_1 = mean(dec1_irr^2)\nmse_2 = mean(dec2_irr^2, na.rm=T)\npaste0(\"MSE_1 = \", mse_1)\npaste0(\"MSE_2 = \", mse_2)\n\n'MSE_1 = 11.0839475158378'\n\n\n'MSE_2 = 6.38353377281119'\n\n\n\nMSE 값을 비교하여도 결과가 같다.\n따라서 불규칙성분을 분석한 결과와 더불어 평활에 의한 분해법이 더 적절하다고 할 수 있다."
  },
  {
    "objectID": "posts/[TS] HW02_A.html#section-17",
    "href": "posts/[TS] HW02_A.html#section-17",
    "title": "[TS] HW02_Answer",
    "section": "(1)",
    "text": "(1)\n\n계절성분의 진폭이 시간이 흐름에 따라 증가하고 있는 것을 볼 수 있다.\n따라서 이분산성을 제거하기 위해 로그변환이 필요하다.\n\n\nlog_z &lt;- log(z)\nplot.ts(log_z)\n\n\n\n\n\n로그변환을 통해 이분산성이 제거된 것을 확인할 수 있다.\n이 자료에는 추세성분과 계절성분(주기 12)이 있다."
  },
  {
    "objectID": "posts/[TS] HW02_A.html#section-18",
    "href": "posts/[TS] HW02_A.html#section-18",
    "title": "[TS] HW02_Answer",
    "section": "(2)",
    "text": "(2)\n\n지수함수를 사용한 계절형 추세모형을 적합한다.\n\n\nz_ts &lt;- ts(z, frequency=12)\nlog_z_ts = log(z_ts)\nseasonal_I &lt;- as.factor(cycle(log_z_ts))\nt &lt;- 1:length(z)\nm_trend &lt;- lm(log_z_ts~0+t+seasonal_I)\nsummary(m_trend)\n\n\nCall:\nlm(formula = log_z_ts ~ 0 + t + seasonal_I)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.159814 -0.044426  0.000623  0.045572  0.151846 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \nt            0.0100999  0.0001252   80.67   &lt;2e-16 ***\nseasonal_I1  4.7246982  0.0198289  238.27   &lt;2e-16 ***\nseasonal_I2  4.7026123  0.0198822  236.52   &lt;2e-16 ***\nseasonal_I3  4.8342011  0.0199361  242.49   &lt;2e-16 ***\nseasonal_I4  4.8015084  0.0199907  240.19   &lt;2e-16 ***\nseasonal_I5  4.8009618  0.0200459  239.50   &lt;2e-16 ***\nseasonal_I6  4.9237482  0.0201017  244.94   &lt;2e-16 ***\nseasonal_I7  5.0296649  0.0201582  249.51   &lt;2e-16 ***\nseasonal_I8  5.0223242  0.0202153  248.44   &lt;2e-16 ***\nseasonal_I9  4.8708171  0.0202729  240.26   &lt;2e-16 ***\nseasonal_I10 4.7357833  0.0203312  232.93   &lt;2e-16 ***\nseasonal_I11 4.5905564  0.0203901  225.14   &lt;2e-16 ***\nseasonal_I12 4.7032829  0.0204496  229.99   &lt;2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.06224 on 131 degrees of freedom\nMultiple R-squared:  0.9999,    Adjusted R-squared:  0.9999 \nF-statistic: 8.844e+04 on 13 and 131 DF,  p-value: &lt; 2.2e-16\n\n\n\\(\\hat Z_t = 0.01t + 4.72I_1 + 4.70I_2 + \\dots + 4.70I_{12}\\)\n\nts.plot(log_z_ts, ts(fitted(m_trend), frequency=12), col=1:2, lty=1:2, lwd=2)\nlegend(\"topleft\", c(\"log_z\", \"trend_log\"), col=1:2, lty=1:2, lwd=2)\n\n\n\n\n\nts.plot(z_ts, ts(exp(fitted(m_trend)), frequency=12), col=1:2, lty=1:2, lwd=2)\nlegend(\"topleft\", c(\"z\", \"trend\"), col=1:2, lty=1:2, lwd=2)\n\n\n\n\n- 잔차분석\n\nresid_trend &lt;- resid(m_trend)\nplot.ts(resid_m)\nabline(h=0, lty=2)\n\n\n\n\n\n잔차의 경우 0을 중심으로 대칭이고, 이분산성은 없어 보인다\n\n\nt.test(resid_m)\n\n\n    One Sample t-test\n\ndata:  resid_m\nt = -5.2362e-16, df = 99, p-value = 1\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.2902834  0.2902834\nsample estimates:\n    mean of x \n-7.660376e-17 \n\n\n\nt-test 결과 예측오차의 평균은 0이라고 할 수 있다.\n\n\nlmtest::dwtest(m_trend, alternative=\"two.sided\")\n\n\n    Durbin-Watson test\n\ndata:  m_trend\nDW = 0.40831, p-value &lt; 2.2e-16\nalternative hypothesis: true autocorrelation is not 0\n\n\n\nDW test 결과 잔차들 간의 자기 상관이 있는 것으로 보인다.\n따라서 잔차 분석 결과 추세모형 결과는 오차간의 자기 상관이 있는 것을 제외하면 적절해 보인다. 하지만 오차간의 자기상관을 제거할 필요가 있다."
  },
  {
    "objectID": "posts/[TS] HW02_A.html#section-19",
    "href": "posts/[TS] HW02_A.html#section-19",
    "title": "[TS] HW02_Answer",
    "section": "(3)",
    "text": "(3)\n\n추세와 계절성분이 있으므로 계절평활평활을 사용한다.\n로그변환한 데이터에 대해 가법 모형을 적용할 수도 있고, 원래 데이터에 대한 승법 모형을 적합할 수도 있다.\n\n- 로그변환한 데이터에 대한 가법 모형\n\nm_smoothing &lt;- HoltWinters(log_z_ts)\nm_smoothing\n\nHolt-Winters exponential smoothing with trend and additive seasonal component.\n\nCall:\nHoltWinters(x = log_z_ts)\n\nSmoothing parameters:\n alpha: 0.3447498\n beta : 0.003585913\n gamma: 0.879488\n\nCoefficients:\n            [,1]\na    6.165298459\nb    0.008744433\ns1  -0.073696849\ns2  -0.142822821\ns3  -0.039964334\ns4   0.015968620\ns5   0.033673237\ns6   0.157016140\ns7   0.300626468\ns8   0.285698068\ns9   0.098491289\ns10 -0.021898771\ns11 -0.190036243\ns12 -0.096734648\n\n\n\nplot(m_smoothing, lwd=2, lty=1:2)\nlegend(\"topleft\", legend=c(\"log_z\", \"HoltWinters\"), col=1:2, lty=1:2, lwd=2)\n\n\n\n\n- 잔차분석\n\nresid_smooting &lt;- resid(m_smoothing)\nplot.ts(resid_smooting)\nabline(h=0, lty=2)\n\n\n\n\n\n예측오차의 경우 0을 중심으로 대칭이고, 이분산성은 없어 보인다.\n\n\nt.test(resid_smooting)\n\n\n    One Sample t-test\n\ndata:  resid_smooting\nt = 1.2026, df = 131, p-value = 0.2313\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.002766709  0.011346227\nsample estimates:\n  mean of x \n0.004289759 \n\n\n\nt-test 결과 예측오차의 평균은 0이라고 할 수 있다.\n\n\nlmtest::dwtest(lm(resid_smooting~1), alternative=\"two.sided\")\n\n\n    Durbin-Watson test\n\ndata:  lm(resid_smooting ~ 1)\nDW = 1.4549, p-value = 0.001604\nalternative hypothesis: true autocorrelation is not 0\n\n\n\nDW test 결과 예측오차들 간의 자기 상관이 있는 것으로 보인다.\n하지만, 추세모형을 적합하였을 때 얻어진 잔차에 비해 유의확률값이 크다.\n예측오차는 분석 결과 추세모형 적합 결과보다는 평활 결과가 더 적절하다고 할 수 있다.\n\n- 원 데이터에 대한 승법모형 적용\n\nm_smoothing_multi &lt;- HoltWinters(z_ts, seasonal = \"multiplicative\")\nm_smoothing_multi \n\nHolt-Winters exponential smoothing with trend and multiplicative seasonal component.\n\nCall:\nHoltWinters(x = z_ts, seasonal = \"multiplicative\")\n\nSmoothing parameters:\n alpha: 0.3204565\n beta : 0.02388265\n gamma: 1\n\nCoefficients:\n           [,1]\na   464.9721064\nb     2.7859138\ns1    0.9464640\ns2    0.8810274\ns3    0.9648716\ns4    1.0334898\ns5    1.0470250\ns6    1.1793118\ns7    1.3631491\ns8    1.3399425\ns9    1.1195987\ns10   0.9993794\ns11   0.8438225\ns12   0.9290880\n\n\n\nplot(m_smoothing_multi, lwd=2, lty=1:2)\nlegend(\"topleft\", legend=c(\"z\", \"HoltWinters (multiplicative)\"), col=1:2, lty=1:2)\n\n\n\n\n\nplot(m_smoothing_multi, lwd=1:2, lty=1:2)\nlines(exp(m_smoothing$fitted[,1]), col=4, lty=2, lwd=2)\nlegend(\"topleft\", legend=c(\"z\", \"HoltWinters (multiplicative)\", \"exp(HoltWinters)\"))\n\n\n\n\n- 승법모형에 대한 잔차분석\n\nresid_smooting_multi &lt;- resid(m_smoothing_multi)\nplot.ts(resid_smooting_multi)\nabline(h=0, lty=2)\n\n\n\n\n\n예측오차의 경우 0을 중심으로 대칭이고, 이분산성은 없어 보인다.\n\n\nt.test(resid_smooting_multi)\n\n\n    One Sample t-test\n\ndata:  resid_smooting_multi\nt = 1.5746, df = 131, p-value = 0.1178\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.4315512  3.7983414\nsample estimates:\nmean of x \n 1.683395 \n\n\n\nt-test 결과 예측오차의 평균은 0이라고 할 수 있다.\nDW test 결과 예측오차들 간의 자기 상관이 있는 것으로 보인다.\n하지만, 추세모형을 적합하였을 때 얻어진 잔차에 비해 유의확률값이 크지만, 가법 모형을 사용한 평활법에 비하면 조금 크다.\n차이가 크지 않지만, 가법 모형이 더 적절하다고 할 수 있다. 따라서 가법 모형 사용."
  },
  {
    "objectID": "posts/[TS] HW02_A.html#section-20",
    "href": "posts/[TS] HW02_A.html#section-20",
    "title": "[TS] HW02_Answer",
    "section": "(4)",
    "text": "(4)\n\n로그변환한 데이터에 대한 가법모형을 사용하거나, 원래 데이터에 대한 승법 모형 적합 가능\ndecompose 함수 사용\n\n\nm_decompose_add &lt;- decompose(log_z_ts, 'additive')\nplot(m_decompose_add)\n\n\n\n\n\nm_decompose_multi &lt;- decompose(z_ts, 'multiplicative')\nplot(m_decompose_multi)\n\n\n\n\n\nfitted_dec_add &lt;- m_decompose_add$trend + m_decompose_add$seasonal #가법모형은 더\nfitted_dec_multi &lt;- m_decompose_multi$trend * m_decompose_multi$seasonal #승법모\n\n\nts.plot(z_ts, exp(fitted_dec_add), fitted_dec_multi, col=c(1,2,4), lwd=2, lty=1:2)\nlegend(\"topleft\", c(\"z\",\"decompose_add\", \"decompose_multi\"), col=c(1,2,4), lty=1:2)\n\n\n\n\n\n가법모형과 승법 모형은 차이가 거의 없어 보임\n\n- 잔차분석을 하라는 문제는 없었지만 한 번 해보겠음.\n\nresid_decompose_add &lt;- m_decompose_add$random\nresid_decompose_multi &lt;- m_decompose_multi$random\npar(mfrow=c(1,2))\nplot.ts(resid_decompose_add, main=\"잔차그림 : 분해법(가법모형)\")\nabline(h=0, lty=2)\nplot.ts(resid_decompose_multi, main=\"잔차그림 : 분해법(승법모형)\")\nabline(h=1, lty=2)\n\n\n\n\n\n가법모형의 경우 0을 중심으로 대칭이고, 승법모형의 경우 1을 중심으로 대칭이다.\n두 경우 모두 이분산성은 없어 보인다.\n\n\nt.test(resid_decompose_add)\nt.test(resid_decompose_multi, mu=1)\n\n\n    One Sample t-test\n\ndata:  resid_decompose_add\nt = -0.28335, df = 131, p-value = 0.7774\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -0.006909609  0.005178249\nsample estimates:\n  mean of x \n-0.00086568 \n\n\n\n    One Sample t-test\n\ndata:  resid_decompose_multi\nt = -0.59098, df = 131, p-value = 0.5556\nalternative hypothesis: true mean is not equal to 1\n95 percent confidence interval:\n 0.992186 1.004219\nsample estimates:\nmean of x \n0.9982026 \n\n\n\nt-test 결과 가법모형에서 예측오차의 평균은 0이라고 할 수 있고, 승법모형에서 예 측오차의 평균은 1이라고 할 수 있다\n\n\nlmtest::dwtest(lm(resid_decompose_add~1), alternative=\"two.sided\")\nlmtest::dwtest(lm(resid_decompose_multi~1), alternative=\"two.sided\")\n\n\n    Durbin-Watson test\n\ndata:  lm(resid_decompose_add ~ 1)\nDW = 1.1441, p-value = 7.258e-07\nalternative hypothesis: true autocorrelation is not 0\n\n\n\n    Durbin-Watson test\n\ndata:  lm(resid_decompose_multi ~ 1)\nDW = 1.1426, p-value = 6.946e-07\nalternative hypothesis: true autocorrelation is not 0\n\n\n\nDW test 결과 가법,승법 모두 예측오차들 간의 자기 상관이 있는 것으로 보인다."
  },
  {
    "objectID": "posts/[TS] HW02_A.html#section-21",
    "href": "posts/[TS] HW02_A.html#section-21",
    "title": "[TS] HW02_Answer",
    "section": "(5)",
    "text": "(5)\n주의 : 예측오차의 제곱합을 구하기 위해서는 로그변환한 자료를 사용한 분석 방법 의 경우 지수함수를 이용한 역변환을 한 후 계산해야 한다.\n\ne_trend &lt;- z-exp(fitted(m_trend)) #추세모형을 적합한 경우의 예측오차\ne_smoothing_add &lt;- z[-(1:12)]-exp(m_smoothing$fitted[,1]) #평활(가법)을 적합한 경\ne_smoothing_multi &lt;- z[-(1:12)]-m_smoothing_multi$fitted[,1] #평활(가법)을 적합한\ne_decompose_add &lt;- z - exp(fitted_dec_add) #분해법(가법)을 적합한 경우의 예측오차\ne_decompose_multi &lt;- z - fitted_dec_multi #분해법(승법)을 적합한 경우의 예측오차\n\n\n#SSE\nsse1 &lt;- sum(e_trend^2, na.rm=T)\nsse2 &lt;- sum(e_smoothing_add^2, na.rm=T)\nsse3 &lt;- sum(e_smoothing_multi^2, na.rm=T)\nsse4 &lt;- sum(e_decompose_add^2, na.rm=T)\nsse5 &lt;- sum(e_decompose_multi^2, na.rm=T)\n\n\npaste0(\"추세분석에서의 SSE = \", sse1)\npaste0(\"가법 계절평활법에 의한 SSE = \", sse2)\npaste0(\"승법 계절평활법에 의한 SSE = \", sse3)\npaste0(\"가법 분해법에 의한 SSE = \", sse4)\npaste0(\"승법 분해법에 의한 SSE = \", sse5)\n\n'추세분석에서의 SSE = 49268.5277996137'\n\n\n'가법 계절평활법에 의한 SSE = 20103.3932111226'\n\n\n'승법 계절평활법에 의한 SSE = 20138.5987482274'\n\n\n'가법 분해법에 의한 SSE = 15284.0239261845'\n\n\n'승법 분해법에 의한 SSE = 14748.922939659'\n\n\n\n분해법에 의해 얻어진 예측오차의 제곱합이 가작 작았으며, 그 중 승법 모형을 적합 한 결과의 SSE 값이 더 작았다.\n추세분으로 얻어진 SSE가 가장 큰 값을 갖는다.\n\n\n#MSE\nmse1 &lt;- mean(e_trend^2, na.rm=T)\nmse2 &lt;- mean(e_smoothing_add^2, na.rm=T)\nmse3 &lt;- mean(e_smoothing_multi^2, na.rm=T)\nmse4 &lt;- mean(e_decompose_add^2, na.rm=T)\nmse5 &lt;- mean(e_decompose_multi^2, na.rm=T)\n\n\npaste0(\"추세분석에서의 MSE = \", mse1)\npaste0(\"가법 계절평활법에 의한 MSE = \", mse2)\npaste0(\"승법 계절평활법에 의한 MSE = \", mse3)\npaste0(\"가법 분해법에 의한 MSE = \", mse4)\npaste0(\"승법 분해법에 의한 MSE = \", mse5)\n\n'추세분석에서의 MSE = 342.142554163984'\n\n\n'가법 계절평활법에 의한 MSE = 152.298433417596'\n\n\n'승법 계절평활법에 의한 MSE = 152.565142032026'\n\n\n'가법 분해법에 의한 MSE = 115.788060046852'\n\n\n'승법 분해법에 의한 MSE = 111.734264694387'\n\n\n\nMSE 역시 승법 분해법을 이용했을 때 가장 작은 값을 갖는다"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Boram-coco",
    "section": "",
    "text": "Everyday with Coco"
  }
]